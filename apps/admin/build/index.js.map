{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../../../packages/ui/theme/colorPalette.tsx", "../app/const.tsx", "../app/routes/__auth.tsx", "../app/server/session.server.tsx", "../app/server/users.server.tsx", "../../../packages/database/prisma/connect.tsx", "../../../packages/ui/components/Spinner/Spinner.style.tsx", "../../../packages/ui/components/Spinner/SpinnerContainer.tsx", "../app/routes/__auth/login.tsx", "../app/components/Login/Login.helper.tsx", "../../../packages/ui/components/Button/Button.style.tsx", "../../../packages/ui/components/Button/ButtonContainer.tsx", "../../../packages/ui/components/Input/Input.style.tsx", "../../../packages/ui/components/Input/InputContainer.tsx", "../app/components/Login/Login.style.tsx", "../../../packages/ui/components/Menu/Menu.const.tsx", "../app/components/Login/Form/LoginForm.tsx", "../../../packages/ui/components/Flex/Flex.tsx", "../app/components/Login/Login.const.tsx", "../app/server/request.server.tsx", "../app/routes/__app.tsx", "../../../packages/ui/components/Menu/MenuContainer.tsx", "../../../packages/ui/components/Menu/Menu.helper.tsx", "../../../packages/ui/components/Menu/Menu.style.tsx", "../app/routes/__app/libraries/$libraryId.tsx", "../app/components/ErrorInterface/ErrorInterface.tsx", "../app/components/ErrorInterface/ErrorInterface.style.tsx", "../app/components/LayoutTitle/LayoutTitle.tsx", "../app/components/LayoutTitle/LayoutTitle.style.tsx", "../app/components/Libraries/Form/LibrariesForm.tsx", "../../../packages/ui/utils/common.tsx", "../../../packages/ui/components/TimePicker/TimePickerContainer.tsx", "../app/components/Libraries/Libraries.const.tsx", "../app/components/Libraries/Libraries.style.tsx", "../../../packages/ui/components/Autocomplete/AutocompleteContainer.tsx", "../../../packages/ui/components/Autocomplete/Autocomplete.style.tsx", "../app/components/Books/Books.style.tsx", "../app/components/Libraries/Libraries.helper.tsx", "../app/server/cities.server.tsx", "../app/transformers/libraries.transformer.tsx", "../app/server/libraries.server.tsx", "../app/routes/__app/readers/$readerId.tsx", "../app/components/Readers/Form/ReadersForm.tsx", "../../../packages/ui/components/DatePicker/DatePickerContainer.tsx", "../app/components/Readers/Readers.const.tsx", "../app/components/Readers/Readers.helper.tsx", "../app/transformers/readers.transformer.tsx", "../app/server/readers.server.tsx", "../app/server/mail.server.tsx", "../../../packages/ui/templates/NewReader.email.tsx", "../app/routes/__app/libraries/create.tsx", "../app/routes/__app/libraries/index.tsx", "../../../packages/ui/components/Table/TableContainer.tsx", "../../../packages/ui/components/Table/Table.style.tsx", "../../../packages/ui/components/Table/components/TableActions.tsx", "../app/components/Libraries/Overview/LibrariesOverview.tsx", "../app/routes/__app/readers/create.tsx", "../app/routes/__app/books/$bookId.tsx", "../app/components/Books/Books.helper.tsx", "../app/components/Books/Form/BooksForm.tsx", "../app/components/Books/Books.const.tsx", "../app/components/Books/Form/BooksUnits.tsx", "../../../packages/ui/components/ImageUploader/ImageUploader.const.tsx", "../../../packages/ui/components/ImageUploader/ImageUploader.style.tsx", "../../../packages/ui/components/ImageUploader/ImageUploaderContainer.tsx", "../app/server/categories.server.tsx", "../app/server/publishHouses.server.tsx", "../app/transformers/books.transformer.tsx", "../app/server/books.server.tsx", "../app/server/media.server.tsx", "../app/server/languages.server.tsx", "../app/routes/__app/loans/$loanId.tsx", "../app/components/Loans/Loans.const.tsx", "../app/components/Loans/Forms/LoansForm.tsx", "../app/components/Loans/Forms/LoansReader.tsx", "../app/components/Loans/Loans.style.tsx", "../app/components/Loans/Forms/LoansBooks.tsx", "../app/components/Loans/Forms/LoansPenalty.tsx", "../app/components/Loans/Forms/LoansDetails.tsx", "../app/components/Loans/Loans.helper.tsx", "../app/transformers/loans.transformer.tsx", "../app/server/loans.server.tsx", "../../../packages/ui/templates/ReservedLoan.email.tsx", "../../../packages/ui/templates/BorrowedLoan.email.tsx", "../../../packages/ui/templates/CancelledLoan.email.tsx", "../app/routes/__app/readers/index.tsx", "../app/components/Readers/Overview/ReadersOverview.tsx", "../app/routes/__app/books/create.tsx", "../app/routes/__app/loans/create.tsx", "../app/routes/__app/books/index.tsx", "../app/components/Books/Overview/BooksOverview.tsx", "../app/routes/__app/loans/index.tsx", "../app/components/Loans/Overview/LoansOverview.tsx", "../app/routes/__app/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // or cloudflare/deno\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const sheet = new ServerStyleSheet();\n\n  let markup = renderToString(\n    sheet.collectStyles(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n      />\n    )\n  );\n  const styles = sheet.getStyleTags();\n  markup = markup.replace(\"__STYLES__\", styles);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}", "import { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport GlobalStyle from \"@/theme/globalStyle.css\";\nimport { theme } from \"~/const\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: GlobalStyle },\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Georama:wght@200;300;400;600\",\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Library\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nconst App: React.FC = () => {\n  return (\n    <html>\n      <head>\n        <Meta />\n        <Links />\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\n      </head>\n      <body>\n        <MuiThemeProvider theme={theme}>\n          <Outlet />\n        </MuiThemeProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n};\n\nexport default App;\n", "const collorPalette = {\r\n  white: \"#FFFFFF\",\r\n  black: \"#000000\",\r\n  transparent: \"transparent\",\r\n  primary: {\r\n    darkest: \"#02020C\",\r\n    darker: \"#0A0830\",\r\n    dark: \"#120E54\",\r\n    base: \"#1B1478\",\r\n    light: \"#5F5AA0\",\r\n    lighter: \"#A3A1C9\",\r\n    lightest: \"#E8E7F1\",\r\n  },\r\n  secondary: {\r\n    darkest: \"#003F4C\",\r\n    darker: \"#005466\",\r\n    dark: \"#0093B2\",\r\n    base: \"#00D2FF\",\r\n    light: \"#4CDFFF\",\r\n    lighter: \"#99EDFF\",\r\n    lightest: \"#E5FAFF\",\r\n  },\r\n  tertiary: {\r\n    darkest: \"#66511A\",\r\n    darker: \"#987926\",\r\n    dark: \"#CAA233\",\r\n    base: \"#FDCA40\",\r\n    light: \"#FDD566\",\r\n    lighter: \"#FDE9B6\",\r\n    lightest: \"#FFFAEC\",\r\n  },\r\n  grey: {\r\n    darker: \"#333333\",\r\n    dark: \"#666666\",\r\n    base: \"#8C8C8C\",\r\n    light: \"#CCCCCC\",\r\n    \r\n    lighter: \"#F2F2F2\",\r\n    lightest: \"#F9F9F9\",\r\n  },\r\n  platform: {\r\n    red: \"#C42C21\",\r\n    redLightest: \"#fae8e6\",\r\n    green: \"#007831\",\r\n    greenLightest: \"#e6f2ea\",\r\n    blue: \"#0065ad\",\r\n    bluLighter: \"#00247D\",\r\n    blueLightest: \"#e6f0f8\",\r\n    greyLightest: \"#F8F8F8\",\r\n  },\r\n  shadow: \"2px 2px 10px 1px #DDDDDD\",\r\n};\r\n\r\nexport default collorPalette;\r\n", "import collorPalette from \"@/theme/colorPalette\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport { createBreakpoints } from \"@mui/system\";\r\n\r\nexport const RequiredField = \"This field is required\";\r\nexport const InvalidField = \"Invalid field value\";\r\nexport const ErrorSubmit = \"There was a problem in submitting your form\";\r\nexport const ErrorMessage = \"An error occured\";\r\nexport const WrongLoginData = \"Email or password is wrong\";\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nexport const theme = createTheme({\r\n  components: {\r\n    MuiAlert: {\r\n      styleOverrides: {\r\n        message: ({ theme }) =>\r\n          theme.unstable_sx({\r\n            textAlign: \"left\",\r\n            lineHeight: \"20px\",\r\n            fontSize: { xs: 12, sm: 14 },\r\n            color: collorPalette.black,\r\n          }),\r\n      },\r\n    },\r\n    MuiButton: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n      },\r\n    },\r\n    MuiCircularProgress: {\r\n      styleOverrides: {\r\n        root: {\r\n          position: \"absolute\",\r\n          top: \"45%\",\r\n          left: 0,\r\n          right: 0,\r\n          margin: \"0 auto\",\r\n        },\r\n      },\r\n    },\r\n    MuiInputBase: {\r\n      styleOverrides: {\r\n        input: {\r\n          \"&:-webkit-autofill\": {\r\n            \"WebkitBoxShadow\": \"0 0 0 100px #fff inset\",\r\n          },\r\n          \"&:focus\": {\r\n            backgroundColor: \"inherit\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Georama\"].join(\",\"),\r\n    h1: {\r\n      color: collorPalette.black,\r\n      [breakpoints.up(\"xs\")]: {\r\n        fontSize: 13,\r\n      },\r\n      [breakpoints.up(\"sm\")]: {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n    h2: {\r\n      color: collorPalette.black,\r\n      [breakpoints.up(\"xs\")]: {\r\n        fontSize: 15,\r\n      },\r\n      [breakpoints.up(\"sm\")]: {\r\n        fontSize: 16,\r\n      },\r\n    },\r\n    h5: {\r\n      color: collorPalette.black,\r\n      fontWeight: 600,\r\n      [breakpoints.up(\"xs\")]: {\r\n        fontSize: 22,\r\n      },\r\n      [breakpoints.up(\"sm\")]: {\r\n        fontSize: 25,\r\n      },\r\n    },\r\n    h4: {\r\n      color: collorPalette.black,\r\n      fontWeight: 600,\r\n      [breakpoints.up(\"xs\")]: {\r\n        fontSize: 20,\r\n      },\r\n      [breakpoints.up(\"sm\")]: {\r\n        fontSize: 22,\r\n      },\r\n    },\r\n    h3: {\r\n      color: collorPalette.black,\r\n      fontWeight: 600,\r\n      [breakpoints.up(\"xs\")]: {\r\n        fontSize: 16,\r\n      },\r\n      [breakpoints.up(\"sm\")]: {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: collorPalette.primary.base,\r\n    },\r\n    secondary: {\r\n      main: collorPalette.primary.lighter,\r\n    },\r\n  },\r\n});\r\n", "import { LoaderArgs, redirect } from \"@remix-run/node\";\r\nimport { Outlet, useTransition } from \"@remix-run/react\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport Spinner from \"@/components/Spinner\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (userId) {\r\n    return redirect(\"/\");\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nconst AuthLayout: React.FC = () => {\r\n  const transition = useTransition();\r\n\r\n  return (\r\n    <>\r\n      <Outlet />\r\n      {(transition.state === \"submitting\" ||\r\n        transition.state === \"loading\") && <Spinner />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport { CreateSession } from \"~/types/Session.type\";\r\nimport { getUserSession } from \"./users.server\";\r\n\r\nconst { getSession, commitSession, destroySession } =\r\n  createCookieSessionStorage({\r\n    cookie: {\r\n      name: \"session\",\r\n      httpOnly: true,\r\n      maxAge: 60 * 60 * 24,\r\n      sameSite: \"lax\",\r\n      secrets: [\"s3cret1\"],\r\n      secure: true,\r\n    },\r\n  });\r\n\r\nexport const createUserSession = async ({\r\n  request,\r\n  userId,\r\n  redirectTo,\r\n}: CreateSession) => {\r\n  const session = await getUserSession(request);\r\n\r\n  session.set(\"userId\", userId);\r\n\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await commitSession(session, {\r\n        expires: new Date(Date.now() + 60 * 60 * 24),\r\n      }),\r\n    },\r\n  });\r\n};\r\n\r\nexport const removeUserSession = async (request: Request) => {\r\n  const session = await getUserSession(request);\r\n\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await destroySession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport { getSession, commitSession, destroySession };\r\n", "import { getSession } from \"./session.server\";\r\nimport { LoginState } from \"~/types/Login.type\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport prisma from \"prisma\";\r\nimport { ErrorSubmit, WrongLoginData } from \"~/const\";\r\n\r\nexport const getUserSession = (request: Request) => {\r\n  return getSession(request.headers.get(\"Cookie\"));\r\n};\r\n\r\nexport const getUserId = async (request: Request) => {\r\n  const session = await getUserSession(request);\r\n  const userId = session.get(\"userId\");\r\n\r\n  return userId;\r\n};\r\n\r\nexport const login = async ({ email, password }: LoginState) => {\r\n  try {\r\n    const user = await prisma.users.findFirst({\r\n      where: { email },\r\n      select: {\r\n        id: true,\r\n        password: true,\r\n      },\r\n    });\r\n\r\n    if (!user) throw new Error(WrongLoginData);\r\n\r\n    const isCorrectPassword = await bcrypt.compare(password, user.password);\r\n\r\n    if (!isCorrectPassword) throw new Error(WrongLoginData);\r\n\r\n    return { id: user.id };\r\n  } catch (err) {\r\n    throw new Error(ErrorSubmit);\r\n  }\r\n};\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;\r\n", "import CircularProgress, {\r\n  CircularProgressProps,\r\n} from \"@mui/material/CircularProgress\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\n\r\nexport const StyledSpinner = MuiStyled(CircularProgress)<CircularProgressProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      position: \"fixed\",\r\n    })\r\n);\r\n", "import { StyledSpinner } from \"./Spinner.style\";\r\n\r\nconst SpinnerContainer: React.FC = ({}) => {\r\n  return <StyledSpinner />;\r\n};\r\n\r\nexport default SpinnerContainer;\r\n", "import { ActionArgs, ActionFunction } from \"@remix-run/node\";\r\nimport { handleLoginErrors } from \"~/components/Login/Login.helper\";\r\nimport LoginForm from \"~/components/Login/Form\";\r\nimport { ErrorMessage, ErrorSubmit } from \"~/const\";\r\nimport { badRequest } from \"~/server/request.server\";\r\nimport { createUserSession } from \"~/server/session.server\";\r\nimport { login } from \"~/server/users.server\";\r\nimport { isString } from \"lodash\";\r\nimport { useActionData, useSubmit } from \"@remix-run/react\";\r\nimport { LoginState, LoginSubmitProps } from \"~/types/Login.type\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { initialLogin } from \"~/components/Login/Login.const\";\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"login\") {\r\n      const email = formData.get(\"email\");\r\n      const password = formData.get(\"password\");\r\n\r\n      if (!isString(email) || !isString(password)) {\r\n        return badRequest({\r\n          message: ErrorSubmit,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const fields = { email, password };\r\n\r\n      const fieldErrors = handleLoginErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorSubmit,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const user = await login(fields);\r\n\r\n      return createUserSession({ request, userId: user.id, redirectTo: \"/\" });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst Login: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n\r\n  const [data, setData] = useState<LoginState>(initialLogin);\r\n  const [generalError, setGeneralError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (actionData && actionData.message && actionData.success === false)\r\n      setGeneralError(actionData.message);\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: LoginSubmitProps) => {\r\n    const fieldErrors = handleLoginErrors(data);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    submit(\r\n      {\r\n        ...data,\r\n        intent: \"login\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: \"/login\",\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoginForm\r\n      onSubmit={handleOnSubmit}\r\n      data={data}\r\n      setData={setData}\r\n      generalError={generalError}\r\n      setGeneralError={setGeneralError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Login;\r\n", "import { isEmpty } from \"lodash\";\r\nimport { RequiredField } from \"~/const\";\r\nimport { ErrorState, LoginState } from \"~/types/Login.type\";\r\n\r\nexport const handleLoginErrors = (formData: LoginState) => {\r\n  const errors: ErrorState = {};\r\n  const { email, password } = formData;\r\n\r\n  if (isEmpty(email)) errors.email = RequiredField;\r\n\r\n  if (isEmpty(password)) errors.password = RequiredField;\r\n\r\n  return errors;\r\n};\r\n", "import Button, { ButtonProps } from \"@mui/material/Button\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\n\r\nconst commonStyle = {\r\n  height: \"38px\",\r\n  padding: \"6px 20px\",\r\n  letterSpacing: \"0.5px\",\r\n  fontSize: \"15px\",\r\n  minWidth: \"120px\",\r\n};\r\n\r\nexport const ContainedButton = MuiStyled(Button)<ButtonProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    ...commonStyle,\r\n    backgroundColor: collorPalette.primary.base,\r\n    color: collorPalette.white,\r\n    border: `2px solid ${collorPalette.primary.base}`,\r\n    \"&:hover\": {\r\n      backgroundColor: collorPalette.primary.base,\r\n    },\r\n    \"&:disabled\": {\r\n      backgroundColor: collorPalette.grey.lighter,\r\n      color: collorPalette.grey.base,\r\n      border: `2px solid ${collorPalette.grey.lighter}`,\r\n    },\r\n  })\r\n) as typeof Button;\r\n\r\nexport const OutlinedButton = MuiStyled(Button)<ButtonProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    ...commonStyle,\r\n    backgroundColor: collorPalette.white,\r\n    color: collorPalette.black,\r\n    border: `2px solid ${collorPalette.primary.base}`,\r\n    \"&:hover\": {\r\n      backgroundColor: collorPalette.white,\r\n    },\r\n    \"&:disabled\": {\r\n      backgroundColor: collorPalette.grey.lighter,\r\n      color: collorPalette.grey.base,\r\n      border: `2px solid ${collorPalette.grey.lighter}`,\r\n    },\r\n  })\r\n) as typeof Button;\r\n", "import { ContainedButton, OutlinedButton } from \"./Button.style\";\r\nimport { ButtonVariant, ButtonProps } from \"./Button.type\";\r\n\r\nconst ButtonContainer: React.FC<ButtonProps> = ({\r\n  title,\r\n  variant,\r\n  onClick,\r\n  type,\r\n  disabled,\r\n}) => {\r\n  if (variant === ButtonVariant.contained) {\r\n    return (\r\n      <ContainedButton onClick={onClick} type={type} disabled={disabled}>\r\n        {title}\r\n      </ContainedButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <OutlinedButton onClick={onClick} type={type} disabled={disabled}>\r\n      {title}\r\n    </OutlinedButton>\r\n  );\r\n};\r\n\r\nexport default ButtonContainer;\r\n", "import TextField from \"@mui/material/TextField\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport { InputFieldProps } from \"./Input.type\";\r\n\r\nexport const StandardInput = MuiStyled(TextField)<InputFieldProps>(\r\n  ({ width, theme }) =>\r\n    theme.unstable_sx({\r\n      flex: 1,\r\n      maxWidth: { md: width },\r\n      width: { xs: \"100%\" },\r\n    })\r\n);\r\n", "import { InputProps, InputType } from \"./Input.type\";\r\nimport { StandardInput } from \"./Input.style\";\r\nimport { ChangeEvent } from \"react\";\r\n\r\nconst InputContainer: React.FC<InputProps> = ({\r\n  label,\r\n  value,\r\n  type = InputType.text,\r\n  errorMessage,\r\n  onChange,\r\n  width = \"inherit\",\r\n  multiline = false,\r\n  placeholder = \"\",\r\n}) => {\r\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <StandardInput\r\n      error={!!errorMessage}\r\n      label={label}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      value={value}\r\n      InputProps={{ inputProps: { min: 0 } }}\r\n      variant=\"standard\"\r\n      helperText={errorMessage}\r\n      onChange={handleOnChange}\r\n      width={width}\r\n      multiline={type !==InputType.number && multiline}\r\n      maxRows={4}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputContainer;\r\n", "import Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport Typography, { TypographyProps } from \"@mui/material/Typography\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport Alert, { AlertProps } from \"@mui/material/Alert\";\r\n\r\nexport const StyledPaper = MuiStyled(Paper)<PaperProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    width: { xs: \"100%\", sm: \"260px\" },\r\n    border: `10px solid ${collorPalette.primary.lighter}`,\r\n    padding: { xs: 4, sm: 6 },\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    borderRadius: { xs: 0, sm: 5 },\r\n    position: \"absolute\",\r\n    top: \"45%\",\r\n    transform: \"translateY(-50%)\",\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    backgroundColor: collorPalette.white,\r\n  })\r\n);\r\n\r\nexport const StyledParagraph = MuiStyled(Typography)<TypographyProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      color: collorPalette.grey.darker,\r\n    })\r\n);\r\n\r\nexport const StyledAlert = MuiStyled(Alert)<AlertProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    padding: \"3px 10px\",\r\n  })\r\n);", "import { MenuListType } from \"./Menu.type\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\";\r\nimport DensitySmallIcon from \"@mui/icons-material/DensitySmall\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\n\r\nexport const menuWidth = 240;\r\nexport const menuTitle = \"Online library\";\r\n\r\nexport const MenuList: MenuListType[] = [\r\n  {\r\n    label: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    url: \"/\",\r\n  },\r\n  { label: \"Loans\", icon: <DensitySmallIcon />, url: \"/loans\" },\r\n  { label: \"Books\", icon: <LibraryBooksIcon />, url: \"/books\" },\r\n  { label: \"Readers\", icon: <PeopleAltIcon />, url: \"/readers\" },\r\n  { label: \"Libraries\", icon: <HomeWorkIcon />, url: \"/libraries\" },\r\n];\r\n", "import Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport Input from \"@/components/Input\";\r\nimport { StyledAlert, StyledPaper, StyledParagraph } from \"../Login.style\";\r\nimport { menuTitle } from \"@/components/Menu/Menu.const\";\r\nimport { useState } from \"react\";\r\nimport { ErrorState, LoginFormProps, LoginValue } from \"~/types/Login.type\";\r\nimport { InputType } from \"@/components/Input/Input.type\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { LoginDescription } from \"../Login.const\";\r\n\r\nconst LoginForm: React.FC<LoginFormProps> = ({\r\n  onSubmit,\r\n  data,\r\n  setData,\r\n  generalError,\r\n  setGeneralError,\r\n}) => {\r\n  const [errors, setErrors] = useState<ErrorState>({});\r\n\r\n  const handleInputChange = (value: string, field: LoginValue) => {\r\n    setData((oldData) => ({ ...oldData, [field]: value }));\r\n\r\n    if (errors[field])\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors[field];\r\n        return oldErrors;\r\n      });\r\n\r\n    if (generalError) setGeneralError(\"\");\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    onSubmit({ callback: (fieldErrors) => setErrors(fieldErrors) });\r\n  };\r\n\r\n  return (\r\n    <StyledPaper>\r\n      <ColumnFlex gap=\"30px\">\r\n        <ColumnFlex gap=\"10px\">\r\n          <Typography variant=\"h5\">{menuTitle}</Typography>\r\n\r\n          <StyledParagraph variant=\"h2\">{LoginDescription}</StyledParagraph>\r\n        </ColumnFlex>\r\n        <ColumnFlex gap=\"20px\">\r\n          <Input\r\n            label=\"Email*\"\r\n            errorMessage={errors.email}\r\n            value={data.email}\r\n            onChange={(value: string) =>\r\n              handleInputChange(value, LoginValue.email)\r\n            }\r\n          />\r\n          <Input\r\n            label=\"Password*\"\r\n            type={InputType.password}\r\n            errorMessage={errors.password}\r\n            value={data.password}\r\n            onChange={(value: string) =>\r\n              handleInputChange(value, LoginValue.password)\r\n            }\r\n          />\r\n\r\n          {generalError && (\r\n            <StyledAlert severity=\"error\">{generalError}</StyledAlert>\r\n          )}\r\n        </ColumnFlex>\r\n\r\n        <Button\r\n          type={ButtonType.submit}\r\n          title=\"Login\"\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleOnSubmit}\r\n        />\r\n      </ColumnFlex>\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n", "import styled from \"styled-components\";\nimport {\n  flexbox,\n  space,\n  layout,\n  FlexboxProps,\n  SpaceProps,\n  LayoutProps,\n} from \"styled-system\";\n\nexport interface FlexProps extends FlexboxProps, SpaceProps, LayoutProps {\n  gap?: string;\n  position?: string;\n}\n\nconst Flex = styled.div<FlexProps>`\n  display: flex;\n  ${flexbox}\n  ${space}\n  ${layout}\n  gap: ${(props) => props.gap || \"0px\"};\n  position: ${(props) => props.position || \"static\"};\n`;\n\nconst ColumnFlex = styled(Flex)`\n  flex-direction: column;\n`;\n\nconst CenteredFlex = styled(Flex)`\n  justify-content: center;\n`;\n\nconst SpaceBetweenFlex = styled(Flex)`\n  justify-content: space-between;\n`;\n\nconst AlignedFlex = styled(Flex)`\n  align-items: center;\n`;\n\nconst CenteredAlignedFlex = styled(CenteredFlex)`\n  align-items: center;\n`;\n\nconst RelativeCenteredFlex = styled(CenteredFlex)`\n  position: relative;\n`;\n\nconst StretchRelativeCenteredFlex = styled(RelativeCenteredFlex)`\n  align-items: stretch;\n`;\n\nconst RelativeCenteredAlignedFlex = styled(CenteredAlignedFlex)`\n  position: relative;\n`;\n\nconst SpaceBetweenCenterFlex = styled(SpaceBetweenFlex)`\n  align-items: center;\n`;\n\nconst SpaceBetweenStretchlex = styled(SpaceBetweenFlex)`\n  align-items: stretch;\n`;\n\nconst FlexStartSpaceBetweenFlex = styled(SpaceBetweenFlex)`\n  align-items: flex-start;\n`;\n\nconst FlexEndSpaceBetweenFlex = styled(SpaceBetweenFlex)`\n  align-items: flex-end;\n`;\n\nconst CenteredColumnFlex = styled(ColumnFlex)`\n  align-items: center;\n`;\n\nconst StretchColumnFlex = styled(ColumnFlex)`\n  align-items: stretch;\n`;\n\nconst SpaceBetweenColumnFlex = styled(ColumnFlex)`\n  justify-content: space-between;\n`;\n\nconst FlexStartSpaceBetweenColumnFlex = styled(SpaceBetweenCenterFlex)`\n  align-items: flex-start;\n`;\n\nconst FlexEndSpaceBetweenColumnFlex = styled(SpaceBetweenCenterFlex)`\n  align-items: flex-end;\n`;\n\nexport default Flex;\n\nexport {\n  ColumnFlex,\n  CenteredFlex,\n  SpaceBetweenFlex,\n  AlignedFlex,\n  CenteredAlignedFlex,\n  SpaceBetweenCenterFlex,\n  RelativeCenteredFlex,\n  StretchRelativeCenteredFlex,\n  RelativeCenteredAlignedFlex,\n  SpaceBetweenStretchlex,\n  FlexStartSpaceBetweenFlex,\n  FlexEndSpaceBetweenFlex,\n  CenteredColumnFlex,\n  StretchColumnFlex,\n  SpaceBetweenColumnFlex,\n  FlexStartSpaceBetweenColumnFlex,\n  FlexEndSpaceBetweenColumnFlex,\n};\n", "import { LoginState } from \"~/types/Login.type\";\r\n\r\nexport const LoginDescription = \"Please enter your login data.\";\r\n\r\nexport const initialLogin: LoginState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n", "import { json } from \"@remix-run/node\";\r\n\r\nexport const badRequest = <T,>(data: T) => json<T>(data, { status: 400 });\r\n\r\nexport const goodRequest = <T,>(data: T) => json<T>(data, { status: 200 });", "import {\r\n  Outlet,\r\n  useActionData,\r\n  useNavigation,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport Menu from \"@/components/Menu\";\r\nimport Spinner from \"@/components/Spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { AlertDataState } from \"~/types/Session.type\";\r\nimport isBoolean from \"lodash/isBoolean\";\r\n\r\nconst AppLayout: React.FC = () => {\r\n  const navigation = useNavigation();\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n\r\n  const [alertData, setAlertData] = useState<AlertDataState>();\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (actionData && actionData.message && isBoolean(actionData.success)) {\r\n      setAlertData(actionData);\r\n      setIsOpen(true);\r\n    }\r\n  }, [actionData]);\r\n\r\n  const handleLogout = () => {\r\n    submit(\r\n      { intent: \"logout\" },\r\n      {\r\n        method: \"post\",\r\n        action: \"/?index\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Menu onLogoutClick={handleLogout}>\r\n      <Outlet />\r\n\r\n      {(navigation.state === \"submitting\" ||\r\n        navigation.state === \"loading\") && <Spinner />}\r\n\r\n      <Snackbar\r\n        open={isOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleAlertClose}\r\n          severity={alertData?.success ? \"success\" : \"error\"}\r\n        >\r\n          {alertData?.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default AppLayout;\r\n", "import { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport { menuItems } from \"./Menu.helper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  StyledAppBar,\r\n  StyledDrawer,\r\n  StyledIconButton,\r\n  StyledMainBox,\r\n} from \"./Menu.style\";\r\nimport { menuTitle, menuWidth } from \"./Menu.const\";\r\nimport Flex from \"@/components/Flex\";\r\nimport { MenuContainerProps } from \"./Menu.type\";\r\n\r\nconst Menu: React.FC<MenuContainerProps> = ({ onLogoutClick, children }) => {\r\n  const [mobileOpen, setMobileOpen] = useState<boolean>(false);\r\n\r\n  const handleMenuToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <StyledAppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <StyledIconButton onClick={handleMenuToggle}>\r\n            <MenuIcon />\r\n          </StyledIconButton>\r\n\r\n          <Typography variant=\"h5\">{menuTitle}</Typography>\r\n        </Toolbar>\r\n      </StyledAppBar>\r\n\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{\r\n          width: { sm: menuWidth },\r\n          flexShrink: { sm: 0 },\r\n        }}\r\n      >\r\n        <StyledDrawer\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleMenuToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          display={{ xs: \"block\", sm: \"none\" }}\r\n        >\r\n          {menuItems(onLogoutClick)}\r\n        </StyledDrawer>\r\n\r\n        <StyledDrawer\r\n          variant=\"permanent\"\r\n          display={{ xs: \"none\", sm: \"block\" }}\r\n          open\r\n        >\r\n          {menuItems(onLogoutClick)}\r\n        </StyledDrawer>\r\n      </Box>\r\n\r\n      <StyledMainBox component=\"main\">\r\n        <Toolbar />\r\n        {children}\r\n      </StyledMainBox>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n", "import List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport { StyledDivider, StyledItemButton, StyledMenuList } from \"./Menu.style\";\r\nimport { useNavigate, useLocation } from \"@remix-run/react\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { MenuList } from \"./Menu.const\";\r\n\r\nexport const handleMenuIndex = (pathName: string) => {\r\n  return MenuList.findIndex(\r\n    (item) => item.url.split(\"/\")[1] === pathName.split(\"/\")[1]\r\n  );\r\n};\r\n\r\nexport const menuItems = (onLogoutClick: () => void) => {\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const pathName = location.pathname;\r\n\r\n  return (\r\n    <StyledMenuList>\r\n      <Toolbar />\r\n\r\n      <List>\r\n        {MenuList.map((item, index) => (\r\n          <ListItem key={index} disablePadding>\r\n            <StyledItemButton\r\n              selected={item.url.split(\"/\")[1] === pathName.split(\"/\")[1]}\r\n              onClick={() => navigate(item.url)}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n\r\n              <ListItemText primary={item.label} />\r\n            </StyledItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <StyledDivider />\r\n\r\n      <ListItem disablePadding>\r\n        <StyledItemButton onClick={() => onLogoutClick()}>\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n\r\n          <ListItemText primary={\"Logout\"} />\r\n        </StyledItemButton>\r\n      </ListItem>\r\n    </StyledMenuList>\r\n  );\r\n};\r\n", "import { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport ListItemButton, {\r\n  ListItemButtonProps,\r\n} from \"@mui/material/ListItemButton\";\r\nimport { menuWidth } from \"./Menu.const\";\r\nimport AppBar, { AppBarProps } from \"@mui/material/AppBar\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\nimport Box, { BoxProps } from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Divider, { DividerProps } from \"@mui/material/Divider\";\r\nimport { DrawerType } from \"./Menu.type\";\r\n\r\nexport const StyledAppBar = MuiStyled(AppBar)<AppBarProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    width: { sm: `calc(100% - ${menuWidth}px)` },\r\n    boxShadow: \"none\",\r\n    backgroundColor: collorPalette.white,\r\n    borderBottom: \"3px solid #F2F2F2\",\r\n    ml: { sm: `${menuWidth}px` },\r\n  })\r\n);\r\n\r\nexport const StyledIconButton = MuiStyled(IconButton)<IconButtonProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      mr: 2,\r\n      color: collorPalette.black,\r\n      display: { sm: \"none\" },\r\n    })\r\n);\r\n\r\nexport const StyledMainBox = MuiStyled(Box)<BoxProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    backgroundColor: collorPalette.grey.lighter,\r\n    flex: 1,\r\n    p: 3,\r\n    width: {\r\n      sm: `calc(100% - ${menuWidth}px)`,\r\n    },\r\n  })\r\n);\r\n\r\nexport const StyledItemButton = MuiStyled(ListItemButton)<ListItemButtonProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      \"& .MuiListItemIcon-root\": {\r\n        color: collorPalette.white,\r\n        paddingLeft: \"10px\",\r\n      },\r\n      \"& .MuiListItemText-root .MuiTypography-root\": {\r\n        color: collorPalette.white,\r\n        fontSize: { xs: 16, sm: 17 },\r\n      },\r\n      \"&.Mui-selected\": {\r\n        backgroundColor: collorPalette.primary.light,\r\n      },\r\n      \"&.Mui-selected:hover\": {\r\n        backgroundColor: collorPalette.primary.light,\r\n      },\r\n      \"&:hover\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    })\r\n);\r\n\r\nexport const StyledDrawer = MuiStyled(Drawer)<DrawerType>(\r\n  ({ theme, display }) =>\r\n    theme.unstable_sx({\r\n      display: display,\r\n      \"& .MuiDrawer-paper\": {\r\n        boxSizing: \"border-box\",\r\n        width: menuWidth,\r\n        backgroundColor: collorPalette.primary.base,\r\n        border: \"none\",\r\n      },\r\n    })\r\n);\r\n\r\nexport const StyledMenuList = MuiStyled(\"div\")(({ theme }) =>\r\n  theme.unstable_sx({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n  })\r\n);\r\n\r\nexport const StyledDivider = MuiStyled(Divider)<DividerProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    marginTop: \"auto\",\r\n    borderColor: collorPalette.white,\r\n  })\r\n);\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useParams,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport LibrariesForm from \"~/components/Libraries/Form/LibrariesForm\";\r\nimport {\r\n  UpdateLibraryTitle,\r\n  ErrorUpdate,\r\n  SuccessUpdate,\r\n  ErrorGetSingle,\r\n} from \"~/components/Libraries/Libraries.const\";\r\nimport { handleLibraryErrors } from \"~/components/Libraries/Libraries.helper\";\r\nimport { LibrariesSubmitProps, LibraryState } from \"~/types/Libraries.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { getSingleLibrary, updateLibrary } from \"~/server/libraries.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const libraryId = url.pathname.split(\"/\").pop();\r\n\r\n    if (!isString(libraryId)) {\r\n      return badRequest({\r\n        message: ErrorGetSingle,\r\n        success: false,\r\n      });\r\n    }\r\n\r\n    const [library, cities] = await Promise.all([\r\n      getSingleLibrary({\r\n        libraryId,\r\n      }),\r\n      getCities(),\r\n    ]);\r\n\r\n    return goodRequest({ library, cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"update\") {\r\n      const name = formData.get(\"name\");\r\n      const city = formData.get(\"city\");\r\n      const address = formData.get(\"address\");\r\n      const phone = formData.get(\"phone\");\r\n      const schedule = formData.get(\"schedule\");\r\n\r\n      const url = new URL(request.url);\r\n      const libraryId = url.pathname.split(\"/\").pop();\r\n\r\n      if (\r\n        !isString(libraryId) ||\r\n        !isString(name) ||\r\n        !isString(city) ||\r\n        !isString(address) ||\r\n        !isString(phone) ||\r\n        !isString(schedule)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectSchedule = JSON.parse(schedule);\r\n\r\n      const fields = { name, city, address, phone, schedule: objectSchedule };\r\n\r\n      const fieldErrors = handleLibraryErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await updateLibrary({ ...fields, libraryId });\r\n\r\n      return goodRequest({\r\n        message: SuccessUpdate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst UpdateLibrary: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n  const urlParams = useParams();\r\n\r\n  const [library, setLibrary] = useState<LibraryState>(data.library);\r\n\r\n  const cities = data.cities;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(\"/libraries\");\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: LibrariesSubmitProps) => {\r\n    const fieldErrors = handleLibraryErrors(library);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringSchedule = JSON.stringify(library.schedule);\r\n\r\n    submit(\r\n      {\r\n        ...library,\r\n        schedule: stringSchedule,\r\n        intent: \"update\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: `/libraries/${urlParams.libraryId}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={UpdateLibraryTitle} backUrl=\"/libraries\" />\r\n      <LibrariesForm\r\n        onSubmit={handleOnSubmit}\r\n        setLibrary={setLibrary}\r\n        library={library}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default UpdateLibrary;\r\n", "import { Typography } from \"@mui/material\";\r\nimport { StyledCenteredFlex } from \"./ErrorInterface.style\";\r\n\r\nconst ErrorInterface: React.FC = () => {\r\n  return (\r\n    <StyledCenteredFlex gap=\"10px\">\r\n      <Typography variant=\"h5\">An error occured!</Typography>\r\n      <Typography variant=\"h2\">Please try again</Typography>\r\n    </StyledCenteredFlex>\r\n  );\r\n};\r\n\r\nexport default ErrorInterface;\r\n", "import styled from \"styled-components\";\r\nimport { CenteredColumnFlex } from \"@/components/Flex\";\r\n\r\nexport const StyledCenteredFlex = styled(CenteredColumnFlex)`\r\n  margin-top: 100px;\r\n  @media (max-width: 900px) {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n", "import Typography from \"@mui/material/Typography\";\r\nimport {\r\n  StyledArrowIcon,\r\n  StyledHeaderFlex,\r\n  StyledIconButton,\r\n} from \"./LayoutTitle.style\";\r\nimport { LayoutTitleProps } from \"~/types/LayoutTitle.type\";\r\nimport { useNavigate } from \"@remix-run/react\";\r\nimport { AlignedFlex } from \"@/components/Flex/Flex\";\r\n\r\nconst LayoutTitle: React.FC<LayoutTitleProps> = ({\r\n  title,\r\n  backUrl,\r\n  children,\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <StyledHeaderFlex>\r\n      <AlignedFlex>\r\n        {backUrl && (\r\n          <StyledIconButton onClick={() => navigate(backUrl)}>\r\n            <StyledArrowIcon />\r\n          </StyledIconButton>\r\n        )}\r\n\r\n        <Typography variant=\"h4\">{title}</Typography>\r\n      </AlignedFlex>\r\n\r\n      {children}\r\n    </StyledHeaderFlex>\r\n  );\r\n};\r\n\r\nexport default LayoutTitle;\r\n", "import styled from \"styled-components\";\r\nimport { SpaceBetweenCenterFlex } from \"@/components/Flex\";\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\n\r\nexport const StyledArrowIcon = MuiStyled(ArrowBackIosNewIcon)(({ theme }) =>\r\n  theme.unstable_sx({\r\n    height: \"20px\",\r\n    color: collorPalette.black,\r\n  })\r\n);\r\n\r\nexport const StyledIconButton = MuiStyled(IconButton)<IconButtonProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      minWidth: \"50px\",\r\n      justifyContent: \"left\",\r\n      padding: \"10px\",\r\n    })\r\n);\r\n\r\nexport const StyledHeaderFlex = styled(SpaceBetweenCenterFlex)`\r\n  margin: 15px 0 25px 0;\r\n`;\r\n", "import Paper from \"@mui/material/Paper\";\r\nimport Input from \"@/components/Input\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"@remix-run/react\";\r\nimport {\r\n  ErrorState,\r\n  LibrariesFormProps,\r\n  LibraryValue,\r\n  ScheduleTimeValue,\r\n} from \"~/types/Libraries.type\";\r\nimport { transformDate } from \"@/utils/common\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport TimePicker from \"@/components/TimePicker\";\r\nimport { Dayjs } from \"dayjs\";\r\nimport { Details, ScheduleTitle } from \"../Libraries.const\";\r\nimport {\r\n  StyledFlexButton,\r\n  StyledTitle,\r\n  StyledTypography,\r\n} from \"../Libraries.style\";\r\nimport { AlignedFlex } from \"@/components/Flex/Flex\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { StyledColumnFlex, StyleFlex } from \"~/components/Books/Books.style\";\r\n\r\nconst LibrariesForm: React.FC<LibrariesFormProps> = ({\r\n  onSubmit,\r\n  setLibrary,\r\n  library,\r\n  cities,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const urlParams = useParams();\r\n\r\n  const [errors, setErrors] = useState<ErrorState>({});\r\n\r\n  const handleInputChange = (value: string, field: LibraryValue) => {\r\n    setLibrary((oldLibrary) => ({ ...oldLibrary, [field]: value }));\r\n\r\n    if (errors[field])\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors[field];\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleMondayFriday = (\r\n    value: Dayjs | null,\r\n    field: ScheduleTimeValue\r\n  ) => {\r\n    const newTime = transformDate(value);\r\n\r\n    setLibrary((oldLibrary) => ({\r\n      ...oldLibrary,\r\n      schedule: {\r\n        ...oldLibrary.schedule,\r\n        mondayFriday: { ...oldLibrary.schedule.mondayFriday, [field]: newTime },\r\n      },\r\n    }));\r\n\r\n    if (errors.schedule?.mondayFriday && errors.schedule.mondayFriday[field]) {\r\n      delete errors.schedule.mondayFriday[field];\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  const handleSaturday = (value: Dayjs | null, field: ScheduleTimeValue) => {\r\n    const newTime = transformDate(value);\r\n\r\n    setLibrary((oldLibrary) => ({\r\n      ...oldLibrary,\r\n      schedule: {\r\n        ...oldLibrary.schedule,\r\n        saturday: { ...oldLibrary.schedule.saturday, [field]: newTime },\r\n      },\r\n    }));\r\n\r\n    if (errors.schedule?.saturday && errors.schedule.saturday[field]) {\r\n      delete errors.schedule.saturday[field];\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    onSubmit({\r\n      callback: (fieldErrors: ErrorState) => setErrors(fieldErrors),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <StyleFlex>\r\n        <StyledColumnFlex>\r\n          <StyledTitle variant=\"h3\">{Details}</StyledTitle>\r\n\r\n          <Input\r\n            label=\"Name*\"\r\n            errorMessage={errors.name}\r\n            value={library.name}\r\n            onChange={(value: string) =>\r\n              handleInputChange(value, LibraryValue.name)\r\n            }\r\n          />\r\n          <Autocomplete\r\n            label=\"City*\"\r\n            onChange={(value: AutocompleteOptions | null) =>\r\n              handleInputChange(value?.id || \"\", LibraryValue.city)\r\n            }\r\n            errorMessage={errors.city}\r\n            options={cities}\r\n            value={library.city}\r\n          />\r\n          <Input\r\n            label=\"Address*\"\r\n            errorMessage={errors.address}\r\n            value={library.address}\r\n            onChange={(value: string) =>\r\n              handleInputChange(value, LibraryValue.address)\r\n            }\r\n            multiline\r\n          />\r\n          <Input\r\n            label=\"Phone*\"\r\n            errorMessage={errors.phone}\r\n            value={library.phone}\r\n            onChange={(value: string) =>\r\n              handleInputChange(value, LibraryValue.phone)\r\n            }\r\n          />\r\n        </StyledColumnFlex>\r\n\r\n        <StyledColumnFlex>\r\n          <StyledTitle\r\n            variant=\"h3\"\r\n            sx={{\r\n              marginTop: { sm: \"30px\", md: \"0\" },\r\n            }}\r\n          >\r\n            {ScheduleTitle}\r\n          </StyledTitle>\r\n\r\n          <AlignedFlex>\r\n            <StyledTypography variant=\"h1\">Monday-Friday:</StyledTypography>\r\n\r\n            <ColumnFlex gap=\"20px\">\r\n              <TimePicker\r\n                label=\"From*\"\r\n                errorMessage={errors.schedule?.mondayFriday?.from}\r\n                value={library.schedule.mondayFriday.from}\r\n                onChange={(value) =>\r\n                  handleMondayFriday(value, ScheduleTimeValue.from)\r\n                }\r\n              />\r\n              <TimePicker\r\n                label=\"To*\"\r\n                errorMessage={errors.schedule?.mondayFriday?.to}\r\n                value={library.schedule.mondayFriday.to}\r\n                onChange={(value) =>\r\n                  handleMondayFriday(value, ScheduleTimeValue.to)\r\n                }\r\n              />\r\n            </ColumnFlex>\r\n          </AlignedFlex>\r\n\r\n          <AlignedFlex>\r\n            <StyledTypography variant=\"h1\">Saturday:</StyledTypography>\r\n\r\n            <ColumnFlex gap=\"20px\">\r\n              <TimePicker\r\n                label=\"From*\"\r\n                value={library.schedule.saturday.from}\r\n                errorMessage={errors.schedule?.saturday?.from}\r\n                onChange={(value) =>\r\n                  handleSaturday(value, ScheduleTimeValue.from)\r\n                }\r\n              />\r\n              <TimePicker\r\n                label=\"To*\"\r\n                value={library.schedule.saturday.to}\r\n                errorMessage={errors.schedule?.saturday?.to}\r\n                onChange={(value) =>\r\n                  handleSaturday(value, ScheduleTimeValue.to)\r\n                }\r\n              />\r\n            </ColumnFlex>\r\n          </AlignedFlex>\r\n        </StyledColumnFlex>\r\n      </StyleFlex>\r\n\r\n      <StyledFlexButton>\r\n        <Button\r\n          title=\"Cancel\"\r\n          variant={ButtonVariant.outlined}\r\n          onClick={() => navigate(\"/libraries\")}\r\n        />\r\n        <Button\r\n          type={ButtonType.submit}\r\n          title={urlParams.libraryId ? \"Update\" : \"Create\"}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleOnSubmit}\r\n        />\r\n      </StyledFlexButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LibrariesForm;\r\n", "import dayjs, { Dayjs } from \"dayjs\";\r\nimport moment from \"moment\";\r\n\r\nexport const readFileAsync = (file: File) => {\r\n  return new Promise((resolve, reject) => {\r\n    let reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n\r\n    reader.onerror = reject;\r\n  });\r\n};\r\n\r\nexport const checkIfValidDate = (date: any) => {\r\n  return dayjs(date).isValid();\r\n};\r\n\r\nexport const transformDate = (date: Dayjs | null) => {\r\n  return date && checkIfValidDate(date) ? dayjs(date).format() : \"\";\r\n};\r\n\r\nexport const formatLoangDate = (date: Date) => {\r\n  return moment(date).format(\"DD MMM YYYY, HH:mm\");\r\n};\r\n\r\nexport const formatShortDate = (date: Date) => {\r\n  return moment(date).format(\"DD MMM YYYY\");\r\n};\r\n\r\nexport const addDateDays = (days: number) => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n};\r\n\r\nexport const checkIfNumber = (value: any) => {\r\n  return /^\\d+$/.test(value);\r\n};\r\n\r\nexport const checkIfEmail = (email: any) => {\r\n  return /@/.test(email);\r\n};\r\n\r\nexport const toFindDuplicates = (arry: string[]) => {\r\n  return arry.filter((item, index) => arry.indexOf(item) !== index);\r\n};\r\n\r\nexport const isValidUrl = (url: string) => {\r\n  try {\r\n    const newUrl = new URL(url);\r\n    return newUrl.protocol === \"http:\" || newUrl.protocol === \"https:\";\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n", "import TextField, { TextFieldProps } from \"@mui/material/TextField\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\r\nimport { TimeProps } from \"./TimePicker.type\";\r\n\r\nconst TimePickerContainer: React.FC<TimeProps> = ({\r\n  label,\r\n  value,\r\n  errorMessage,\r\n  onChange,\r\n}) => (\r\n  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n    <TimePicker\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      renderInput={(params: TextFieldProps) => (\r\n        <TextField\r\n          {...params}\r\n          error={!!errorMessage}\r\n          variant=\"standard\"\r\n          helperText={errorMessage}\r\n        />\r\n      )}\r\n    />\r\n  </LocalizationProvider>\r\n);\r\n\r\nexport default TimePickerContainer;\r\n", "import { LibraryState } from \"~/types/Libraries.type\";\r\n\r\nexport const Libraries = \"Libraries\";\r\nexport const NewLibrary = \"New library\";\r\nexport const CreateLibraryTitle = \"Create library\";\r\nexport const UpdateLibraryTitle = \"Update library\";\r\nexport const ScheduleTitle = \"Opening hours\";\r\nexport const Details = \"Address details\";\r\nexport const Cities = \"Cities\";\r\n\r\nexport const ErrorCreate = \"There was a problem in creating the library\";\r\nexport const SuccessCreate = \"Library created successfully\";\r\n\r\nexport const ErrorGetPaginated = \"There was a problem in receiving libraries\";\r\nexport const ErrorGetSingle = \"There was a problem in receiving library\";\r\n\r\nexport const ErrorDelete = \"There was a problem in deleting the library\";\r\nexport const SuccessDelete = \"Library deleted successfuly\";\r\n\r\nexport const ErrorUpdate = \"There was a problem in updating the library\";\r\nexport const SuccessUpdate = \"Library updated successfully\";\r\n\r\nexport const SearchPlaceholder = \"Search for name or phone\";\r\n\r\nexport const initialLibrary: LibraryState = {\r\n  name: \"\",\r\n  city: \"\",\r\n  address: \"\",\r\n  phone: \"\",\r\n  schedule: {\r\n    mondayFriday: { from: \"\", to: \"\" },\r\n    saturday: { from: \"\", to: \"\" },\r\n  },\r\n};\r\n\r\nexport const librariesColumns = [\r\n  { name: \"name\", value: \"Name\" },\r\n  { name: \"city\", value: \"City\" },\r\n  { name: \"phone\", value: \"Phone\" },\r\n];\r\n", "import Typography, { TypographyProps } from \"@mui/material/Typography\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport styled from \"styled-components\";\r\nimport Flex from \"@/components/Flex\";\r\n\r\nexport const StyledTitle = MuiStyled(Typography)<TypographyProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    marginBottom: \"20px\",\r\n  })\r\n);\r\n\r\nexport const StyledTypography = MuiStyled(Typography)<TypographyProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      minWidth: { xs: \"120px\", sm: \"135px\" },\r\n      fontWeight: \"600\",\r\n    })\r\n);\r\n\r\nexport const StyledFlexButton = styled(Flex)`\r\n  justify-content: right;\r\n  margin-top: 50px;\r\n  gap: 10px;\r\n  @media (max-width: 900px) {\r\n    justify-content: center;\r\n  }\r\n\r\n  @media (max-width: 650px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n", "import TextField from \"@mui/material/TextField\";\r\nimport { StandardAutocomplete } from \"./Autocomplete.style\";\r\nimport { AutocompleteContainerProps } from \"./Autocomplete.type\";\r\n\r\nconst AutocompleteContainer: React.FC<AutocompleteContainerProps> = ({\r\n  label,\r\n  value,\r\n  options,\r\n  errorMessage,\r\n  onChange,\r\n  width = \"inherit\",\r\n  placeholder = \"\",\r\n}) => {\r\n  const handleOnChange = (event: any, value: any) => {\r\n    onChange(value);\r\n  };\r\n\r\n  const selectedValue =\r\n    (value && options.find((item) => item.id === value)) || null;\r\n\r\n  return (\r\n    <StandardAutocomplete\r\n      disablePortal\r\n      width={width}\r\n      options={options}\r\n      getOptionLabel={(option: any) => option.name}\r\n      value={selectedValue}\r\n      onChange={handleOnChange}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          variant=\"standard\"\r\n          error={!!errorMessage}\r\n          helperText={errorMessage}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutocompleteContainer;\r\n", "import Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport { AutocompleteFieldProps } from \"./Autocomplete.type\";\r\n\r\nexport const StandardAutocomplete = MuiStyled(\r\n  Autocomplete\r\n)<AutocompleteFieldProps>(({ width, theme }) =>\r\n  theme.unstable_sx({\r\n    flex: 1,\r\n    maxWidth: { md: width, xs: \"100%\" },\r\n  })\r\n);\r\n", "import Flex, { ColumnFlex, SpaceBetweenFlex } from \"@/components/Flex\";\r\nimport styled from \"styled-components\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport Fab, { FabProps } from \"@mui/material/Fab\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\n\r\nexport const StyledFilters = styled(SpaceBetweenFlex)`\r\n  gap: 20px;\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledColumnFlex = styled(ColumnFlex)`\r\n  gap: 20px;\r\n  flex: 1;\r\n  align-self: flex-start;\r\n  @media (max-width: 899px) {\r\n    max-width: 100%;\r\n    align-self: auto;\r\n  }\r\n`;\r\n\r\nexport const StyleFlex = styled(Flex)`\r\n  gap: 50px;\r\n  max-width: 750px;\r\n  @media (max-width: 900px) {\r\n    gap: 20px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const UnitsFlex = styled(Flex)`\r\n  gap: 20px;\r\n  max-width: 710px;\r\n  background-color: ${collorPalette.grey.lightest};\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  @media (max-width: 900px) {\r\n    gap: 20px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledAddFab = MuiStyled(Fab)<FabProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    minHeight: \"35px\",\r\n    boxShadow: \"none\",\r\n  })\r\n);\r\n\r\nexport const StyledRemoveFab = MuiStyled(Fab)<FabProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    minHeight: \"25px\",\r\n    boxShadow: \"none\",\r\n    position: \"absolute\",\r\n    top: \"-7px\",\r\n    right: \"-7px\",\r\n  })\r\n);\r\n\r\nexport const StyledRemoveIcon = MuiStyled(RemoveIcon)(({ theme }) =>\r\n  theme.unstable_sx({\r\n    width: \"17px\",\r\n    height: \"17px\",\r\n  })\r\n);\r\n", "import { checkIfNumber, checkIfValidDate } from \"@/utils/common\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { InvalidField, RequiredField } from \"~/const\";\r\nimport { ErrorState, LibraryState } from \"~/types/Libraries.type\";\r\n\r\nexport const handleLibraryErrors = (formData: LibraryState) => {\r\n  let errors: ErrorState = {};\r\n  const {\r\n    name,\r\n    city,\r\n    address,\r\n    phone,\r\n    schedule: {\r\n      mondayFriday: { from: mondayFridayFrom, to: mondayFridayTo },\r\n      saturday: { from: saturdayFrom, to: saturdayTo },\r\n    },\r\n  } = formData;\r\n\r\n  if (isEmpty(name)) errors.name = RequiredField;\r\n\r\n  if (isEmpty(city)) errors.city = RequiredField;\r\n\r\n  if (isEmpty(address)) errors.address = RequiredField;\r\n\r\n  if (isEmpty(phone)) {\r\n    errors.phone = RequiredField;\r\n  } else if (!checkIfNumber(phone) || phone.length !== 10) {\r\n    errors.phone = InvalidField;\r\n  }\r\n\r\n  if (isEmpty(mondayFridayFrom) || !checkIfValidDate(mondayFridayFrom))\r\n    errors = {\r\n      ...errors,\r\n      schedule: {\r\n        ...errors.schedule,\r\n        mondayFriday: {\r\n          ...errors.schedule?.mondayFriday,\r\n          from: RequiredField,\r\n        },\r\n      },\r\n    };\r\n\r\n  if (isEmpty(mondayFridayTo) || !checkIfValidDate(mondayFridayFrom))\r\n    errors = {\r\n      ...errors,\r\n      schedule: {\r\n        ...errors.schedule,\r\n        mondayFriday: {\r\n          ...errors.schedule?.mondayFriday,\r\n          to: RequiredField,\r\n        },\r\n      },\r\n    };\r\n\r\n  if (isEmpty(saturdayFrom) || !checkIfValidDate(mondayFridayFrom))\r\n    errors = {\r\n      ...errors,\r\n      schedule: {\r\n        ...errors.schedule,\r\n        saturday: {\r\n          ...errors.schedule?.saturday,\r\n          from: RequiredField,\r\n        },\r\n      },\r\n    };\r\n\r\n  if (isEmpty(saturdayTo) || !checkIfValidDate(mondayFridayFrom))\r\n    errors = {\r\n      ...errors,\r\n      schedule: {\r\n        ...errors.schedule,\r\n        saturday: {\r\n          ...errors.schedule?.saturday,\r\n          to: RequiredField,\r\n        },\r\n      },\r\n    };\r\n\r\n  return errors;\r\n};\r\n", "import { ErrorMessage } from \"~/const\";\r\nimport prisma from \"prisma\";\r\n\r\nexport const getCities = async () => {\r\n  try {\r\n    const cities = await prisma.cities.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n      },\r\n    });\r\n\r\n    if (!cities) throw new Error(ErrorMessage);\r\n\r\n    return cities;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import {\r\n  LibrariesResponse,\r\n  LibraryResponse,\r\n  LibraryState,\r\n  PaginatedLibraries,\r\n} from \"~/types/Libraries.type\";\r\n\r\nexport const fromPaginatedLibrariesResponse = (\r\n  libraries: LibrariesResponse[]\r\n): PaginatedLibraries[] =>\r\n  libraries.map((item) => ({\r\n    ...item,\r\n    city: item.city.name,\r\n  }));\r\n\r\nexport const fromSingleLibraryResponse = (\r\n  library: LibraryResponse\r\n): LibraryState => ({ ...library, city: library.city.id });\r\n", "import {\r\n  ErrorCreate,\r\n  ErrorDelete,\r\n  ErrorGetPaginated,\r\n  ErrorGetSingle,\r\n  ErrorUpdate,\r\n} from \"~/components/Libraries/Libraries.const\";\r\nimport {\r\n  PaginatedLibrariesProps,\r\n  LibraryState,\r\n  LibraryIdProps,\r\n} from \"~/types/Libraries.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport {\r\n  fromPaginatedLibrariesResponse,\r\n  fromSingleLibraryResponse,\r\n} from \"~/transformers/libraries.transformer\";\r\nimport prisma from \"prisma\";\r\n\r\nexport const getPaginatedLibraries = async ({\r\n  page,\r\n  search,\r\n  city,\r\n}: PaginatedLibrariesProps) => {\r\n  try {\r\n    const skip = (page && page > 1 && (page - 1) * 5) || undefined;\r\n\r\n    const libraries = await prisma.$transaction(async (db) => {\r\n      const count = await db.libraries.count({\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { phone: { contains: search, mode: \"insensitive\" } },\r\n          ],\r\n          city:\r\n            (city && {\r\n              name: city,\r\n            }) ||\r\n            undefined,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      const data = await db.libraries.findMany({\r\n        skip,\r\n        take: 5,\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { phone: { contains: search, mode: \"insensitive\" } },\r\n          ],\r\n          city:\r\n            (city && {\r\n              name: city,\r\n            }) ||\r\n            undefined,\r\n        },\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          city: {\r\n            select: {\r\n              name: true,\r\n            },\r\n          },\r\n          phone: true,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      if (!data) throw new Error(ErrorGetPaginated);\r\n\r\n      return { count, data: fromPaginatedLibrariesResponse(data) };\r\n    });\r\n\r\n    return libraries;\r\n  } catch (err) {\r\n    throw new Error(ErrorGetPaginated);\r\n  }\r\n};\r\n\r\nexport const getSingleLibrary = async ({ libraryId }: LibraryIdProps) => {\r\n  try {\r\n    const library = await prisma.libraries.findFirst({\r\n      where: {\r\n        id: libraryId,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        name: true,\r\n        city: {\r\n          select: {\r\n            id: true,\r\n          },\r\n        },\r\n        address: true,\r\n        phone: true,\r\n        schedule: true,\r\n      },\r\n    });\r\n\r\n    if (!library) throw new Error(ErrorGetSingle);\r\n\r\n    return fromSingleLibraryResponse(library);\r\n  } catch (err) {\r\n    throw new Error(ErrorGetSingle);\r\n  }\r\n};\r\n\r\nexport const createLibrary = async ({\r\n  name,\r\n  city,\r\n  address,\r\n  phone,\r\n  schedule,\r\n}: LibraryState) => {\r\n  try {\r\n    const libraryByName = await prisma.libraries.findFirst({\r\n      where: {\r\n        name,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (libraryByName) throw new Error(ErrorCreate);\r\n\r\n    const library = await prisma.libraries.create({\r\n      data: {\r\n        name,\r\n        cityId: city,\r\n        address,\r\n        phone,\r\n        schedule,\r\n      },\r\n    });\r\n\r\n    if (!library) throw new Error(ErrorCreate);\r\n\r\n    return library;\r\n  } catch (err) {\r\n    throw new Error(ErrorCreate);\r\n  }\r\n};\r\n\r\nexport const updateLibrary = async ({\r\n  libraryId,\r\n  name,\r\n  city,\r\n  address,\r\n  phone,\r\n  schedule,\r\n}: LibraryState & { libraryId: string }) => {\r\n  try {\r\n    const libraryByName = await prisma.libraries.findFirst({\r\n      where: {\r\n        name,\r\n        deleted: false,\r\n        id: { not: libraryId },\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (libraryByName) throw new Error(ErrorUpdate);\r\n\r\n    const library = await prisma.libraries.updateMany({\r\n      where: {\r\n        id: libraryId,\r\n        deleted: false,\r\n      },\r\n      data: {\r\n        name,\r\n        cityId: city,\r\n        address,\r\n        phone,\r\n        schedule,\r\n      },\r\n    });\r\n\r\n    if (!library) throw new Error(ErrorUpdate);\r\n\r\n    return library;\r\n  } catch (err) {\r\n    throw new Error(ErrorUpdate);\r\n  }\r\n};\r\n\r\nexport const deleteLibrary = async ({ libraryId }: LibraryIdProps) => {\r\n  try {\r\n    const library = await prisma.libraries.update({\r\n      where: {\r\n        id: libraryId,\r\n      },\r\n      data: {\r\n        deleted: true,\r\n        bookLibraries: {\r\n          updateMany: {\r\n            where: { deleted: false },\r\n            data: {\r\n              deleted: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!library) throw new Error(ErrorDelete);\r\n\r\n    return library;\r\n  } catch (err) {\r\n    throw new Error(ErrorDelete);\r\n  }\r\n};\r\n\r\nexport const getLibraries = async () => {\r\n  try {\r\n    const libraries = await prisma.libraries.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n      },\r\n    });\r\n\r\n    if (!libraries) throw new Error(ErrorMessage);\r\n\r\n    return libraries;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useParams,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport ReadersForm from \"~/components/Readers/Form/ReadersForm\";\r\nimport {\r\n  UpdateReaderTitle,\r\n  ErrorUpdate,\r\n  SuccessUpdate,\r\n  ErrorGetSingle,\r\n} from \"~/components/Readers/Readers.const\";\r\nimport { handleReaderErrors } from \"~/components/Readers/Readers.helper\";\r\nimport { ReadersSubmitProps, ReaderState } from \"~/types/Readers.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { getSingleReader, updateReader } from \"~/server/readers.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const readerId = url.pathname.split(\"/\").pop();\r\n\r\n    if (!isString(readerId)) {\r\n      return badRequest({\r\n        message: ErrorGetSingle,\r\n        success: false,\r\n      });\r\n    }\r\n\r\n    const [reader, cities] = await Promise.all([\r\n      getSingleReader({\r\n        readerId,\r\n      }),\r\n      getCities(),\r\n    ]);\r\n\r\n    return goodRequest({ reader, cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"update\") {\r\n      const name = formData.get(\"name\");\r\n      const city = formData.get(\"city\");\r\n      const address = formData.get(\"address\");\r\n      const email = formData.get(\"email\");\r\n      const phone = formData.get(\"phone\");\r\n      const birthdate = formData.get(\"birthdate\");\r\n\r\n      const url = new URL(request.url);\r\n      const readerId = url.pathname.split(\"/\").pop();\r\n\r\n      if (\r\n        !isString(readerId) ||\r\n        !isString(name) ||\r\n        !isString(city) ||\r\n        !isString(address) ||\r\n        !isString(email) ||\r\n        !isString(phone) ||\r\n        !isString(birthdate)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const fields = { name, city, address, email, phone, birthdate };\r\n\r\n      const fieldErrors = handleReaderErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await updateReader({ ...fields, readerId });\r\n\r\n      return goodRequest({\r\n        message: SuccessUpdate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst UpdateReader: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n  const urlParams = useParams();\r\n\r\n  const [reader, setReader] = useState<ReaderState>(data.reader);\r\n\r\n  const cities = data.cities;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(\"/readers\");\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: ReadersSubmitProps) => {\r\n    const fieldErrors = handleReaderErrors(reader);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    submit(\r\n      {\r\n        ...reader,\r\n        intent: \"update\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: `/readers/${urlParams.readerId}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={UpdateReaderTitle} backUrl=\"/readers\" />\r\n      <ReadersForm\r\n        onSubmit={handleOnSubmit}\r\n        setReader={setReader}\r\n        reader={reader}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default UpdateReader;\r\n", "import Paper from \"@mui/material/Paper\";\r\nimport Input from \"@/components/Input\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"@remix-run/react\";\r\nimport {\r\n  ErrorState,\r\n  ReadersFormProps,\r\n  ReaderValue,\r\n} from \"~/types/Readers.type\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport DatePicker from \"@/components/DatePicker\";\r\nimport { StyledFlexButton } from \"~/components/Libraries/Libraries.style\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { StyledColumnFlex, StyleFlex } from \"~/components/Books/Books.style\";\r\nimport { Details } from \"../Readers.const\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Dayjs } from \"dayjs\";\r\nimport { transformDate } from \"@/utils/common\";\r\n\r\nconst ReadersForm: React.FC<ReadersFormProps> = ({\r\n  onSubmit,\r\n  setReader,\r\n  reader,\r\n  cities,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const urlParams = useParams();\r\n\r\n  const [errors, setErrors] = useState<ErrorState>({});\r\n\r\n  const handleInputChange = (value: string, field: ReaderValue) => {\r\n    setReader((oldReader) => ({ ...oldReader, [field]: value }));\r\n\r\n    if (errors[field])\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors[field];\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleBirthdate = (value: Dayjs | null, field: ReaderValue) => {\r\n    const newTime = transformDate(value);\r\n\r\n    setReader((oldReader) => ({ ...oldReader, [field]: newTime }));\r\n\r\n    if (errors[field])\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors[field];\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    onSubmit({\r\n      callback: (fieldErrors: ErrorState) => setErrors(fieldErrors),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"40px\">\r\n        <Typography variant=\"h3\">{Details}</Typography>\r\n\r\n        <StyleFlex>\r\n          <StyledColumnFlex>\r\n            <Input\r\n              label=\"Name*\"\r\n              errorMessage={errors.name}\r\n              value={reader.name}\r\n              onChange={(value: string) =>\r\n                handleInputChange(value, ReaderValue.name)\r\n              }\r\n            />\r\n            <Input\r\n              label=\"Email*\"\r\n              errorMessage={errors.email}\r\n              value={reader.email}\r\n              onChange={(value: string) =>\r\n                handleInputChange(value, ReaderValue.email)\r\n              }\r\n              multiline\r\n            />\r\n            <Autocomplete\r\n              label=\"City*\"\r\n              onChange={(value: AutocompleteOptions | null) =>\r\n                handleInputChange(value?.id || \"\", ReaderValue.city)\r\n              }\r\n              errorMessage={errors.city}\r\n              options={cities}\r\n              value={reader.city}\r\n            />\r\n          </StyledColumnFlex>\r\n\r\n          <StyledColumnFlex>\r\n            <Input\r\n              label=\"Address*\"\r\n              errorMessage={errors.address}\r\n              value={reader.address}\r\n              onChange={(value: string) =>\r\n                handleInputChange(value, ReaderValue.address)\r\n              }\r\n              multiline\r\n            />\r\n            <Input\r\n              label=\"Phone*\"\r\n              errorMessage={errors.phone}\r\n              value={reader.phone}\r\n              onChange={(value: string) =>\r\n                handleInputChange(value, ReaderValue.phone)\r\n              }\r\n            />\r\n\r\n            <DatePicker\r\n              label=\"Birthdate*\"\r\n              value={reader.birthdate}\r\n              errorMessage={errors.birthdate}\r\n              onChange={(value) =>\r\n                handleBirthdate(value, ReaderValue.birthdate)\r\n              }\r\n            />\r\n          </StyledColumnFlex>\r\n        </StyleFlex>\r\n      </ColumnFlex>\r\n\r\n      <StyledFlexButton>\r\n        <Button\r\n          title=\"Cancel\"\r\n          variant={ButtonVariant.outlined}\r\n          onClick={() => navigate(\"/readers\")}\r\n        />\r\n        <Button\r\n          type={ButtonType.submit}\r\n          title={urlParams.readerId ? \"Update\" : \"Create\"}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleOnSubmit}\r\n        />\r\n      </StyledFlexButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ReadersForm;\r\n", "import { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DatePickerProps } from \"./DatePicker.type\";\r\nimport TextField, { TextFieldProps } from \"@mui/material/TextField\";\r\n\r\nconst DatePickerContainer: React.FC<DatePickerProps> = ({\r\n  label,\r\n  value,\r\n  errorMessage,\r\n  onChange,\r\n}) => (\r\n  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n    <DatePicker\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      renderInput={(params: TextFieldProps) => (\r\n        <TextField\r\n          {...params}\r\n          error={!!errorMessage}\r\n          variant=\"standard\"\r\n          helperText={errorMessage}\r\n        />\r\n      )}\r\n    />\r\n  </LocalizationProvider>\r\n);\r\n\r\nexport default DatePickerContainer;\r\n", "import { ReaderState } from \"~/types/Readers.type\";\r\n\r\nexport const Readers = \"Readers\";\r\nexport const NewReader = \"New reader\";\r\nexport const CreateReaderTitle = \"Create reader\";\r\nexport const UpdateReaderTitle = \"Update reader\";\r\n\r\nexport const ErrorCreate = \"There was a problem in creating the reader\";\r\nexport const SuccessCreate = \"Reader created successfully\";\r\n\r\nexport const ErrorGetPaginated = \"There was a problem in receiving readers\";\r\nexport const ErrorGetSingle = \"There was a problem in receiving reader\";\r\n\r\nexport const ErrorDelete = \"There was a problem in deleting the reader\";\r\nexport const SuccessDelete = \"Reader deleted successfuly\";\r\n\r\nexport const ErrorUpdate = \"There was a problem in updating the reader\";\r\nexport const SuccessUpdate = \"Reader updated successfully\";\r\n\r\nexport const ErrorImageUpload = \"Error on upload. Try again!\";\r\n\r\nexport const SearchPlaceholder = \"Search for name, email or phone\";\r\n\r\nexport const Details = \"Details\";\r\nexport const Cities = \"Cities\";\r\nexport const NewReaderSubject = \"New reader account\";\r\n\r\nexport const initialReader: ReaderState = {\r\n  name: \"\",\r\n  city: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  email: \"\",\r\n  birthdate: \"\",\r\n};\r\n\r\nexport const readersColumns = [\r\n  { name: \"name\", value: \"Name\" },\r\n  { name: \"email\", value: \"Email\" },\r\n  { name: \"city\", value: \"City\" },\r\n  { name: \"phone\", value: \"Phone\" },\r\n];\r\n", "import { isEmpty } from \"lodash\";\r\nimport { InvalidField, RequiredField } from \"~/const\";\r\nimport { ErrorState, ReaderState } from \"~/types/Readers.type\";\r\nimport { checkIfEmail, checkIfNumber, checkIfValidDate } from \"@/utils/common\";\r\n\r\nexport const handleReaderErrors = (formData: ReaderState) => {\r\n  let errors: ErrorState = {};\r\n  const { name, city, address, email, phone, birthdate } = formData;\r\n\r\n  if (isEmpty(name)) errors.name = RequiredField;\r\n\r\n  if (isEmpty(city)) errors.city = RequiredField;\r\n\r\n  if (isEmpty(address)) errors.address = RequiredField;\r\n\r\n  if (isEmpty(email)) {\r\n    errors.email = RequiredField;\r\n  } else if (!checkIfEmail(email)) {\r\n    errors.email = InvalidField;\r\n  }\r\n\r\n  if (isEmpty(phone)) {\r\n    errors.phone = RequiredField;\r\n  } else if (!checkIfNumber(phone) || phone.length !== 10) {\r\n    errors.phone = InvalidField;\r\n  }\r\n\r\n  if (isEmpty(birthdate) || !checkIfValidDate(birthdate))\r\n    errors.birthdate = RequiredField;\r\n\r\n  return errors;\r\n};\r\n", "import {\r\n  ReadersResponse,\r\n  ReaderResponse,\r\n  ReaderState,\r\n  PaginatedReaders,\r\n} from \"~/types/Readers.type\";\r\nimport {\r\n  ReaderState as ReaderByEmailState,\r\n  ReaderResponse as ReaderByEmailResponse,\r\n} from \"~/types/Loans.type\";\r\n\r\nexport const fromPaginatedReadersResponse = (\r\n  readers: ReadersResponse[]\r\n): PaginatedReaders[] =>\r\n  readers.map((item) => ({\r\n    ...item,\r\n    city: item.city.name,\r\n  }));\r\n\r\nexport const fromSingleReaderResponse = (\r\n  reader: ReaderResponse\r\n): ReaderState => ({ ...reader, city: reader.city.id });\r\n\r\nexport const fromReaderByEmail = (\r\n  reader: ReaderByEmailResponse\r\n): ReaderByEmailState => ({ ...reader, city: reader.city.name });\r\n", "import {\r\n  ErrorCreate,\r\n  ErrorDelete,\r\n  ErrorGetPaginated,\r\n  ErrorGetSingle,\r\n  ErrorUpdate,\r\n  NewReaderSubject,\r\n} from \"~/components/Readers/Readers.const\";\r\nimport {\r\n  PaginatedReadersProps,\r\n  ReaderState,\r\n  ReaderIdProps,\r\n} from \"~/types/Readers.type\";\r\nimport {\r\n  fromReaderByEmail,\r\n  fromPaginatedReadersResponse,\r\n  fromSingleReaderResponse,\r\n} from \"~/transformers/readers.transformer\";\r\nimport prisma from \"prisma\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport generator from \"generate-password\";\r\nimport { sendEmail } from \"./mail.server\";\r\nimport { NewReaderEmail } from \"@/templates/NewReader.email\";\r\nimport { ReaderByEmailProps } from \"~/types/Loans.type\";\r\n\r\nexport const getPaginatedReaders = async ({\r\n  page,\r\n  search,\r\n  city,\r\n}: PaginatedReadersProps) => {\r\n  try {\r\n    const skip = (page > 1 && (page - 1) * 5) || undefined;\r\n\r\n    const readers = await prisma.$transaction(async (db) => {\r\n      const count = await db.readers.count({\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { email: { contains: search, mode: \"insensitive\" } },\r\n            { phone: { contains: search, mode: \"insensitive\" } },\r\n          ],\r\n          city:\r\n            (city && {\r\n              name: city,\r\n            }) ||\r\n            undefined,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      const data = await db.readers.findMany({\r\n        skip,\r\n        take: 5,\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { email: { contains: search, mode: \"insensitive\" } },\r\n            { phone: { contains: search, mode: \"insensitive\" } },\r\n          ],\r\n          city:\r\n            (city && {\r\n              name: city,\r\n            }) ||\r\n            undefined,\r\n        },\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          city: {\r\n            select: {\r\n              name: true,\r\n            },\r\n          },\r\n          email: true,\r\n          phone: true,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      if (!data) throw new Error(ErrorGetPaginated);\r\n\r\n      return { count, data: fromPaginatedReadersResponse(data) };\r\n    });\r\n\r\n    return readers;\r\n  } catch (err) {\r\n    throw new Error(ErrorGetPaginated);\r\n  }\r\n};\r\n\r\nexport const getSingleReader = async ({ readerId }: ReaderIdProps) => {\r\n  try {\r\n    const reader = await prisma.readers.findFirst({\r\n      where: {\r\n        id: readerId,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        name: true,\r\n        city: {\r\n          select: {\r\n            id: true,\r\n          },\r\n        },\r\n        address: true,\r\n        email: true,\r\n        phone: true,\r\n        birthdate: true,\r\n      },\r\n    });\r\n\r\n    if (!reader) throw new Error(ErrorGetSingle);\r\n\r\n    return fromSingleReaderResponse(reader);\r\n  } catch (err) {\r\n    throw new Error(ErrorGetSingle);\r\n  }\r\n};\r\n\r\nexport const createReader = async ({\r\n  name,\r\n  city,\r\n  address,\r\n  email,\r\n  phone,\r\n  birthdate,\r\n}: ReaderState) => {\r\n  try {\r\n    const readerByEmail = await prisma.readers.findFirst({\r\n      where: {\r\n        email,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (readerByEmail) throw new Error(ErrorCreate);\r\n\r\n    const generatePass = generator.generate({\r\n      length: 10,\r\n      numbers: true,\r\n    });\r\n\r\n    const password = await bcrypt.hash(generatePass, 10);\r\n\r\n    const reader = await prisma.readers.create({\r\n      data: {\r\n        name,\r\n        cityId: city,\r\n        address,\r\n        email,\r\n        phone,\r\n        password,\r\n        birthdate,\r\n      },\r\n    });\r\n\r\n    if (!reader) throw new Error(ErrorCreate);\r\n\r\n    const data = { password: generatePass, reader: name };\r\n\r\n    await sendEmail({\r\n      to: email,\r\n      subject: NewReaderSubject,\r\n      template: NewReaderEmail(data),\r\n    });\r\n\r\n    return reader;\r\n  } catch (err) {\r\n    throw new Error(ErrorCreate);\r\n  }\r\n};\r\n\r\nexport const updateReader = async ({\r\n  readerId,\r\n  name,\r\n  city,\r\n  address,\r\n  email,\r\n  phone,\r\n  birthdate,\r\n}: ReaderState & { readerId: string }) => {\r\n  try {\r\n    const readerByEmail = await prisma.readers.findFirst({\r\n      where: {\r\n        email,\r\n        deleted: false,\r\n        id: { not: readerId },\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (readerByEmail) throw new Error(ErrorUpdate);\r\n\r\n    const reader = await prisma.readers.updateMany({\r\n      where: {\r\n        id: readerId,\r\n        deleted: false,\r\n      },\r\n      data: {\r\n        name,\r\n        cityId: city,\r\n        address,\r\n        email,\r\n        phone,\r\n        birthdate,\r\n      },\r\n    });\r\n\r\n    if (!reader) throw new Error(ErrorUpdate);\r\n\r\n    return reader;\r\n  } catch (err) {\r\n    throw new Error(ErrorUpdate);\r\n  }\r\n};\r\n\r\nexport const deleteReader = async ({ readerId }: ReaderIdProps) => {\r\n  try {\r\n    const reader = await prisma.readers.update({\r\n      where: {\r\n        id: readerId,\r\n      },\r\n      data: {\r\n        deleted: true,\r\n      },\r\n    });\r\n\r\n    if (!reader) throw new Error(ErrorDelete);\r\n\r\n    return reader;\r\n  } catch (err) {\r\n    throw new Error(ErrorDelete);\r\n  }\r\n};\r\n\r\nexport const getReaderLoans = async ({ readerId }: ReaderIdProps) => {\r\n  try {\r\n    const readerLoans = await prisma.loans.findMany({\r\n      where: { readerId },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (!readerLoans) throw new Error(ErrorMessage);\r\n\r\n    return readerLoans;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const getReaderByEmail = async ({ email }: ReaderByEmailProps) => {\r\n  try {\r\n    if (!email) return null;\r\n\r\n    const reader = await prisma.readers.findFirst({\r\n      where: {\r\n        deleted: false,\r\n        email,\r\n      },\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n        city: {\r\n          select: {\r\n            name: true,\r\n          },\r\n        },\r\n        email: true,\r\n        phone: true,\r\n        deleted: true,\r\n      },\r\n    });\r\n\r\n    if (!reader) return null;\r\n\r\n    return fromReaderByEmail(reader);\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import nodemailer from \"nodemailer\";\r\nimport { SendEmailProps } from \"~/types/Readers.type\";\r\n\r\nexport const sendEmail = async ({ to, subject, template }: SendEmailProps) => {\r\n  try {\r\n    const transporter = nodemailer.createTransport({\r\n      host: process.env.SMTP_HOST,\r\n      port: 587,  \r\n      auth: {\r\n        user: process.env.FROM_EMAIL,\r\n        pass: process.env.EMAIL_PASSWORD,\r\n      },\r\n      from: process.env.FROM_EMAIL,\r\n    });\r\n\r\n    const message = {\r\n      from: `Library <${process.env.FROM_EMAIL}>`,\r\n      to,\r\n      subject,\r\n      html: template,\r\n    };\r\n\r\n    await transporter.sendMail(message);\r\n  } catch (e) {}\r\n};\r\n", "import { NewReaderProps } from \"./templates.type\";\r\n\r\nexport const NewReaderEmail = ({ reader, password }: NewReaderProps) => `<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>New reader account</title>\r\n</head>  \r\n<body>\r\n  <div style=\"text-align: center; margin: 30px 0; font-size: 15px\">\r\n    <h2 style=\"margin-bottom: 35px; font-size: 22px\">Hi ${reader},</h2>\r\n    <p>Your reader account has been created.</p>\r\n    <p>Your current password is <strong>${password}</strong>.</p>\r\n  </div>\r\n</body>\r\n</html>`;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport LibrariesForm from \"~/components/Libraries/Form/LibrariesForm\";\r\nimport {\r\n  CreateLibraryTitle,\r\n  ErrorCreate,\r\n  initialLibrary,\r\n  SuccessCreate,\r\n} from \"~/components/Libraries/Libraries.const\";\r\nimport { handleLibraryErrors } from \"~/components/Libraries/Libraries.helper\";\r\nimport { LibrariesSubmitProps, LibraryState } from \"~/types/Libraries.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { createLibrary } from \"~/server/libraries.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const cities = await getCities();\r\n\r\n    return goodRequest({ cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"create\") {\r\n      const name = formData.get(\"name\");\r\n      const city = formData.get(\"city\");\r\n      const address = formData.get(\"address\");\r\n      const phone = formData.get(\"phone\");\r\n      const schedule = formData.get(\"schedule\");\r\n\r\n      if (\r\n        !isString(name) ||\r\n        !isString(city) ||\r\n        !isString(address) ||\r\n        !isString(phone) ||\r\n        !isString(schedule)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectSchedule = JSON.parse(schedule);\r\n\r\n      const fields = { name, city, address, phone, schedule: objectSchedule };\r\n\r\n      const fieldErrors = handleLibraryErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await createLibrary(fields);\r\n\r\n      return goodRequest({\r\n        message: SuccessCreate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nconst CreateLibrary: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n\r\n  const [library, setLibrary] = useState<LibraryState>(initialLibrary);\r\n\r\n  const cities = data.cities;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(\"/libraries\");\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: LibrariesSubmitProps) => {\r\n    const fieldErrors = handleLibraryErrors(library);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringSchedule = JSON.stringify(library.schedule);\r\n\r\n    submit(\r\n      {\r\n        ...library,\r\n        schedule: stringSchedule,\r\n        intent: \"create\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: \"/libraries/create\",\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={CreateLibraryTitle} backUrl=\"/libraries\" />\r\n      <LibrariesForm\r\n        onSubmit={handleOnSubmit}\r\n        setLibrary={setLibrary}\r\n        library={library}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default CreateLibrary;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport LibrariesOverview from \"~/components/Libraries/Overview\";\r\nimport {\r\n  ErrorDelete,\r\n  Libraries,\r\n  NewLibrary,\r\n  SuccessDelete,\r\n} from \"~/components/Libraries/Libraries.const\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport {\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport {\r\n  getPaginatedLibraries,\r\n  deleteLibrary,\r\n} from \"~/server/libraries.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { debounce, isString } from \"lodash\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { checkIfNumber } from \"@/utils/common\";\r\nimport { useSearchParams, URLSearchParamsInit } from \"react-router-dom\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { FilterState } from \"~/types/Libraries.type\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const page = url.searchParams.get(\"page\");\r\n    const search = url.searchParams.get(\"search\") || \"\";\r\n    const city = url.searchParams.get(\"city\") || \"\";\r\n\r\n    let pageNumber = 1;\r\n    if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n    const [libraries, cities] = await Promise.all([\r\n      getPaginatedLibraries({\r\n        page: pageNumber,\r\n        search,\r\n        city,\r\n      }),\r\n      getCities(),\r\n    ]);\r\n\r\n    return goodRequest({ libraries, cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"delete\") {\r\n      const libraryId = formData.get(\"libraryId\");\r\n\r\n      if (!isString(libraryId)) {\r\n        return badRequest({\r\n          message: ErrorDelete,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await deleteLibrary({ libraryId });\r\n\r\n      return goodRequest({\r\n        message: SuccessDelete,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst PaginatedLibraries: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const data = useLoaderData();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n  const search = searchParams.get(\"search\") || \"\";\r\n  const city = searchParams.get(\"city\") || \"\";\r\n\r\n  let pageNumber = 1;\r\n  if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n  const libraries = data.libraries;\r\n  const cities = data.cities;\r\n\r\n  const filterCities = cities.find(\r\n    (item: AutocompleteOptions) => item.name === city\r\n  );\r\n\r\n  const [filter, setFilter] = useState<FilterState>({\r\n    search,\r\n    city: filterCities?.id || \"\",\r\n  });\r\n\r\n  const handleCreateLibrary = () => {\r\n    navigate(`${location.pathname}/create`);\r\n  };\r\n\r\n  const handleChangePage = (pageNumber: number) => {\r\n    setSearchParams((oldSearchParams: URLSearchParams) => ({\r\n      ...oldSearchParams,\r\n      page: pageNumber.toString(),\r\n    }));\r\n  };\r\n\r\n  const debounceSearchChange = useCallback(\r\n    debounce((value: string) => {\r\n      let params: URLSearchParamsInit = {};\r\n\r\n      if (value) params = { ...params, search: value };\r\n      if (city) params = { ...params, city };\r\n\r\n      setSearchParams(params);\r\n    }, 500),\r\n    [city]\r\n  );\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setFilter((oldValue: FilterState) => ({ ...oldValue, search: value }));\r\n    debounceSearchChange(value);\r\n  };\r\n\r\n  const handleCityChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      city: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (value) params = { ...params, city: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    submit(\r\n      {\r\n        libraryId: id,\r\n        intent: \"delete\",\r\n      },\r\n      {\r\n        method: \"delete\",\r\n        action: `/libraries${location.search}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={Libraries}>\r\n        <Button\r\n          title={NewLibrary}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleCreateLibrary}\r\n        />\r\n      </LayoutTitle>\r\n\r\n      <LibrariesOverview\r\n        libraries={libraries}\r\n        page={pageNumber}\r\n        onPageChange={handleChangePage}\r\n        filter={filter}\r\n        onSearchChange={handleSearchChange}\r\n        onCityChange={handleCityChange}\r\n        onDelete={handleDelete}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default PaginatedLibraries;\r\n", "import TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport { TableProps } from \"./Table.type\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport {\r\n  StyledTable,\r\n  StyledTableCell,\r\n  StyledBodyRow,\r\n  StyledHeaderRow,\r\n  EmptyBodyRow,\r\n} from \"./Table.style\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport TableActions from \"./components/TableActions\";\r\nimport { useLocation, useNavigate } from \"@remix-run/react\";\r\n\r\nconst PaginatedTableContainer: React.FC<TableProps> = ({\r\n  columns,\r\n  rows,\r\n  count,\r\n  page,\r\n  onPageChange,\r\n  onDelete,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    onPageChange(newPage + 1);\r\n  };\r\n\r\n  const handleEditRow = (rowId: string) => {\r\n    navigate(`${location.pathname}/${rowId}`);\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <TableContainer>\r\n        <StyledTable>\r\n          <TableHead>\r\n            <StyledHeaderRow>\r\n              {columns.map((column, index) => (\r\n                <StyledTableCell key={index}>{column.value}</StyledTableCell>\r\n              ))}\r\n\r\n              <StyledTableCell align=\"right\" width=\"50px\">\r\n                Delete\r\n              </StyledTableCell>\r\n            </StyledHeaderRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {rows.map((row, rowIndex) => (\r\n              <StyledBodyRow\r\n                key={rowIndex}\r\n                onClick={() => handleEditRow(row.id)}\r\n              >\r\n                {columns.map((column, columnIndex) => (\r\n                  <TableCell key={columnIndex}>\r\n                    {row[column.name] || \"-\"}\r\n                  </TableCell>\r\n                ))}\r\n\r\n                <TableCell align=\"right\" width=\"50px\">\r\n                  <TableActions onDelete={() => onDelete(row.id)} />\r\n                </TableCell>\r\n              </StyledBodyRow>\r\n            ))}\r\n          </TableBody>\r\n\r\n          {rows.length === 0 && (\r\n            <EmptyBodyRow>\r\n              <TableCell colSpan={12} align=\"center\">\r\n                No data\r\n              </TableCell>\r\n            </EmptyBodyRow>\r\n          )}\r\n        </StyledTable>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[]}\r\n        component=\"div\"\r\n        count={count}\r\n        rowsPerPage={5}\r\n        page={page - 1}\r\n        onPageChange={handleChangePage}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default PaginatedTableContainer;\r\n", "import collorPalette from \"@/theme/colorPalette\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport Table, { TableProps } from \"@mui/material/Table\";\r\nimport TableCell, { TableCellProps } from \"@mui/material/TableCell\";\r\nimport TableRow, { TableRowProps } from \"@mui/material/TableRow\";\r\n\r\nexport const StyledHeaderRow = MuiStyled(TableRow)<TableRowProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    \"td, th\": { border: 0, whiteSpace: \"nowrap\" },\r\n  })\r\n);\r\n\r\nexport const StyledBodyRow = MuiStyled(TableRow)<TableRowProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    \"td, th\": { border: 0, whiteSpace: \"nowrap\" },\r\n    borderTop: `1px solid ${collorPalette.grey.lighter}`,\r\n    borderRight: `1px solid transparent`,\r\n    borderLeft: `1px solid transparent`,\r\n    \"&:last-child\": { borderBottom: `1px solid transparent` },\r\n    \"&:hover\": {\r\n      border: `1px solid ${collorPalette.primary.base}`,\r\n      cursor: \"pointer\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const EmptyBodyRow = MuiStyled(TableRow)<TableRowProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    \"td, th\": { border: 0, whiteSpace: \"nowrap\" },\r\n    borderTop: `1px solid ${collorPalette.grey.lighter}`,\r\n    borderRight: `1px solid transparent`,\r\n    borderLeft: `1px solid transparent`,\r\n  })\r\n);\r\n\r\nexport const StyledTable = MuiStyled(Table)<TableProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    minWidth: 600,\r\n    marginBottom: \"20px\",\r\n  })\r\n);\r\n\r\nexport const StyledTableCell = MuiStyled(TableCell)<TableCellProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      fontWeight: 600,\r\n      fontSize: \"16px\",\r\n    })\r\n);\r\n", "import IconButton from \"@mui/material/IconButton\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport { ActionsProps } from \"../Table.type\";\r\n\r\nconst TableActions: React.FC<ActionsProps> = ({onDelete}) => {\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    onDelete()\r\n  };\r\n\r\n  return (\r\n    <IconButton onClick={handleClick}>\r\n      <DeleteOutlineIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default TableActions;\r\n", "import Autocomplete from \"@/components/Autocomplete\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport Input from \"@/components/Input\";\r\nimport Table from \"@/components/Table\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { StyledFilters } from \"~/components/Books/Books.style\";\r\nimport { SearchPlaceholder, librariesColumns, Cities } from \"../Libraries.const\";\r\nimport { LibrariesOverviewProps } from \"~/types/Libraries.type\";\r\n\r\nconst LibrariesOverview: React.FC<LibrariesOverviewProps> = ({\r\n  libraries,\r\n  page,\r\n  filter,\r\n  onPageChange,\r\n  onSearchChange,\r\n  onCityChange,\r\n  onDelete,\r\n  cities,\r\n}) => {\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"30px\">\r\n        <StyledFilters>\r\n          <Input\r\n            placeholder={SearchPlaceholder}\r\n            onChange={onSearchChange}\r\n            width=\"300px\"\r\n            value={filter.search}\r\n          />\r\n          <Autocomplete\r\n            onChange={onCityChange}\r\n            options={cities}\r\n            value={filter.city}\r\n            placeholder={Cities}\r\n            width=\"200px\"\r\n          />\r\n        </StyledFilters>\r\n        <Table\r\n          columns={librariesColumns}\r\n          rows={libraries.data}\r\n          count={libraries.count}\r\n          page={page}\r\n          onPageChange={onPageChange}\r\n          onDelete={onDelete}\r\n        />\r\n      </ColumnFlex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LibrariesOverview;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport ReadersForm from \"~/components/Readers/Form/ReadersForm\";\r\nimport {\r\n  CreateReaderTitle,\r\n  ErrorCreate,\r\n  initialReader,\r\n  SuccessCreate,\r\n} from \"~/components/Readers/Readers.const\";\r\nimport { handleReaderErrors } from \"~/components/Readers/Readers.helper\";\r\nimport { ReadersSubmitProps, ReaderState } from \"~/types/Readers.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { createReader } from \"~/server/readers.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const cities = await getCities();\r\n\r\n    return goodRequest({ cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"create\") {\r\n      const name = formData.get(\"name\");\r\n      const city = formData.get(\"city\");\r\n      const address = formData.get(\"address\");\r\n      const email = formData.get(\"email\");\r\n      const phone = formData.get(\"phone\");\r\n      const birthdate = formData.get(\"birthdate\");\r\n\r\n      if (\r\n        !isString(name) ||\r\n        !isString(city) ||\r\n        !isString(address) ||\r\n        !isString(email) ||\r\n        !isString(phone) ||\r\n        !isString(birthdate)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const fields = { name, city, address, email, phone, birthdate };\r\n\r\n      const fieldErrors = handleReaderErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await createReader(fields);\r\n\r\n      return goodRequest({\r\n        message: SuccessCreate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nconst CreateReader: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n\r\n  const [reader, setReader] = useState<ReaderState>(initialReader);\r\n\r\n  const cities = data.cities;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(\"/readers\");\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: ReadersSubmitProps) => {\r\n    const fieldErrors = handleReaderErrors(reader);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    submit(\r\n      {\r\n        ...reader,\r\n        intent: \"create\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: \"/readers/create\",\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={CreateReaderTitle} backUrl=\"/readers\" />\r\n      <ReadersForm\r\n        onSubmit={handleOnSubmit}\r\n        setReader={setReader}\r\n        reader={reader}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default CreateReader;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useParams,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { handleBookErrors } from \"~/components/Books/Books.helper\";\r\nimport { BooksSubmitProps, BookState } from \"~/types/Books.type\";\r\nimport BooksForm from \"~/components/Books/Form\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport {\r\n  UpdateBookTitle,\r\n  ErrorUpdate,\r\n  SuccessUpdate,\r\n  ErrorGetSingle,\r\n} from \"~/components/Books/Books.const\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { getCategories } from \"~/server/categories.server\";\r\nimport { getPublishHouses } from \"~/server/publishHouses.server\";\r\nimport { getSingleBook, updateBook } from \"~/server/books.server\";\r\nimport { getLibraries } from \"~/server/libraries.server\";\r\nimport { getImage, uploadImage } from \"~/server/media.server\";\r\nimport { getLanguages } from \"~/server/languages.server\";\r\nimport { isValidUrl } from \"@/utils/common\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const bookId = url.pathname.split(\"/\").pop();\r\n\r\n    if (!isString(bookId)) {\r\n      return badRequest({\r\n        message: ErrorGetSingle,\r\n        success: false,\r\n      });\r\n    }\r\n\r\n    const [book, categories, publishHouses, libraries, languages] =\r\n      await Promise.all([\r\n        getSingleBook({\r\n          bookId,\r\n        }),\r\n        getCategories(),\r\n        getPublishHouses(),\r\n        getLibraries(),\r\n        getLanguages(),\r\n      ]);\r\n\r\n    if (book.image) book.image = await getImage(book.image);\r\n\r\n      return goodRequest({\r\n        book,\r\n        categories,\r\n        publishHouses,\r\n        libraries,\r\n        languages,\r\n      });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"update\") {\r\n      const name = formData.get(\"name\");\r\n      const author = formData.get(\"author\");\r\n      const description = formData.get(\"description\");\r\n      const image = formData.get(\"image\");\r\n      const category = formData.get(\"category\");\r\n      const publishHouse = formData.get(\"publishHouse\");\r\n      const releaseYear = formData.get(\"releaseYear\");\r\n      const pagesNumber = formData.get(\"pagesNumber\");\r\n      const language = formData.get(\"language\");\r\n      const bookLibraries = formData.get(\"bookLibraries\");\r\n\r\n      const url = new URL(request.url);\r\n      const bookId = url.pathname.split(\"/\").pop();\r\n\r\n      if (\r\n        !isString(bookId) ||\r\n        !isString(name) ||\r\n        !isString(author) ||\r\n        !isString(description) ||\r\n        !isString(image) ||\r\n        !isString(category) ||\r\n        !isString(publishHouse) ||\r\n        !isString(releaseYear) ||\r\n        !isString(pagesNumber) ||\r\n        !isString(language) ||\r\n        !isString(bookLibraries)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectBookLibraries = JSON.parse(bookLibraries);\r\n\r\n      const fields = {\r\n        name,\r\n        author,\r\n        description,\r\n        image,\r\n        category,\r\n        publishHouse,\r\n        releaseYear,\r\n        pagesNumber,\r\n        language,\r\n        bookLibraries: objectBookLibraries,\r\n      };\r\n\r\n      const fieldErrors = handleBookErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      let imageId;\r\n      if (!isValidUrl(image)) imageId = await uploadImage(image);\r\n\r\n      await updateBook({ ...fields, bookId, image: imageId });\r\n\r\n      return goodRequest({\r\n        message: SuccessUpdate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst UpdateBook: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n  const urlParams = useParams();\r\n\r\n  const [book, setBook] = useState<BookState>(data.book);\r\n\r\n  const categories = data.categories;\r\n  const publishHouses = data.publishHouses;\r\n  const libraries = data.libraries;\r\n  const languages = data.languages;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(\"/books\");\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: BooksSubmitProps) => {\r\n    const fieldErrors = handleBookErrors(book);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringBookLibraries = JSON.stringify(book.bookLibraries);\r\n\r\n    submit(\r\n      {\r\n        ...book,\r\n        bookLibraries: stringBookLibraries,\r\n        intent: \"update\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: `/books/${urlParams.bookId}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={UpdateBookTitle} backUrl=\"/books\" />\r\n      <BooksForm\r\n        onSubmit={handleOnSubmit}\r\n        setBook={setBook}\r\n        book={book}\r\n        categories={categories}\r\n        libraries={libraries}\r\n        publishHouses={publishHouses}\r\n        languages={languages}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default UpdateBook;\r\n", "import { isEmpty } from \"lodash\";\r\nimport { InvalidField, RequiredField } from \"~/const\";\r\nimport { checkIfNumber } from \"@/utils/common\";\r\nimport { ErrorState, BookState, BookLibrariesError } from \"~/types/Books.type\";\r\n\r\nexport const handleBookErrors = (formData: BookState) => {\r\n  let errors: ErrorState = {};\r\n  const {\r\n    name,\r\n    author,\r\n    description,\r\n    image,\r\n    pagesNumber,\r\n    category,\r\n    publishHouse,\r\n    releaseYear,\r\n    language,\r\n    bookLibraries,\r\n  } = formData;\r\n\r\n  if (isEmpty(name)) errors.name = RequiredField;\r\n\r\n  if (isEmpty(author)) errors.author = RequiredField;\r\n\r\n  if (isEmpty(description)) errors.description = RequiredField;\r\n\r\n  if (isEmpty(image)) errors.image = RequiredField;\r\n\r\n  if (isEmpty(pagesNumber)) {\r\n    errors.pagesNumber = RequiredField;\r\n  } else if (!checkIfNumber(pagesNumber)) {\r\n    errors.pagesNumber = InvalidField;\r\n  }\r\n\r\n  if (isEmpty(category)) errors.category = RequiredField;\r\n\r\n  if (isEmpty(publishHouse)) errors.publishHouse = RequiredField;\r\n\r\n  if (isEmpty(releaseYear)) {\r\n    errors.releaseYear = RequiredField;\r\n  } else if (!checkIfNumber(releaseYear)) {\r\n    errors.releaseYear = InvalidField;\r\n  }\r\n\r\n  if (isEmpty(language)) errors.language = RequiredField;\r\n\r\n  if (!isEmpty(bookLibraries))\r\n    bookLibraries.map((item, index) => {\r\n      let bookLibrariesErrors: BookLibrariesError = {};\r\n\r\n      if (isEmpty(item.library))\r\n        bookLibrariesErrors = {\r\n          ...bookLibrariesErrors,\r\n          library: RequiredField,\r\n        };\r\n\r\n      if (isEmpty(item.sku))\r\n        bookLibrariesErrors = {\r\n          ...bookLibrariesErrors,\r\n          sku: RequiredField,\r\n        };\r\n\r\n      if (isEmpty(item.place))\r\n        bookLibrariesErrors = {\r\n          ...bookLibrariesErrors,\r\n          place: RequiredField,\r\n        };\r\n\r\n      if (!isEmpty(bookLibrariesErrors))\r\n        errors = {\r\n          ...errors,\r\n          bookLibraries: {\r\n            ...errors.bookLibraries,\r\n            [index]: bookLibrariesErrors,\r\n          },\r\n        };\r\n    });\r\n  return errors;\r\n};\r\n", "import Paper from \"@mui/material/Paper\";\r\nimport Input from \"@/components/Input\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"@remix-run/react\";\r\nimport {\r\n  ErrorState,\r\n  BooksFormProps,\r\n  BookValue,\r\n  BookLibrariesState,\r\n  BookLibrariesValues,\r\n} from \"~/types/Books.type\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { InputType } from \"@/components/Input/Input.type\";\r\nimport { StyledFlexButton } from \"~/components/Libraries/Libraries.style\";\r\nimport {\r\n  Details,\r\n  ErrorImageUpload,\r\n  initialBookLibrary,\r\n  Units,\r\n} from \"../Books.const\";\r\nimport { StyledColumnFlex, StyledAddFab, StyleFlex } from \"../Books.style\";\r\nimport BooksUnits from \"./BooksUnits\";\r\nimport { ColumnFlex, AlignedFlex } from \"@/components/Flex\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { isEmpty } from \"lodash\";\r\nimport ImageUploader from \"@/components/ImageUploader\";\r\nimport { readFileAsync } from \"@/utils/common\";\r\n\r\nconst BooksForm: React.FC<BooksFormProps> = ({\r\n  onSubmit,\r\n  setBook,\r\n  book,\r\n  categories,\r\n  libraries,\r\n  publishHouses,\r\n  languages,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const urlParams = useParams();\r\n\r\n  const [errors, setErrors] = useState<ErrorState>({});\r\n\r\n  const handleInputChange = (value: string, field: BookValue) => {\r\n    setBook((oldBook) => ({ ...oldBook, [field]: value }));\r\n\r\n    if (errors[field])\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors[field];\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleBookLibrariesChange = (\r\n    value: string,\r\n    field: BookLibrariesValues,\r\n    index: number\r\n  ) => {\r\n    setBook((oldBook) => {\r\n      const bookLibraries = oldBook.bookLibraries.map((item, i) => {\r\n        if (i === index) {\r\n          return { ...item, [field]: value };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      return { ...oldBook, bookLibraries };\r\n    });\r\n\r\n    if (errors.bookLibraries && errors.bookLibraries[index][field])\r\n      setErrors((oldErrors) => {\r\n        oldErrors.bookLibraries && delete oldErrors.bookLibraries[index][field];\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleAddBookLibrary = () => {\r\n    setBook((oldBook) => ({\r\n      ...oldBook,\r\n      bookLibraries: [...oldBook.bookLibraries, initialBookLibrary],\r\n    }));\r\n\r\n    if (!isEmpty(errors.bookLibraries))\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors.bookLibraries;\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleRemoveBookLibrary = (index: number) => {\r\n    setBook((oldBook) => {\r\n      const newBookLibraries = oldBook.bookLibraries.filter(\r\n        (item, i) => i !== index\r\n      );\r\n\r\n      return {\r\n        ...oldBook,\r\n        bookLibraries: newBookLibraries,\r\n      };\r\n    });\r\n\r\n    if (!isEmpty(errors.bookLibraries))\r\n      setErrors((oldErrors) => {\r\n        delete oldErrors.bookLibraries;\r\n        return oldErrors;\r\n      });\r\n  };\r\n\r\n  const handleImageChange = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    try {\r\n      const file = e.target.files && e.target.files[0];\r\n\r\n      if (!file) {\r\n        setErrors((oldErrors) => ({\r\n          ...oldErrors,\r\n          image: ErrorImageUpload,\r\n        }));\r\n\r\n        return;\r\n      }\r\n\r\n      const image = await readFileAsync(file);\r\n\r\n      setBook((oldBook) => ({\r\n        ...oldBook,\r\n        image: image as string,\r\n      }));\r\n\r\n      if (errors.image)\r\n        setErrors((oldErrors) => {\r\n          const { image, ...rest } = oldErrors;\r\n          return rest;\r\n        });\r\n    } catch (err) {\r\n      setErrors((oldErrors) => ({\r\n        ...oldErrors,\r\n        image: ErrorImageUpload,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    onSubmit({\r\n      callback: (fieldErrors: ErrorState) => setErrors(fieldErrors),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"40px\">\r\n        <Typography variant=\"h3\">{Details}</Typography>\r\n\r\n        <ColumnFlex gap=\"20px\">\r\n          <StyleFlex>\r\n            <StyledColumnFlex>\r\n              <Input\r\n                label=\"Name*\"\r\n                errorMessage={errors.name}\r\n                value={book.name}\r\n                onChange={(value: string) =>\r\n                  handleInputChange(value, BookValue.name)\r\n                }\r\n              />\r\n              <Input\r\n                label=\"Author*\"\r\n                errorMessage={errors.author}\r\n                value={book.author}\r\n                onChange={(value: string) =>\r\n                  handleInputChange(value, BookValue.author)\r\n                }\r\n              />\r\n              <Autocomplete\r\n                label=\"Category*\"\r\n                onChange={(value: AutocompleteOptions | null) =>\r\n                  handleInputChange(value?.id || \"\", BookValue.category)\r\n                }\r\n                errorMessage={errors.category}\r\n                options={categories}\r\n                value={book.category}\r\n              />\r\n              <Autocomplete\r\n                label=\"Publish house*\"\r\n                onChange={(value: AutocompleteOptions | null) =>\r\n                  handleInputChange(value?.id || \"\", BookValue.publishHouse)\r\n                }\r\n                errorMessage={errors.publishHouse}\r\n                options={publishHouses}\r\n                value={book.publishHouse}\r\n              />\r\n              <Input\r\n                label=\"Release year*\"\r\n                type={InputType.number}\r\n                errorMessage={errors.releaseYear}\r\n                value={book.releaseYear}\r\n                onChange={(value: string) =>\r\n                  handleInputChange(value, BookValue.releaseYear)\r\n                }\r\n              />\r\n            </StyledColumnFlex>\r\n\r\n            <StyledColumnFlex>\r\n              <Autocomplete\r\n                label=\"Language*\"\r\n                onChange={(value: AutocompleteOptions | null) =>\r\n                  handleInputChange(value?.id || \"\", BookValue.language)\r\n                }\r\n                errorMessage={errors.language}\r\n                options={languages}\r\n                value={book.language}\r\n              />\r\n              <Input\r\n                label=\"Pages number*\"\r\n                type={InputType.number}\r\n                errorMessage={errors.pagesNumber}\r\n                value={book.pagesNumber}\r\n                onChange={(value: string) =>\r\n                  handleInputChange(value, BookValue.pagesNumber)\r\n                }\r\n              />\r\n              <ImageUploader\r\n                onImageChange={handleImageChange}\r\n                errorMessage={errors.image}\r\n                image={book.image}\r\n              />\r\n            </StyledColumnFlex>\r\n          </StyleFlex>\r\n\r\n          <StyleFlex>\r\n            <Input\r\n              label=\"Description*\"\r\n              errorMessage={errors.description}\r\n              value={book.description}\r\n              onChange={(value: string) =>\r\n                handleInputChange(value, BookValue.description)\r\n              }\r\n              multiline\r\n            />\r\n          </StyleFlex>\r\n        </ColumnFlex>\r\n        <AlignedFlex gap=\"20px\">\r\n          <Typography variant=\"h3\">{Units}</Typography>\r\n          <StyledAddFab color=\"primary\" onClick={handleAddBookLibrary}>\r\n            <AddIcon />\r\n          </StyledAddFab>\r\n        </AlignedFlex>\r\n\r\n        <ColumnFlex gap=\"20px\">\r\n          {book.bookLibraries.map((item: BookLibrariesState, index) => (\r\n            <BooksUnits\r\n              key={index}\r\n              bookLibrary={item}\r\n              libraries={libraries}\r\n              onChange={(value: string, field: BookLibrariesValues) =>\r\n                handleBookLibrariesChange(value, field, index)\r\n              }\r\n              onRemoveClick={() => handleRemoveBookLibrary(index)}\r\n              error={\r\n                (errors.bookLibraries && errors.bookLibraries[index]) || {}\r\n              }\r\n            />\r\n          ))}\r\n        </ColumnFlex>\r\n      </ColumnFlex>\r\n\r\n      <StyledFlexButton>\r\n        <Button\r\n          title=\"Cancel\"\r\n          variant={ButtonVariant.outlined}\r\n          onClick={() => navigate(\"/books\")}\r\n        />\r\n        <Button\r\n          type={ButtonType.submit}\r\n          title={urlParams.bookId ? \"Update\" : \"Create\"}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleOnSubmit}\r\n        />\r\n      </StyledFlexButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BooksForm;\r\n", "import { BookLibrariesState, BookState } from \"~/types/Books.type\";\r\n\r\nexport const Books = \"Books\";\r\nexport const NewBook = \"New book\";\r\nexport const CreateBookTitle = \"Create book\";\r\nexport const UpdateBookTitle = \"Update book\";\r\n\r\nexport const ErrorCreate = \"There was a problem in creating the book\";\r\nexport const SuccessCreate = \"Book created successfully\";\r\n\r\nexport const ErrorGetPaginated = \"There was a problem in receiving books\";\r\nexport const ErrorGetSingle = \"There was a problem in receiving book\";\r\n\r\nexport const ErrorDelete = \"There was a problem in deleting the book\";\r\nexport const SuccessDelete = \"Book deleted successfuly\";\r\n\r\nexport const ErrorUpdate = \"There was a problem in updating the book\";\r\nexport const SuccessUpdate = \"Book updated successfully\";\r\n\r\nexport const ErrorImageUpload = \"Error on upload. Try again!\";\r\n\r\nexport const SearchPlaceholder = \"Search for name, author or sku\";\r\n\r\nexport const Categories = \"Categories\";\r\nexport const Details = \"Book details\";\r\nexport const Libraries = \"Libraries\";\r\nexport const Units = \"Book units\";\r\n\r\nexport const initialBook: BookState = {\r\n  name: \"\",\r\n  author: \"\",\r\n  description: \"\",\r\n  image: \"\",\r\n  pagesNumber: \"\",\r\n  category: \"\",\r\n  publishHouse: \"\",\r\n  releaseYear: \"\",\r\n  language: \"\",\r\n  bookLibraries: [],\r\n};\r\n\r\nexport const initialBookLibrary: BookLibrariesState = {\r\n  library: \"\",\r\n  sku: \"\",\r\n  place: \"\",\r\n};\r\n\r\nexport const booksColumns = [\r\n  { name: \"name\", value: \"Name\" },\r\n  { name: \"category\", value: \"Category\" },\r\n  { name: \"author\", value: \"Author\" },\r\n];\r\n", "import Input from \"@/components/Input\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { BookLibrariesValues, BooksLibrariesProps } from \"~/types/Books.type\";\r\nimport { StyledRemoveFab, StyledRemoveIcon, UnitsFlex } from \"../Books.style\";\r\n\r\nconst BooksUnits: React.FC<BooksLibrariesProps> = ({\r\n  bookLibrary,\r\n  onChange,\r\n  libraries,\r\n  error,\r\n  onRemoveClick,\r\n}) => (\r\n  <UnitsFlex>\r\n    <Autocomplete\r\n      label=\"Library*\"\r\n      onChange={(value: AutocompleteOptions | null) =>\r\n        onChange(value?.id || \"\", BookLibrariesValues.library)\r\n      }\r\n      errorMessage={error.library}\r\n      options={libraries}\r\n      value={bookLibrary.library}\r\n    />\r\n    <Input\r\n      label=\"SKU*\"\r\n      errorMessage={error.sku}\r\n      value={bookLibrary.sku}\r\n      onChange={(value: string) => onChange(value, BookLibrariesValues.sku)}\r\n    />\r\n    <Input\r\n      label=\"Place*\"\r\n      errorMessage={error.place}\r\n      value={bookLibrary.place}\r\n      onChange={(value: string) => onChange(value, BookLibrariesValues.place)}\r\n    />\r\n    <StyledRemoveFab color=\"primary\" onClick={onRemoveClick}>\r\n      <StyledRemoveIcon />\r\n    </StyledRemoveFab>\r\n  </UnitsFlex>\r\n);\r\n\r\nexport default BooksUnits;\r\n", "export const UploadImage = \"Upload image\";", "import styled from \"styled-components\";\r\nimport { AlignedFlex, ColumnFlex } from \"@/components/Flex\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport { ImagePaperProps } from \"./ImageUploader.type\";\r\n\r\nexport const ImagePaper = styled(ColumnFlex)<ImagePaperProps>`\r\n  gap: 10px;\r\n  padding: 10px;\r\n  border: ${(props) =>\r\n    `1px solid ${props.error ? `#d32f2f` : collorPalette.grey.base}`};\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ImageBox = styled(AlignedFlex)`\r\n  margin: auto;\r\n  flex: auto;\r\n  min-height: 40px;\r\n  max-height: 120px;\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n  max-height: inherit;\r\n  width: 100%;\r\n`;\r\n", "import { ImageUploaderContainerProps } from \"./ImageUploader.type\";\r\nimport { UploadImage } from \"./ImageUploader.const\";\r\nimport { ImageBox, ImagePaper, StyledImage } from \"./ImageUploader.style\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport { ContainedButton } from \"@/components/Button/Button.style\";\r\n\r\nconst ImageUploaderContainer: React.FC<ImageUploaderContainerProps> = ({\r\n  onImageChange,\r\n  errorMessage,\r\n  image,\r\n}) => (\r\n  <ColumnFlex gap=\"10px\">\r\n    <ImagePaper error={!!errorMessage}>\r\n      <ContainedButton component=\"label\">\r\n        {UploadImage}\r\n        <input type=\"file\" accept=\"image/*\" onChange={onImageChange} hidden />\r\n      </ContainedButton>\r\n\r\n      <ImageBox>\r\n        {image ? (\r\n          <StyledImage src={image} />\r\n        ) : (\r\n          <Typography variant=\"h1\">No image</Typography>\r\n        )}\r\n      </ImageBox>\r\n    </ImagePaper>\r\n\r\n    {errorMessage && (\r\n      <FormHelperText error={true}>{errorMessage}</FormHelperText>\r\n    )}\r\n  </ColumnFlex>\r\n);\r\n\r\nexport default ImageUploaderContainer;\r\n", "import { ErrorMessage } from \"~/const\";\r\nimport prisma from \"prisma\";\r\n\r\nexport const getCategories = async () => {\r\n  try {\r\n    const categories = await prisma.categories.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n      },\r\n    });\r\n\r\n    if (!categories) throw new Error(ErrorMessage);\r\n\r\n    return categories;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import { ErrorMessage } from \"~/const\";\r\nimport prisma from \"prisma\";\r\n\r\nexport const getPublishHouses = async () => {\r\n  try {\r\n    const publishHouses = await prisma.publishHouses.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n      },\r\n    });\r\n\r\n    if (!publishHouses) throw new Error(ErrorMessage);\r\n\r\n    return publishHouses;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import {\r\n  BookLibrariesResponse,\r\n  BookLibrariesState,\r\n  BookResponse,\r\n  BooksResponse,\r\n  BookState,\r\n  PaginatedBooks,\r\n} from \"~/types/Books.type\";\r\nimport {\r\n  BookLibraryState as BookBySkuState,\r\n  BookByLibraryResponse as BookBySkuResponse,\r\n} from \"~/types/Loans.type\";\r\n\r\nexport const fromPaginatedBooksResponse = (\r\n  books: BooksResponse[]\r\n): PaginatedBooks[] =>\r\n  books.map((item) => ({\r\n    ...item,\r\n    category: item.category.name,\r\n  }));\r\n\r\nexport const fromBookLibraries = (\r\n  bookLibraries: BookLibrariesResponse[]\r\n): BookLibrariesState[] =>\r\n  bookLibraries.map((item) => ({\r\n    id: item.id,\r\n    library: item.libraryId,\r\n    sku: item.SKU,\r\n    place: item.place,\r\n  }));\r\n\r\nexport const fromSingleBookResponse = (book: BookResponse): BookState => ({\r\n  ...book,\r\n  pagesNumber: book.pagesNumber.toString(),\r\n  releaseYear: book.releaseYear.toString(),\r\n  category: book.category.id,\r\n  publishHouse: book.publishHouse.id,\r\n  language: book.language.id,\r\n  bookLibraries: fromBookLibraries(book.bookLibraries),\r\n});\r\n\r\nexport const fromBookBySku = (bookBySku: BookBySkuResponse): BookBySkuState => {\r\n  const { id, book, library, SKU, place, deleted } = bookBySku;\r\n\r\n  return {\r\n    id,\r\n    name: book.name,\r\n    library: library.name,\r\n    city: library.city.name,\r\n    sku: SKU,\r\n    place,\r\n    deleted,\r\n  };\r\n};\r\n", "import {\r\n  ErrorCreate,\r\n  ErrorDelete,\r\n  ErrorGetPaginated,\r\n  ErrorGetSingle,\r\n  ErrorUpdate,\r\n} from \"~/components/Books/Books.const\";\r\nimport {\r\n  PaginatedBooksProps,\r\n  BookIdProps,\r\n  BookState,\r\n  EachBookLibrary,\r\n  BookBySkuProps,\r\n} from \"~/types/Books.type\";\r\nimport {\r\n  fromBookBySku,\r\n  fromPaginatedBooksResponse,\r\n  fromSingleBookResponse,\r\n} from \"~/transformers/books.transformer\";\r\nimport prisma from \"prisma\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { toFindDuplicates } from \"@/utils/common\";\r\n\r\nexport const getPaginatedBooks = async ({\r\n  page,\r\n  search,\r\n  category,\r\n  library,\r\n}: PaginatedBooksProps) => {\r\n  try {\r\n    const skip = (page > 1 && (page - 1) * 5) || undefined;\r\n\r\n    const books = await prisma.$transaction(async (db) => {\r\n      const count = await db.books.count({\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { author: { contains: search, mode: \"insensitive\" } },\r\n            {\r\n              bookLibraries: {\r\n                some: {\r\n                  deleted: false,\r\n                  SKU: { contains: search, mode: \"insensitive\" },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          category:\r\n            (category && {\r\n              name: category,\r\n            }) ||\r\n            undefined,\r\n          bookLibraries:\r\n            (library && {\r\n              some: {\r\n                deleted: false,\r\n                library: {\r\n                  name: library,\r\n                },\r\n              },\r\n            }) ||\r\n            undefined,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      const data = await db.books.findMany({\r\n        skip,\r\n        take: 5,\r\n        where: {\r\n          deleted: false,\r\n          OR: [\r\n            {\r\n              name: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            { author: { contains: search, mode: \"insensitive\" } },\r\n            {\r\n              bookLibraries: {\r\n                some: {\r\n                  deleted: false,\r\n                  SKU: { contains: search, mode: \"insensitive\" },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          category:\r\n            (category && {\r\n              name: category,\r\n            }) ||\r\n            undefined,\r\n          bookLibraries:\r\n            (library && {\r\n              some: {\r\n                deleted: false,\r\n                library: {\r\n                  name: library,\r\n                },\r\n              },\r\n            }) ||\r\n            undefined,\r\n        },\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          author: true,\r\n          description: true,\r\n          category: {\r\n            select: {\r\n              name: true,\r\n            },\r\n          },\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      if (!data) throw new Error(ErrorGetPaginated);\r\n\r\n      return { count, data: fromPaginatedBooksResponse(data) };\r\n    });\r\n\r\n    return books;\r\n  } catch (err) {\r\n    throw new Error(ErrorGetPaginated);\r\n  }\r\n};\r\n\r\nexport const deleteBook = async ({ bookId }: BookIdProps) => {\r\n  try {\r\n    const book = await prisma.books.update({\r\n      where: {\r\n        id: bookId,\r\n      },\r\n      data: {\r\n        deleted: true,\r\n        bookLibraries: {\r\n          updateMany: {\r\n            where: {\r\n              deleted: false,\r\n            },\r\n            data: { deleted: true },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!book) throw new Error(ErrorDelete);\r\n\r\n    return book;\r\n  } catch (err) {\r\n    throw new Error(ErrorDelete);\r\n  }\r\n};\r\n\r\nconst forEachBookLibrary = async ({\r\n  bookLibraries,\r\n  bookId,\r\n}: EachBookLibrary) => {\r\n  const idList: string[] = [];\r\n  const skuList: string[] = [];\r\n\r\n  bookLibraries.forEach((item) => {\r\n    if (item.id) idList.push(item.id);\r\n\r\n    if (item.sku) skuList.push(item.sku);\r\n  });\r\n\r\n  const skuDuplicates = toFindDuplicates(skuList);\r\n\r\n  const deleteBookLibraries = await prisma.bookLibraries.updateMany({\r\n    where: {\r\n      id: {\r\n        notIn: idList,\r\n      },\r\n      bookId,\r\n      deleted: false,\r\n    },\r\n    data: {\r\n      deleted: true,\r\n    },\r\n  });\r\n\r\n  if (!deleteBookLibraries) throw new Error(ErrorMessage);\r\n\r\n  let error = false;\r\n\r\n  for (const item of bookLibraries) {\r\n    if (item.id) {\r\n      const bookBySKU = await prisma.bookLibraries.findFirst({\r\n        where: {\r\n          SKU: item.sku,\r\n          deleted: false,\r\n          id: { not: item.id },\r\n        },\r\n        select: {\r\n          id: true,\r\n        },\r\n      });\r\n\r\n      if (bookBySKU && !isEmpty(skuDuplicates)) {\r\n        error = true;\r\n        continue;\r\n      }\r\n\r\n      const updatedBookLibrary = await prisma.bookLibraries.updateMany({\r\n        where: {\r\n          id: item.id,\r\n          deleted: false,\r\n        },\r\n        data: {\r\n          bookId,\r\n          libraryId: item.library,\r\n          SKU: item.sku,\r\n          place: item.place,\r\n        },\r\n      });\r\n\r\n      if (!updatedBookLibrary) {\r\n        error = true;\r\n        continue;\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    const bookBySKU = await prisma.bookLibraries.findFirst({\r\n      where: {\r\n        SKU: item.sku,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (bookBySKU) {\r\n      error = true;\r\n      continue;\r\n    }\r\n\r\n    const createdBookLibrary = await prisma.bookLibraries.create({\r\n      data: {\r\n        bookId,\r\n        libraryId: item.library,\r\n        SKU: item.sku,\r\n        place: item.place,\r\n      },\r\n    });\r\n\r\n    if (!createdBookLibrary) {\r\n      error = true;\r\n      continue;\r\n    }\r\n  }\r\n\r\n  if (error) throw new Error(ErrorMessage);\r\n};\r\n\r\nexport const createBook = async ({\r\n  name,\r\n  author,\r\n  description,\r\n  image,\r\n  pagesNumber,\r\n  category,\r\n  publishHouse,\r\n  releaseYear,\r\n  language,\r\n  bookLibraries,\r\n}: BookState) => {\r\n  try {\r\n    const bookByName = await prisma.books.findFirst({\r\n      where: {\r\n        name,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (bookByName) throw new Error(ErrorCreate);\r\n\r\n    const book = await prisma.books.create({\r\n      data: {\r\n        name,\r\n        author,\r\n        description,\r\n        image,\r\n        pagesNumber: parseInt(pagesNumber),\r\n        categoryId: category,\r\n        publishHouseId: publishHouse,\r\n        releaseYear: parseInt(releaseYear),\r\n        languageId: language,\r\n      },\r\n    });\r\n\r\n    if (!book) throw new Error(ErrorCreate);\r\n\r\n    await forEachBookLibrary({ bookLibraries, bookId: book.id });\r\n\r\n    return book;\r\n  } catch (err) {\r\n    throw new Error(ErrorCreate);\r\n  }\r\n};\r\n\r\nexport const getSingleBook = async ({ bookId }: BookIdProps) => {\r\n  try {\r\n    const book = await prisma.$transaction(async (db) => {\r\n      const book = await db.books.findFirst({\r\n        where: {\r\n          id: bookId,\r\n          deleted: false,\r\n        },\r\n        select: {\r\n          name: true,\r\n          author: true,\r\n          description: true,\r\n          image: true,\r\n          category: {\r\n            select: {\r\n              id: true,\r\n            },\r\n          },\r\n          publishHouse: {\r\n            select: {\r\n              id: true,\r\n            },\r\n          },\r\n          releaseYear: true,\r\n          pagesNumber: true,\r\n          language: {\r\n            select: {\r\n              id: true,\r\n            },\r\n          },\r\n          bookLibraries: {\r\n            where: { deleted: false },\r\n            select: {\r\n              id: true,\r\n              libraryId: true,\r\n              SKU: true,\r\n              place: true,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      if (!book) throw new Error(ErrorGetSingle);\r\n\r\n      return book;\r\n    });\r\n\r\n    return fromSingleBookResponse(book);\r\n  } catch (err) {\r\n    throw new Error(ErrorGetSingle);\r\n  }\r\n};\r\n\r\nexport const updateBook = async ({\r\n  bookId,\r\n  name,\r\n  author,\r\n  description,\r\n  image,\r\n  pagesNumber,\r\n  category,\r\n  publishHouse,\r\n  releaseYear,\r\n  language,\r\n  bookLibraries,\r\n}: Omit<BookState, \"image\"> & { bookId: string; image?: string }) => {\r\n  try {\r\n    const bookByName = await prisma.books.findFirst({\r\n      where: {\r\n        name,\r\n        deleted: false,\r\n        id: { not: bookId },\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (bookByName) throw new Error(ErrorUpdate);\r\n\r\n    const book = await prisma.books.updateMany({\r\n      where: {\r\n        id: bookId,\r\n        deleted: false,\r\n      },\r\n      data: {\r\n        name,\r\n        author,\r\n        description,\r\n        image,\r\n        pagesNumber: parseInt(pagesNumber),\r\n        categoryId: category,\r\n        publishHouseId: publishHouse,\r\n        releaseYear: parseInt(releaseYear),\r\n        languageId: language,\r\n      },\r\n    });\r\n\r\n    if (!book) throw new Error(ErrorUpdate);\r\n\r\n    await forEachBookLibrary({ bookLibraries, bookId });\r\n\r\n    return book;\r\n  } catch (err) {\r\n    throw new Error(ErrorUpdate);\r\n  }\r\n};\r\n\r\nexport const getBookBySku = async ({ sku }: BookBySkuProps) => {\r\n  try {\r\n    if (!sku) return null;\r\n\r\n    const book = await prisma.bookLibraries.findFirst({\r\n      where: {\r\n        deleted: false,\r\n        SKU: sku,\r\n        NOT: [\r\n          {\r\n            loanBooks: {\r\n              some: {\r\n                bookLibrary: {\r\n                  SKU: sku,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      select: {\r\n        id: true,\r\n        book: {\r\n          select: {\r\n            name: true,\r\n          },\r\n        },\r\n        library: {\r\n          select: {\r\n            name: true,\r\n            city: { select: { name: true } },\r\n          },\r\n        },\r\n        SKU: true,\r\n        place: true,\r\n        deleted: true,\r\n      },\r\n    });\r\n\r\n    if (!book) return null;\r\n\r\n    return fromBookBySku(book);\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import { ErrorMessage } from \"~/const\";\r\nimport cloudinary from \"cloudinary\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\ncloudinary.v2.config({\r\n  cloud_name: process.env.CLOUDINARY_NAME,\r\n  api_key: process.env.CLOUDINARY_API_KEY,\r\n  api_secret: process.env.CLOUDINARY_API_SECRET,\r\n});\r\n\r\nexport const uploadImage = async (image: string) => {\r\n  try {\r\n    const { public_id } = await cloudinary.v2.uploader.upload(image, {\r\n      public_id: uuid(),\r\n    });\r\n\r\n    return public_id;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const getImage = async (imageName: string) => {\r\n  try {\r\n    const { secure_url } = await cloudinary.v2.api.resource(imageName);\r\n\r\n    return secure_url;\r\n  } catch (err) {}\r\n};\r\n", "import { ErrorMessage } from \"~/const\";\r\nimport prisma from \"prisma\";\r\n\r\nexport const getLanguages = async () => {\r\n  try {\r\n    const languages = await prisma.languages.findMany({\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n      },\r\n    });\r\n\r\n    if (!languages) throw new Error(ErrorMessage);\r\n\r\n    return languages;\r\n  } catch (err) {\r\n    throw new Error(ErrorMessage);\r\n  }\r\n};\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useParams,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport {\r\n  ErrorGetSingle,\r\n  ErrorUpdate,\r\n  SuccessUpdate,\r\n} from \"~/components/Loans/Loans.const\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getReaderByEmail } from \"~/server/readers.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { UpdateLoanTitle } from \"~/components/Loans/Loans.const\";\r\nimport LoansForm from \"~/components/Loans/Forms\";\r\nimport { LoanState, LoansSubmitProps } from \"~/types/Loans.type\";\r\nimport { getSingleLoan, updateLoan } from \"~/server/loans.server\";\r\nimport { getBookBySku } from \"~/server/books.server\";\r\nimport { handleLoanErrors } from \"~/components/Loans/Loans.helper\";\r\nimport { Status } from \"@prisma/client\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const loanId = url.pathname.split(\"/\").pop();\r\n    const email = url.searchParams.get(\"email\") || \"\";\r\n    const sku = url.searchParams.get(\"sku\") || \"\";\r\n\r\n    if (email) {\r\n      const reader = await getReaderByEmail({ email });\r\n      return goodRequest({ reader });\r\n    }\r\n\r\n    if (sku) {\r\n      const book = await getBookBySku({ sku });\r\n      return goodRequest({ book });\r\n    }\r\n\r\n    if (!isString(loanId)) {\r\n      return badRequest({\r\n        message: ErrorGetSingle,\r\n        success: false,\r\n      });\r\n    }\r\n\r\n    const loan = await getSingleLoan({\r\n      loanId,\r\n    });\r\n\r\n    return goodRequest({ loan });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"update\") {\r\n      const status = formData.get(\"status\");\r\n      const reader = formData.get(\"reader\");\r\n      const books = formData.get(\"books\");\r\n\r\n      const url = new URL(request.url);\r\n      const loanId = url.pathname.split(\"/\").pop();\r\n\r\n      if (\r\n        !isString(loanId) ||\r\n        !isString(status) ||\r\n        !isString(reader) ||\r\n        !isString(books)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectReader = JSON.parse(reader);\r\n      const objectBooks = JSON.parse(books);\r\n\r\n      const fields = {\r\n        status: status as Status,\r\n        reader: objectReader,\r\n        books: objectBooks,\r\n      };\r\n\r\n      const fieldErrors = handleLoanErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorUpdate,\r\n          success: false,\r\n        });\r\n      }\r\n      await updateLoan({ ...fields, loanId });\r\n\r\n      return goodRequest({\r\n        message: SuccessUpdate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst UpdateLoan: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const data = useLoaderData();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const urlParams = useParams();\r\n\r\n  const [loan, setLoan] = useState<LoanState>(data.loan);\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(`/loans`);\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: LoansSubmitProps) => {\r\n    const fieldErrors = handleLoanErrors(loan);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringReader = JSON.stringify(loan.reader);\r\n    const stringBooks = JSON.stringify(loan.books);\r\n    const stringPenalty = JSON.stringify(loan.penalty);\r\n\r\n    submit(\r\n      {\r\n        ...loan,\r\n        reader: stringReader,\r\n        books: stringBooks,\r\n        penalty: stringPenalty,\r\n        intent: \"update\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: `/loans/${urlParams.loanId}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={UpdateLoanTitle} backUrl=\"/loans\" />\r\n      <LoansForm onSubmit={handleOnSubmit} setLoan={setLoan} loan={loan} />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default UpdateLoan;\r\n", "import { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { Status as PrismaStatus } from \"@prisma/client\";\r\nimport { LoanState } from \"~/types/Loans.type\";\r\n\r\nexport const Loans = \"Loans\";\r\nexport const NewLoan = \"New loan\";\r\nexport const CreateLoanTitle = \"Create loan\";\r\nexport const UpdateLoanTitle = \"Update loan\";\r\n\r\nexport const ReservedLoanSubject = \"Loan status reserved\";\r\nexport const BorrowedLoanSubject = \"Loan status borrowed\";\r\nexport const CancelledLoanSubject = \"Loan status cancelled\";\r\n\r\nexport const Reader = \"Reader\";\r\nexport const Books = \"Books\";\r\nexport const Penalty = \"Penalty\";\r\nexport const Details = \"Details\";\r\nexport const DaysNumber = \"Days number\";\r\nexport const Amount = \"Amount\";\r\nexport const Paid = \"Paid\";\r\nexport const ReservedAt = \"Reserved at\";\r\nexport const BorrowedAt = \"Borrowed at\";\r\nexport const ReturnedAt = \"Returned at\";\r\n\r\nexport const Add = \"Add\";\r\nexport const Libraries = \"Libraries\";\r\nexport const Status = \"Status\";\r\n\r\nexport const ReaderPlaceholder = \"Reader email\";\r\nexport const ErrorCreate = \"There was a problem in creating the loan\";\r\nexport const SuccessCreate = \"Loan created successfully\";\r\n\r\nexport const ErrorGetPaginated = \"There was a problem in receiving loans\";\r\nexport const ErrorGetSingle = \"There was a problem in receiving loan\";\r\n\r\nexport const ErrorDelete = \"There was a problem in deleting the loan\";\r\nexport const SuccessDelete = \"Loan deleted successfuly\";\r\n\r\nexport const ErrorUpdate = \"There was a problem in updating the loan\";\r\nexport const SuccessUpdate = \"Loan updated successfully\";\r\n\r\nexport const SearchPlaceholder = \"Search for number, email or book sku\";\r\nexport const MandatoryReaderEmail = \"You have to insert reader email\";\r\nexport const DeletedReader = \"This reader no longer exists\";\r\nexport const NoReader = \"We didn't find any reader with this email\";\r\nexport const DuplicatedReader = \"You already have this reader in the loan\";\r\n\r\nexport const BookPlaceholder = \"Book sku\";\r\nexport const MandatoryBookSku = \"You have to insert book sku\";\r\nexport const DuplicatedBook = \"You already have this book in the loan\";\r\nexport const DeletedBook = \"This book no longer exists\";\r\nexport const NoBook = \"We didn't find any available book with this sku\";\r\nexport const SameLibrary = \"Books must belong to the same library\";\r\n\r\nexport const BooksDescription = \"Books must belong to a single library\";\r\nexport const PenaltyDescription =\r\n  \"Penalties are calculated according to the number of delayed days multiplied by 0.1 EUR\";\r\n\r\nexport const readerColumns = [\r\n  { name: \"name\", value: \"Name\" },\r\n  { name: \"email\", value: \"Email\" },\r\n  { name: \"phone\", value: \"Phone\" },\r\n  { name: \"city\", value: \"City\" },\r\n];\r\n\r\nexport const bookColumns = [\r\n  { name: \"name\", value: \"Name\" },\r\n  { name: \"sku\", value: \"Sku\" },\r\n  { name: \"library\", value: \"Library\" },\r\n  { name: \"city\", value: \"City\" },\r\n  { name: \"place\", value: \"Place\" },\r\n];\r\n\r\nexport const initialLoan: LoanState = {\r\n  status: PrismaStatus.BORROWED,\r\n  reader: null,\r\n  books: [],\r\n};\r\n\r\nexport const loansColumns = [\r\n  { name: \"number\", value: \"Number\" },\r\n  { name: \"email\", value: \"Email\" },\r\n  { name: \"status\", value: \"Status\" },\r\n  { name: \"createdAt\", value: \"Created\" },\r\n];\r\n\r\nexport const LoanStatuses: AutocompleteOptions[] = Object.keys(\r\n  PrismaStatus\r\n).map((item) => ({ id: item, name: item }));\r\n", "import Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"@remix-run/react\";\r\nimport { ErrorState, LoansFormProps } from \"~/types/Loans.type\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport { StyledFlexButton } from \"~/components/Libraries/Libraries.style\";\r\nimport {\r\n  Books,\r\n  Reader,\r\n  Penalty,\r\n  Details,\r\n  BooksDescription,\r\n  PenaltyDescription,\r\n} from \"../Loans.const\";\r\nimport { AlignedFlex, ColumnFlex } from \"@/components/Flex\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LoansReader from \"./LoansReader\";\r\nimport LoansBooks from \"./LoansBooks\";\r\nimport LoansPenalty from \"./LoansPenalty\";\r\nimport LoansDetails from \"./LoansDetails\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { LoanFilteredStatuses } from \"../Loans.helper\";\r\nimport { Status } from \"@prisma/client\";\r\n\r\nconst LoansForm: React.FC<LoansFormProps> = ({ onSubmit, setLoan, loan }) => {\r\n  const navigate = useNavigate();\r\n  const urlParams = useParams();\r\n\r\n  const [currentStatus] = useState<Status | undefined>(\r\n    urlParams.loanId ? loan.status : undefined\r\n  );\r\n  const [errors, setErrors] = useState<ErrorState>({});\r\n\r\n  const handleOnSubmit = () => {\r\n    onSubmit({\r\n      callback: (fieldErrors: ErrorState) => setErrors(fieldErrors),\r\n    });\r\n  };\r\n\r\n  const filteredStatuses = LoanFilteredStatuses(\r\n    urlParams.loanId ? currentStatus : undefined\r\n  );\r\n\r\n  const changeStatus = (event: SelectChangeEvent<Status>) => {\r\n    setLoan((oldLoan) => ({\r\n      ...oldLoan,\r\n      status: event.target.value as Status,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"40px\" maxWidth=\"800px\">\r\n        {loan.status && (\r\n          <AlignedFlex gap=\"20px\">\r\n            <Typography variant=\"h3\">Status</Typography>\r\n            <Select\r\n              value={loan.status}\r\n              onChange={changeStatus}\r\n              variant=\"standard\"\r\n            >\r\n              {filteredStatuses.map((item, index) => (\r\n                <MenuItem key={index} value={item.value}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </AlignedFlex>\r\n        )}\r\n\r\n        {loan.createdAt && (\r\n          <>\r\n            <Typography variant=\"h3\">{Details}</Typography>\r\n            <LoansDetails loan={loan} />\r\n          </>\r\n        )}\r\n\r\n        <Typography variant=\"h3\">{Reader}</Typography>\r\n        <LoansReader\r\n          setLoan={setLoan}\r\n          loan={loan}\r\n          error={errors}\r\n          setError={setErrors}\r\n        />\r\n\r\n        <ColumnFlex gap=\"10px\">\r\n          <Typography variant=\"h3\">{Books}</Typography>\r\n          <Typography variant=\"h1\">{BooksDescription}</Typography>\r\n        </ColumnFlex>\r\n        <LoansBooks\r\n          setLoan={setLoan}\r\n          loan={loan}\r\n          error={errors}\r\n          setError={setErrors}\r\n        />\r\n\r\n        {loan.penalty && (\r\n          <>\r\n            <ColumnFlex gap=\"10px\">\r\n              <Typography variant=\"h3\">{Penalty}</Typography>\r\n              <Typography variant=\"h1\">{PenaltyDescription}</Typography>\r\n            </ColumnFlex>\r\n\r\n            <LoansPenalty penalty={loan.penalty} />\r\n          </>\r\n        )}\r\n      </ColumnFlex>\r\n\r\n      <StyledFlexButton>\r\n        <Button\r\n          title=\"Cancel\"\r\n          variant={ButtonVariant.outlined}\r\n          onClick={() => navigate(\"/books\")}\r\n        />\r\n        <Button\r\n          type={ButtonType.submit}\r\n          title={urlParams.loanId ? \"Update\" : \"Create\"}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleOnSubmit}\r\n          disabled={\r\n            currentStatus === Status.RETURNED ||\r\n            currentStatus === Status.CANCELLED\r\n          }\r\n        />\r\n      </StyledFlexButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoansForm;\r\n", "import Input from \"@/components/Input\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ReaderState, LoansReaderProps } from \"~/types/Loans.type\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport { Typography } from \"@mui/material\";\r\nimport {\r\n  StyledTable,\r\n  StyledTableColumn,\r\n  StyledRow,\r\n  StyledSearch,\r\n} from \"../Loans.style\";\r\nimport { useFetcher, useParams } from \"@remix-run/react\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport { isNull } from \"lodash\";\r\nimport {\r\n  readerColumns,\r\n  ReaderPlaceholder,\r\n  MandatoryReaderEmail,\r\n  NoReader,\r\n  DeletedReader,\r\n  Add,\r\n  DuplicatedReader,\r\n} from \"../Loans.const\";\r\n\r\nconst LoansReader: React.FC<LoansReaderProps> = ({\r\n  setLoan,\r\n  loan,\r\n  error,\r\n  setError,\r\n}) => {\r\n  const fetcher = useFetcher();\r\n  const urlParams = useParams();\r\n  const { reader } = loan;\r\n\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [searchError, setSearchError] = useState<string>(\"\");\r\n\r\n  const data = fetcher.data || {};\r\n\r\n  useEffect(() => {\r\n    if (isNull(data.reader)) {\r\n      setSearchError(NoReader);\r\n      return;\r\n    }\r\n\r\n    if (data.reader) {\r\n      setLoan((oldLoan) => ({ ...oldLoan, reader: data.reader }));\r\n      setSearch(\"\");\r\n    }\r\n  }, [data.reader]);\r\n\r\n  const onReaderSearch = () => {\r\n    if (error.reader)\r\n      setError((oldError) => {\r\n        const { reader, ...rest } = oldError;\r\n        return rest;\r\n      });\r\n\r\n    if (!search) {\r\n      setSearchError(MandatoryReaderEmail);\r\n      return;\r\n    }\r\n\r\n    const duplicate = reader?.email === search;\r\n\r\n    if (duplicate) {\r\n      setSearchError(DuplicatedReader);\r\n      return;\r\n    }\r\n\r\n    fetcher.load(`/loans/${urlParams.loanId || \"create\"}?email=${search}`);\r\n  };\r\n\r\n  const onEmailChange = (value: string) => {\r\n    setSearch(value);\r\n    if (searchError) setSearchError(\"\");\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex gap=\"20px\">\r\n      <StyledSearch>\r\n        <Input\r\n          value={search}\r\n          placeholder={ReaderPlaceholder}\r\n          onChange={onEmailChange}\r\n          errorMessage={error.reader || searchError}\r\n          width=\"350px\"\r\n        />\r\n        <Button\r\n          type={ButtonType.button}\r\n          title={Add}\r\n          variant={ButtonVariant.contained}\r\n          onClick={onReaderSearch}\r\n        />\r\n      </StyledSearch>\r\n\r\n      {reader && (\r\n        <StyledTableColumn>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                {readerColumns.map((item, index) => (\r\n                  <th key={index}>{item.value}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <StyledRow>\r\n                {readerColumns.map((item, index) => (\r\n                  <td key={index}>\r\n                    <Typography variant=\"h2\">\r\n                      {reader[item.name as keyof ReaderState]}\r\n                    </Typography>\r\n                  </td>\r\n                ))}\r\n              </StyledRow>\r\n\r\n              {reader?.deleted && (\r\n                <FormHelperText error={true}>{DeletedReader}</FormHelperText>\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTableColumn>\r\n      )}\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default LoansReader;\r\n", "import Flex, { ColumnFlex } from \"@/components/Flex\";\r\nimport collorPalette from \"@/theme/colorPalette\";\r\nimport styled from \"styled-components\";\r\nimport { styled as MuiStyled } from \"@mui/material/styles\";\r\nimport FormHelperText, {\r\n  FormHelperTextProps,\r\n} from \"@mui/material/FormHelperText\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\nimport Typography, { TypographyProps } from \"@mui/material/Typography\";\r\n\r\nexport const StyledAutocomplete = styled(Flex)`\r\n  justify-content: end;\r\n  gap: 20px;\r\n  flex: 1;\r\n`;\r\n\r\nexport const StyledTableColumn = styled(ColumnFlex)`\r\n  border: 1px solid ${collorPalette.grey.base};\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const StyledTable = styled.table`\r\n  text-align: left;\r\n  min-width: 600px;\r\n  td {\r\n    padding: 7px;\r\n    white-space: nowrap;\r\n  }\r\n  th {\r\n    padding: 0px 7px 7px 7px;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nexport const StyledRow = styled.tr`\r\n  background-color: ${collorPalette.grey.lighter};\r\n  h2 {\r\n    min-height: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledSearch = styled(Flex)`\r\n  gap: 20px;\r\n  align-items: center;\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledFormHelperText = MuiStyled(\r\n  FormHelperText\r\n)<FormHelperTextProps>(({ theme }) =>\r\n  theme.unstable_sx({\r\n    marginBottom: \"5px\",\r\n  })\r\n);\r\n\r\nexport const StyledIconButton = MuiStyled(IconButton)<IconButtonProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      padding: \"0\",\r\n    })\r\n);\r\n\r\nexport const EndFlex = styled(Flex)`\r\n  gap: 15px;\r\n  align-items: baseline;\r\n  background-color: ${collorPalette.grey.lighter};\r\n  padding: 10px 20px;\r\n`;\r\n\r\nexport const StyleFlex = styled(Flex)`\r\n  gap: 20px;\r\n  @media (max-width: 950px) {\r\n    gap: 10px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const DateColumnFlex = styled(ColumnFlex)`\r\n  gap: 10px;\r\n  background-color: ${collorPalette.grey.lighter};\r\n  padding: 10px 20px;\r\n`;\r\n\r\nexport const StyledTypography = MuiStyled(Typography)<TypographyProps>(\r\n  ({ theme }) =>\r\n    theme.unstable_sx({\r\n      \"&.MuiTypography-root\": {\r\n        fontSize: \"16px\",\r\n      },\r\n    })\r\n);\r\n", "import Input from \"@/components/Input\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BookLibraryState, LoansBooksProps } from \"~/types/Loans.type\";\r\nimport { ColumnFlex, SpaceBetweenCenterFlex } from \"@/components/Flex\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonType, ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport { Typography } from \"@mui/material\";\r\nimport {\r\n  StyledTable,\r\n  StyledTableColumn,\r\n  StyledRow,\r\n  StyledSearch,\r\n  StyledFormHelperText,\r\n  StyledIconButton,\r\n} from \"../Loans.style\";\r\nimport { useFetcher, useParams } from \"@remix-run/react\";\r\nimport { isEmpty, isNull } from \"lodash\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport {\r\n  bookColumns,\r\n  BookPlaceholder,\r\n  MandatoryBookSku,\r\n  NoBook,\r\n  DeletedBook,\r\n  Add,\r\n  DuplicatedBook,\r\n  SameLibrary,\r\n} from \"../Loans.const\";\r\n\r\nconst LoansBooks: React.FC<LoansBooksProps> = ({\r\n  setLoan,\r\n  loan,\r\n  error,\r\n  setError,\r\n}) => {\r\n  const fetcher = useFetcher();\r\n  const urlParams = useParams();\r\n  const { books } = loan;\r\n\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [searchError, setSearchError] = useState<string>(\"\");\r\n\r\n  const data = fetcher.data || {};\r\n\r\n  useEffect(() => {\r\n    if (isNull(data.book)) {\r\n      setSearchError(NoBook);\r\n      return;\r\n    }\r\n\r\n    if (data.book) {\r\n      const sameLoanLibrary = loan.books.find(\r\n        (item) => item.library === data.book.library\r\n      );\r\n\r\n      if (!isEmpty(loan.books) && !sameLoanLibrary) {\r\n        setSearchError(SameLibrary);\r\n        return;\r\n      }\r\n\r\n      setLoan((oldLoad) => ({\r\n        ...oldLoad,\r\n        books: [...oldLoad.books, data.book],\r\n      }));\r\n      setSearch(\"\");\r\n    }\r\n  }, [data.book]);\r\n\r\n  const onBookSearch = () => {\r\n    if (error.books)\r\n      setError((oldError) => {\r\n        const { books, ...rest } = oldError;\r\n        return rest;\r\n      });\r\n\r\n    if (!search) {\r\n      setSearchError(MandatoryBookSku);\r\n      return;\r\n    }\r\n\r\n    const duplicate = books.find((item) => item.sku === search);\r\n\r\n    if (duplicate) {\r\n      setSearchError(DuplicatedBook);\r\n      return;\r\n    }\r\n\r\n    fetcher.load(`/loans/${urlParams.loanId || \"create\"}?sku=${search}`);\r\n  };\r\n\r\n  const onSkuChange = (value: string) => {\r\n    setSearch(value);\r\n    if (searchError) setSearchError(\"\");\r\n  };\r\n\r\n  const onBookRemove = (bookId: string) => {\r\n    setLoan((oldLoan) => {\r\n      const newBooksLoan = oldLoan.books.filter((item) => item.id !== bookId);\r\n\r\n      return {\r\n        ...oldLoan,\r\n        books: newBooksLoan,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex gap=\"20px\">\r\n      <StyledSearch>\r\n        <Input\r\n          value={search}\r\n          placeholder={BookPlaceholder}\r\n          onChange={onSkuChange}\r\n          errorMessage={error.books || searchError}\r\n          width=\"350px\"\r\n        />\r\n\r\n        <Button\r\n          type={ButtonType.button}\r\n          title={Add}\r\n          variant={ButtonVariant.contained}\r\n          onClick={onBookSearch}\r\n        />\r\n      </StyledSearch>\r\n\r\n      {!isEmpty(books) && (\r\n        <StyledTableColumn>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                {bookColumns.map((item, index) => (\r\n                  <th key={index}>{item.value}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {books.map((book, index) => (\r\n                <>\r\n                  <StyledRow key={index}>\r\n                    {bookColumns.map((column, index) => (\r\n                      <td key={index}>\r\n                        <SpaceBetweenCenterFlex>\r\n                          <Typography variant=\"h2\">\r\n                            {book[column.name as keyof BookLibraryState]}\r\n                          </Typography>\r\n\r\n                          {bookColumns.length === index + 1 && (\r\n                            <StyledIconButton\r\n                              onClick={() => onBookRemove(book.id)}\r\n                            >\r\n                              <DeleteOutlineIcon />\r\n                            </StyledIconButton>\r\n                          )}\r\n                        </SpaceBetweenCenterFlex>\r\n                      </td>\r\n                    ))}\r\n                  </StyledRow>\r\n\r\n                  {book?.deleted && (\r\n                    <StyledFormHelperText error={true}>\r\n                      {DeletedBook}\r\n                    </StyledFormHelperText>\r\n                  )}\r\n                </>\r\n              ))}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTableColumn>\r\n      )}\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default LoansBooks;\r\n", "import { LoansPenaltyProps } from \"~/types/Loans.type\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { StyleFlex, StyledTypography } from \"../Loans.style\";\r\nimport { EndFlex } from \"../Loans.style\";\r\nimport { Amount, DaysNumber, Paid } from \"../Loans.const\";\r\n\r\nconst LoansPenalty: React.FC<LoansPenaltyProps> = ({ penalty }) => (\r\n  <StyleFlex>\r\n    <EndFlex>\r\n      <StyledTypography variant=\"h3\">{DaysNumber}</StyledTypography>\r\n      <Typography variant=\"h2\">{penalty.days}</Typography>\r\n    </EndFlex>\r\n\r\n    <EndFlex>\r\n      <StyledTypography variant=\"h3\">{Amount}</StyledTypography>\r\n      <Typography variant=\"h2\">{penalty.amount} EUR</Typography>\r\n    </EndFlex>\r\n\r\n    <EndFlex>\r\n      <StyledTypography variant=\"h3\">{Paid}</StyledTypography>\r\n      <Typography variant=\"h2\">{penalty.paid ? \"YES\" : \"NO\"}</Typography>\r\n    </EndFlex>\r\n  </StyleFlex>\r\n);\r\n\r\nexport default LoansPenalty;\r\n", "import { LoansDetailsProps } from \"~/types/Loans.type\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { DateColumnFlex, StyleFlex, StyledTypography } from \"../Loans.style\";\r\nimport { BorrowedAt, ReservedAt, ReturnedAt } from \"../Loans.const\";\r\n\r\nconst LoansDetails: React.FC<LoansDetailsProps> = ({ loan }) => {\r\n  return (\r\n    <StyleFlex>\r\n      {loan.createdAt && (\r\n        <DateColumnFlex>\r\n          <StyledTypography variant=\"h3\">{ReservedAt}</StyledTypography>\r\n          <Typography variant=\"h2\">{loan.createdAt}</Typography>\r\n        </DateColumnFlex>\r\n      )}\r\n\r\n      {loan.borrowedAt && (\r\n        <DateColumnFlex>\r\n          <StyledTypography variant=\"h3\">{BorrowedAt}</StyledTypography>\r\n          <Typography variant=\"h2\">{loan.borrowedAt}</Typography>\r\n        </DateColumnFlex>\r\n      )}\r\n\r\n      {loan.returnedAt && (\r\n        <DateColumnFlex>\r\n          <StyledTypography variant=\"h3\">{ReturnedAt}</StyledTypography>\r\n          <Typography variant=\"h2\">{loan.returnedAt}</Typography>\r\n        </DateColumnFlex>\r\n      )}\r\n    </StyleFlex>\r\n  );\r\n};\r\n\r\nexport default LoansDetails;\r\n", "import { Status } from \"@prisma/client\";\r\nimport { ErrorState, FilteredStatuses, LoanState } from \"~/types/Loans.type\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { RequiredField } from \"~/const\";\r\n\r\nexport const handleLoanErrors = (formData: LoanState) => {\r\n  let errors: ErrorState = {};\r\n  const { reader, books, status } = formData;\r\n\r\n  if (isEmpty(reader)) errors.reader = RequiredField;\r\n\r\n  if (isEmpty(books)) errors.books = RequiredField;\r\n\r\n  if (isEmpty(status)) errors.status = RequiredField;\r\n\r\n  return errors;\r\n};\r\n\r\nexport const LoanFilteredStatuses = (\r\n  currentStatus?: Status\r\n): FilteredStatuses[] => {\r\n  const statuses = Object.keys(Status).map((item) => ({\r\n    value: item,\r\n    name: item,\r\n  })) as FilteredStatuses[];\r\n\r\n  switch (currentStatus) {\r\n    case Status.RESERVED:\r\n      return statuses.filter((item) => {\r\n        const newStatuses = new Set([\r\n          Status.RESERVED,\r\n          Status.BORROWED,\r\n          Status.CANCELLED,\r\n        ]) as Set<Status>;\r\n\r\n        return newStatuses.has(item.value);\r\n      });\r\n    case Status.BORROWED:\r\n      return statuses.filter((item) => {\r\n        const newStatuses = new Set([\r\n          Status.BORROWED,\r\n          Status.RETURNED,\r\n        ]) as Set<Status>;\r\n\r\n        return newStatuses.has(item.value);\r\n      });\r\n    case Status.RETURNED:\r\n      return statuses.filter((item) => {\r\n        const newStatuses = new Set([Status.RETURNED]) as Set<Status>;\r\n\r\n        return newStatuses.has(item.value);\r\n      });\r\n    case Status.CANCELLED:\r\n      return statuses.filter((item) => {\r\n        const newStatuses = new Set([Status.CANCELLED]) as Set<Status>;\r\n\r\n        return newStatuses.has(item.value);\r\n      });\r\n    default:\r\n      return statuses.filter((item) => {\r\n        const newStatuses = new Set([\r\n          Status.RESERVED,\r\n          Status.BORROWED,\r\n        ]) as Set<Status>;\r\n\r\n        return newStatuses.has(item.value);\r\n      });\r\n  }\r\n};\r\n", "import {\r\n  LoansResponse,\r\n  LoanResponse,\r\n  LoanState,\r\n  PaginatedLoans,\r\n} from \"~/types/Loans.type\";\r\nimport { formatLoangDate } from \"@/utils/common\";\r\n\r\nexport const fromPaginatedLoansResponse = (\r\n  loans: LoansResponse[]\r\n): PaginatedLoans[] =>\r\n  loans.map((item) => ({\r\n    ...item,\r\n    email: item.reader.email,\r\n    createdAt: formatLoangDate(item.createdAt),\r\n  }));\r\n\r\nexport const fromSingleLoanResponse = (loan: LoanResponse): LoanState => {\r\n  const reader = {\r\n    ...loan.reader,\r\n    city: loan.reader.city.name,\r\n  };\r\n\r\n  const books = loan.books.map((loandBook) => {\r\n    const { id, book, library, SKU, place, deleted } = loandBook.bookLibrary;\r\n\r\n    return {\r\n      id,\r\n      name: book.name,\r\n      library: library.name,\r\n      city: library.city.name,\r\n      sku: SKU,\r\n      place,\r\n      deleted,\r\n    };\r\n  });\r\n\r\n  const transformedLoan: LoanState = {\r\n    number: loan.number,\r\n    status: loan.status,\r\n    reader,\r\n    books,\r\n    createdAt: formatLoangDate(loan.createdAt),\r\n  };\r\n\r\n  if (loan.penalty) transformedLoan.penalty = loan.penalty;\r\n\r\n  if (loan.borrowedAt)\r\n    transformedLoan.borrowedAt = formatLoangDate(loan.borrowedAt);\r\n\r\n  if (loan.returnedAt)\r\n    transformedLoan.returnedAt = formatLoangDate(loan.returnedAt);\r\n\r\n  return transformedLoan;\r\n};\r\n", "import {\r\n  BorrowedLoanSubject,\r\n  ErrorCreate,\r\n  ErrorDelete,\r\n  ErrorGetPaginated,\r\n  ErrorGetSingle,\r\n  ErrorUpdate,\r\n  ReservedLoanSubject,\r\n  CancelledLoanSubject,\r\n} from \"~/components/Loans/Loans.const\";\r\nimport {\r\n  PaginatedLoansProps,\r\n  LoanState,\r\n  LoanIdProps,\r\n  EachLoanBook,\r\n  ReaderState,\r\n} from \"~/types/Loans.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport {\r\n  fromPaginatedLoansResponse,\r\n  fromSingleLoanResponse,\r\n} from \"~/transformers/loans.transformer\";\r\nimport prisma from \"prisma\";\r\nimport { Status } from \"@prisma/client\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { LoanFilteredStatuses } from \"~/components/Loans/Loans.helper\";\r\nimport { sendEmail } from \"./mail.server\";\r\nimport { ReservedLoanEmail } from \"@/templates/ReservedLoan.email\";\r\nimport { BorrowedLoanEmail } from \"@/templates/BorrowedLoan.email\";\r\nimport { CancelledLoanEmail } from \"@/templates/CancelledLoan.email\";\r\nimport { addDateDays, formatShortDate } from \"@/utils/common\";\r\n\r\nexport const getPaginatedLoans = async ({\r\n  page,\r\n  search,\r\n  library,\r\n  status,\r\n}: PaginatedLoansProps) => {\r\n  try {\r\n    const skip = (page && page > 1 && (page - 1) * 5) || undefined;\r\n\r\n    const loans = await prisma.$transaction(async (db) => {\r\n      const count = await db.loans.count({\r\n        where: {\r\n          OR: [\r\n            {\r\n              number: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            {\r\n              reader: {\r\n                email: {\r\n                  contains: search,\r\n                  mode: \"insensitive\",\r\n                },\r\n              },\r\n            },\r\n            {\r\n              books: {\r\n                some: {\r\n                  bookLibrary: {\r\n                    SKU: {\r\n                      contains: search,\r\n                      mode: \"insensitive\",\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          books:\r\n            (library && {\r\n              some: {\r\n                bookLibrary: {\r\n                  library: {\r\n                    name: library,\r\n                  },\r\n                },\r\n              },\r\n            }) ||\r\n            undefined,\r\n          status: (status && Status[status as Status]) || undefined,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      const data = await db.loans.findMany({\r\n        skip,\r\n        take: 5,\r\n        where: {\r\n          OR: [\r\n            {\r\n              number: {\r\n                contains: search,\r\n                mode: \"insensitive\",\r\n              },\r\n            },\r\n            {\r\n              reader: {\r\n                email: {\r\n                  contains: search,\r\n                  mode: \"insensitive\",\r\n                },\r\n              },\r\n            },\r\n            {\r\n              books: {\r\n                some: {\r\n                  bookLibrary: {\r\n                    SKU: {\r\n                      contains: search,\r\n                      mode: \"insensitive\",\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          books:\r\n            (library && {\r\n              some: {\r\n                bookLibrary: {\r\n                  library: {\r\n                    name: library,\r\n                  },\r\n                },\r\n              },\r\n            }) ||\r\n            undefined,\r\n          status: (status && Status[status as Status]) || undefined,\r\n        },\r\n        select: {\r\n          id: true,\r\n          number: true,\r\n          reader: {\r\n            select: {\r\n              email: true,\r\n            },\r\n          },\r\n          status: true,\r\n          createdAt: true,\r\n        },\r\n        orderBy: {\r\n          createdAt: \"desc\",\r\n        },\r\n      });\r\n\r\n      if (!data) throw new Error(ErrorGetPaginated);\r\n\r\n      return { count, data: fromPaginatedLoansResponse(data) };\r\n    });\r\n\r\n    return loans;\r\n  } catch (err) {\r\n    throw new Error(ErrorGetPaginated);\r\n  }\r\n};\r\n\r\nexport const getSingleLoan = async ({ loanId }: LoanIdProps) => {\r\n  try {\r\n    const loan = await prisma.loans.findFirst({\r\n      where: {\r\n        id: loanId,\r\n      },\r\n      select: {\r\n        number: true,\r\n        reader: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            phone: true,\r\n            email: true,\r\n            city: { select: { name: true } },\r\n            deleted: true,\r\n          },\r\n        },\r\n        books: {\r\n          select: {\r\n            bookLibrary: {\r\n              select: {\r\n                id: true,\r\n                book: {\r\n                  select: {\r\n                    name: true,\r\n                  },\r\n                },\r\n                library: {\r\n                  select: {\r\n                    name: true,\r\n                    city: { select: { name: true } },\r\n                  },\r\n                },\r\n                SKU: true,\r\n                place: true,\r\n                deleted: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        status: true,\r\n        penalty: true,\r\n        borrowedAt: true,\r\n        returnedAt: true,\r\n        createdAt: true,\r\n      },\r\n    });\r\n\r\n    if (!loan) throw new Error(ErrorGetSingle);\r\n\r\n    return fromSingleLoanResponse(loan);\r\n  } catch (err) {\r\n    throw new Error(ErrorGetSingle);\r\n  }\r\n};\r\n\r\nconst forEachLoanBook = async ({ loanBooks, loanId }: EachLoanBook) => {\r\n  await prisma.loanBooks.deleteMany({\r\n    where: {\r\n      loanId,\r\n      bookLibraryId: { notIn: loanBooks.map((item) => item.id) },\r\n    },\r\n  });\r\n\r\n  const loanedBooks = await prisma.loans.findFirst({\r\n    where: {\r\n      id: loanId,\r\n    },\r\n    select: {\r\n      books: {\r\n        select: {\r\n          bookLibraryId: true,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const alreadyLoaned = new Set(\r\n    loanedBooks?.books.map((item) => item.bookLibraryId)\r\n  );\r\n\r\n  const newBooks = loanBooks\r\n    .filter((item) => !alreadyLoaned.has(item.id))\r\n    .map((item) => ({\r\n      bookLibraryId: item.id,\r\n      loanId,\r\n    }));\r\n\r\n  let libraryId =\r\n    loanedBooks?.books && !isEmpty(loanedBooks.books)\r\n      ? loanedBooks.books[0].bookLibraryId\r\n      : \"\";\r\n\r\n  let error = false;\r\n\r\n  for (const item of newBooks) {\r\n    const alreadyLoaned = await prisma.loanBooks.findFirst({\r\n      where: {\r\n        bookLibraryId: item.bookLibraryId,\r\n        loan: { status: { in: [Status.BORROWED, Status.RESERVED] } },\r\n      },\r\n      select: {\r\n        id: true,\r\n      },\r\n    });\r\n\r\n    if (alreadyLoaned) {\r\n      error = true;\r\n      continue;\r\n    }\r\n\r\n    const libraryBook = await prisma.bookLibraries.findFirst({\r\n      where: {\r\n        id: item.bookLibraryId,\r\n        deleted: false,\r\n      },\r\n      select: {\r\n        libraryId: true,\r\n      },\r\n    });\r\n\r\n    if (!libraryBook) {\r\n      error = true;\r\n      continue;\r\n    }\r\n\r\n    if (!libraryId) {\r\n      libraryId = libraryBook.libraryId;\r\n    } else if (libraryId !== libraryBook.libraryId) {\r\n      error = true;\r\n      continue;\r\n    }\r\n\r\n    const createdLoanBooks = await prisma.loanBooks.create({\r\n      data: item,\r\n    });\r\n\r\n    if (!createdLoanBooks) {\r\n      error = true;\r\n      continue;\r\n    }\r\n  }\r\n\r\n  if (error) throw new Error(ErrorMessage);\r\n};\r\n\r\nexport const createLoan = async ({ reader, books, status }: LoanState) => {\r\n  try {\r\n    const statusesOrder = LoanFilteredStatuses();\r\n\r\n    if (!statusesOrder.some((item) => item.value === status))\r\n      throw new Error(ErrorCreate);\r\n\r\n    const lastLoan = await prisma.loans.findFirst({\r\n      take: 1,\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n      select: {\r\n        number: true,\r\n      },\r\n    });\r\n\r\n    const number =\r\n      (lastLoan && (parseInt(lastLoan.number) + 1).toString()) || \"1\";\r\n\r\n    const loan = await prisma.loans.create({\r\n      data: {\r\n        number,\r\n        status,\r\n        readerId: (reader as ReaderState).id,\r\n        borrowedAt: status === Status.BORROWED ? new Date() : undefined,\r\n      },\r\n    });\r\n\r\n    if (!loan) throw new Error(ErrorCreate);\r\n\r\n    await forEachLoanBook({ loanBooks: books, loanId: loan.id });\r\n\r\n    if (status === Status.RESERVED) {\r\n      const byDate = addDateDays(2);\r\n      const data = {\r\n        reader: (reader as ReaderState).name,\r\n        byDate: formatShortDate(byDate),\r\n        number: loan.number,\r\n      };\r\n\r\n      await sendEmail({\r\n        to: (reader as ReaderState).email,\r\n        subject: ReservedLoanSubject,\r\n        template: ReservedLoanEmail(data),\r\n      });\r\n    }\r\n\r\n    if (status === Status.BORROWED) {\r\n      const byDate = addDateDays(30);\r\n      const data = {\r\n        reader: (reader as ReaderState).name,\r\n        byDate: formatShortDate(byDate),\r\n        number: loan.number,\r\n      };\r\n\r\n      await sendEmail({\r\n        to: (reader as ReaderState).email,\r\n        subject: BorrowedLoanSubject,\r\n        template: BorrowedLoanEmail(data),\r\n      });\r\n    }\r\n\r\n    return loan;\r\n  } catch (err) {\r\n    throw new Error(ErrorCreate);\r\n  }\r\n};\r\n\r\nexport const updateLoan = async ({\r\n  loanId,\r\n  reader,\r\n  books,\r\n  status,\r\n}: LoanState & { loanId: string }) => {\r\n  try {\r\n    const currentLoan = await prisma.loans.findFirst({\r\n      where: {\r\n        id: loanId,\r\n      },\r\n      select: {\r\n        status: true,\r\n        penalty: true,\r\n      },\r\n    });\r\n\r\n    if (!currentLoan) throw new Error(ErrorUpdate);\r\n\r\n    const statuses = new Set([\r\n      Status.RETURNED,\r\n      Status.CANCELLED,\r\n    ]) as Set<Status>;\r\n\r\n    if (statuses.has(currentLoan.status)) throw new Error(ErrorUpdate);\r\n\r\n    const statusesOrder = LoanFilteredStatuses(currentLoan.status);\r\n\r\n    if (!statusesOrder.some((item) => item.value === status))\r\n      throw new Error(ErrorUpdate);\r\n\r\n    const penalty =\r\n      currentLoan.penalty && status === Status.RETURNED\r\n        ? { ...currentLoan.penalty, paid: true }\r\n        : undefined;\r\n\r\n    const loan = await prisma.loans.update({\r\n      where: {\r\n        id: loanId,\r\n      },\r\n      data: {\r\n        status,\r\n        readerId: (reader as ReaderState).id,\r\n        borrowedAt:\r\n          status === Status.BORROWED && status !== currentLoan.status\r\n            ? new Date()\r\n            : undefined,\r\n        returnedAt:\r\n          status === Status.RETURNED && status !== currentLoan.status\r\n            ? new Date()\r\n            : undefined,\r\n        penalty,\r\n      },\r\n    });\r\n\r\n    if (!loan) throw new Error(ErrorUpdate);\r\n\r\n    await forEachLoanBook({ loanBooks: books, loanId });\r\n\r\n    if (status === Status.BORROWED && status !== currentLoan.status) {\r\n      const byDate = addDateDays(30);\r\n\r\n      const data = {\r\n        reader: (reader as ReaderState).name,\r\n        byDate: formatShortDate(byDate),\r\n        number: loan.number,\r\n      };\r\n\r\n      await sendEmail({\r\n        to: (reader as ReaderState).email,\r\n        subject: BorrowedLoanSubject,\r\n        template: BorrowedLoanEmail(data),\r\n      });\r\n    }\r\n\r\n    if (status === Status.CANCELLED && status !== currentLoan.status) {\r\n      const data = {\r\n        reader: (reader as ReaderState).name,\r\n        number: loan.number,\r\n      };\r\n\r\n      await sendEmail({\r\n        to: (reader as ReaderState).email,\r\n        subject: CancelledLoanSubject,\r\n        template: CancelledLoanEmail(data),\r\n      });\r\n    }\r\n\r\n    return loan;\r\n  } catch (err) {\r\n    throw new Error(ErrorUpdate);\r\n  }\r\n};\r\n\r\nexport const deleteLoan = async ({ loanId }: LoanIdProps) => {\r\n  try {\r\n    const loanBooks = await prisma.loanBooks.deleteMany({\r\n      where: {\r\n        loanId,\r\n      },\r\n    });\r\n\r\n    if (!loanBooks) throw new Error(ErrorDelete);\r\n\r\n    const loan = await prisma.loans.deleteMany({\r\n      where: {\r\n        id: loanId,\r\n      },\r\n    });\r\n\r\n    if (!loan) throw new Error(ErrorDelete);\r\n\r\n    return loan;\r\n  } catch (err) {\r\n    throw new Error(ErrorDelete);\r\n  }\r\n};\r\n", "import { ReservedLoanProps } from \"./templates.type\";\r\n\r\nexport const ReservedLoanEmail = ({\r\n  reader,\r\n  number,\r\n  byDate,\r\n}: ReservedLoanProps) => `<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Loan status reserved</title>\r\n</head>  \r\n<body>\r\n  <div style=\"text-align: center; margin: 30px 0; font-size: 15px\">\r\n    <h2 style=\"margin-bottom: 35px; font-size: 22px\">Hi ${reader},</h2>\r\n    <p>We inform you that your loan number <strong>${number}</strong> was successfully placed with status reserved. </p>\r\n    <p>Please pick up the books within 2 days, by ${byDate}, otherwise we will have to cancel the loan.</p>\r\n  </div>\r\n</body>\r\n</html>`;\r\n", "import { BorrowedLoanProps } from \"./templates.type\";\r\n\r\nexport const BorrowedLoanEmail = ({\r\n  reader,\r\n  number,\r\n  byDate,\r\n}: BorrowedLoanProps) => `<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Loan status borrowed</title>\r\n</head>  \r\n<body>\r\n  <div style=\"text-align: center; margin: 30px 0; font-size: 15px\">\r\n    <h2 style=\"margin-bottom: 35px; font-size: 22px\">Hi ${reader},</h2>\r\n    <p>We inform you that your loan number <strong>${number}</strong> was successfully placed with status borrowed. </p>\r\n    <p>Please return the books within 30 days, by ${byDate}, otherwise we will have to add penalties.</p>\r\n  </div>\r\n</body>\r\n</html>`;\r\n", "import { CancelledLoanProps } from \"./templates.type\";\r\n\r\nexport const CancelledLoanEmail = ({\r\n  reader,\r\n  number,\r\n}: CancelledLoanProps) => `<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Loan status cancelled</title>\r\n</head>  \r\n<body>\r\n  <div style=\"text-align: center; margin: 30px 0; font-size: 15px\">\r\n    <h2 style=\"margin-bottom: 35px; font-size: 22px\">Hi ${reader},</h2>\r\n    <p>We inform you that your loan number <strong>${number}</strong> was cancelled.</p>\r\n  </div>\r\n</body>\r\n</html>`;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport ReadersOverview from \"~/components/Readers/Overview\";\r\nimport {\r\n  ErrorDelete,\r\n  Readers,\r\n  NewReader,\r\n  SuccessDelete,\r\n} from \"~/components/Readers/Readers.const\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport {\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { getPaginatedReaders, deleteReader } from \"~/server/readers.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { debounce, isString } from \"lodash\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { checkIfNumber } from \"@/utils/common\";\r\nimport { useSearchParams, URLSearchParamsInit } from \"react-router-dom\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { getCities } from \"~/server/cities.server\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { FilterState } from \"~/types/Readers.type\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const page = url.searchParams.get(\"page\");\r\n    const search = url.searchParams.get(\"search\") || \"\";\r\n    const city = url.searchParams.get(\"city\") || \"\";\r\n\r\n    let pageNumber = 1;\r\n    if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n    const [readers, cities] = await Promise.all([\r\n      getPaginatedReaders({\r\n        page: pageNumber,\r\n        search,\r\n        city,\r\n      }),\r\n      getCities(),\r\n    ]);\r\n\r\n    return goodRequest({ readers, cities });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"delete\") {\r\n      const readerId = formData.get(\"readerId\");\r\n\r\n      if (!isString(readerId)) {\r\n        return badRequest({\r\n          message: ErrorDelete,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await deleteReader({ readerId });\r\n\r\n      return goodRequest({\r\n        message: SuccessDelete,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst PaginatedReaders: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const data = useLoaderData();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n  const search = searchParams.get(\"search\") || \"\";\r\n  const city = searchParams.get(\"city\") || \"\";\r\n\r\n  let pageNumber = 1;\r\n  if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n  const readers = data.readers;\r\n  const cities = data.cities;\r\n\r\n  const filterCities = cities.find(\r\n    (item: AutocompleteOptions) => item.name === city\r\n  );\r\n\r\n  const [filter, setFilter] = useState<FilterState>({\r\n    search,\r\n    city: filterCities?.id || \"\",\r\n  });\r\n\r\n  const handleCreateReader = () => {\r\n    navigate(`${location.pathname}/create`);\r\n  };\r\n\r\n  const handleChangePage = (pageNumber: number) => {\r\n    setSearchParams((oldSearchParams: URLSearchParams) => ({\r\n      ...oldSearchParams,\r\n      page: pageNumber.toString(),\r\n    }));\r\n  };\r\n\r\n  const debounceSearchChange = useCallback(\r\n    debounce((value: string) => {\r\n      let params: URLSearchParamsInit = {};\r\n\r\n      if (value) params = { ...params, search: value };\r\n      if (city) params = { ...params, city };\r\n\r\n      setSearchParams(params);\r\n    }, 500),\r\n    [city]\r\n  );\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setFilter((oldValue: FilterState) => ({ ...oldValue, search: value }));\r\n    debounceSearchChange(value);\r\n  };\r\n\r\n  const handleCityChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      city: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (value) params = { ...params, city: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    submit(\r\n      {\r\n        readerId: id,\r\n        intent: \"delete\",\r\n      },\r\n      {\r\n        method: \"delete\",\r\n        action: `/readers${location.search}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={Readers}>\r\n        <Button\r\n          title={NewReader}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleCreateReader}\r\n        />\r\n      </LayoutTitle>\r\n\r\n      <ReadersOverview\r\n        readers={readers}\r\n        page={pageNumber}\r\n        onPageChange={handleChangePage}\r\n        filter={filter}\r\n        onSearchChange={handleSearchChange}\r\n        onCityChange={handleCityChange}\r\n        onDelete={handleDelete}\r\n        cities={cities}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default PaginatedReaders;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport Input from \"@/components/Input\";\r\nimport Table from \"@/components/Table\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { SearchPlaceholder, readersColumns, Cities } from \"../Readers.const\";\r\nimport { ReadersOverviewProps } from \"~/types/Readers.type\";\r\nimport { StyledFilters } from \"~/components/Books/Books.style\";\r\n\r\nconst ReadersOverview: React.FC<ReadersOverviewProps> = ({\r\n  readers,\r\n  page,\r\n  filter,\r\n  onPageChange,\r\n  onSearchChange,\r\n  onCityChange,\r\n  onDelete,\r\n  cities,\r\n}) => {\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"30px\">\r\n        <StyledFilters>\r\n          <Input\r\n            placeholder={SearchPlaceholder}\r\n            onChange={onSearchChange}\r\n            width=\"300px\"\r\n            value={filter.search}\r\n          />\r\n          <Autocomplete\r\n            onChange={onCityChange}\r\n            options={cities}\r\n            value={filter.city}\r\n            placeholder={Cities}\r\n            width=\"200px\"\r\n          />\r\n        </StyledFilters>\r\n\r\n        <Table\r\n          columns={readersColumns}\r\n          rows={readers.data}\r\n          count={readers.count}\r\n          page={page}\r\n          onPageChange={onPageChange}\r\n          onDelete={onDelete}\r\n        />\r\n      </ColumnFlex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ReadersOverview;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport BooksForm from \"~/components/Books/Form\";\r\nimport {\r\n  CreateBookTitle,\r\n  ErrorCreate,\r\n  initialBook,\r\n  SuccessCreate,\r\n} from \"~/components/Books/Books.const\";\r\nimport { handleBookErrors } from \"~/components/Books/Books.helper\";\r\nimport { BooksSubmitProps, BookState } from \"~/types/Books.type\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { getCategories } from \"~/server/categories.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { getPublishHouses } from \"~/server/publishHouses.server\";\r\nimport { createBook } from \"~/server/books.server\";\r\nimport { getLibraries } from \"~/server/libraries.server\";\r\nimport { uploadImage } from \"~/server/media.server\";\r\nimport { getLanguages } from \"~/server/languages.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const [categories, publishHouses, libraries, languages] = await Promise.all(\r\n      [getCategories(), getPublishHouses(), getLibraries(), getLanguages()]\r\n    );\r\n\r\n    return goodRequest({ categories, publishHouses, libraries, languages });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"create\") {\r\n      const name = formData.get(\"name\");\r\n      const author = formData.get(\"author\");\r\n      const description = formData.get(\"description\");\r\n      const category = formData.get(\"category\");\r\n      const image = formData.get(\"image\");\r\n      const publishHouse = formData.get(\"publishHouse\");\r\n      const releaseYear = formData.get(\"releaseYear\");\r\n      const pagesNumber = formData.get(\"pagesNumber\");\r\n      const language = formData.get(\"language\");\r\n      const bookLibraries = formData.get(\"bookLibraries\");\r\n\r\n      if (\r\n        !isString(name) ||\r\n        !isString(author) ||\r\n        !isString(description) ||\r\n        !isString(category) ||\r\n        !isString(image) ||\r\n        !isString(publishHouse) ||\r\n        !isString(releaseYear) ||\r\n        !isString(pagesNumber) ||\r\n        !isString(language) ||\r\n        !isString(bookLibraries)\r\n      ) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectBookLibraries = JSON.parse(bookLibraries);\r\n\r\n      const fields = {\r\n        name,\r\n        author,\r\n        description,\r\n        category,\r\n        image,\r\n        publishHouse,\r\n        releaseYear,\r\n        pagesNumber,\r\n        language,\r\n        bookLibraries: objectBookLibraries,\r\n      };\r\n\r\n      const fieldErrors = handleBookErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const imageId = await uploadImage(image);\r\n      await createBook({ ...fields, image: imageId });\r\n\r\n      return goodRequest({\r\n        message: SuccessCreate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nconst CreateBook: React.FC = () => {\r\n  const submit = useSubmit();\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n  const data = useLoaderData();\r\n\r\n  const [book, setBook] = useState<BookState>(initialBook);\r\n\r\n  const categories = data.categories;\r\n  const publishHouses = data.publishHouses;\r\n  const libraries = data.libraries;\r\n  const languages = data.languages;\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(`/books`);\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: BooksSubmitProps) => {\r\n    const fieldErrors = handleBookErrors(book);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringBookLibraries = JSON.stringify(book.bookLibraries);\r\n\r\n    submit(\r\n      {\r\n        ...book,\r\n        bookLibraries: stringBookLibraries,\r\n        intent: \"create\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: \"/books/create\",\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={CreateBookTitle} backUrl=\"/books\" />\r\n      <BooksForm\r\n        onSubmit={handleOnSubmit}\r\n        setBook={setBook}\r\n        book={book}\r\n        categories={categories}\r\n        publishHouses={publishHouses}\r\n        libraries={libraries}\r\n        languages={languages}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default CreateBook;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { useActionData, useNavigate, useSubmit } from \"@remix-run/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport LoansForm from \"~/components/Loans/Forms\";\r\nimport { getReaderByEmail } from \"~/server/readers.server\";\r\nimport { LoanState, LoansSubmitProps } from \"~/types/Loans.type\";\r\nimport {\r\n  CreateLoanTitle,\r\n  ErrorCreate,\r\n  SuccessCreate,\r\n  initialLoan,\r\n} from \"~/components/Loans/Loans.const\";\r\nimport { getBookBySku } from \"~/server/books.server\";\r\nimport { handleLoanErrors } from \"~/components/Loans/Loans.helper\";\r\nimport { createLoan } from \"~/server/loans.server\";\r\nimport { isBoolean, isString } from \"lodash\";\r\nimport { Status } from \"@prisma/client\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const email = url.searchParams.get(\"email\") || \"\";\r\n    const sku = url.searchParams.get(\"sku\") || \"\";\r\n\r\n    if (email) {\r\n      const reader = await getReaderByEmail({ email });\r\n      return goodRequest({ reader });\r\n    }\r\n\r\n    if (sku) {\r\n      const book = await getBookBySku({ sku });\r\n      return goodRequest({ book });\r\n    }\r\n\r\n    return {};\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"create\") {\r\n      const status = formData.get(\"status\");\r\n      const reader = formData.get(\"reader\");\r\n      const books = formData.get(\"books\");\r\n\r\n      if (!isString(status) || !isString(reader) || !isString(books)) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      const objectReader = JSON.parse(reader);\r\n      const objectBooks = JSON.parse(books);\r\n\r\n      const fields = {\r\n        status: status as Status,\r\n        reader: objectReader,\r\n        books: objectBooks,\r\n      };\r\n\r\n      const fieldErrors = handleLoanErrors(fields);\r\n\r\n      if (Object.values(fieldErrors).some(Boolean)) {\r\n        return badRequest({\r\n          message: ErrorCreate,\r\n          success: false,\r\n        });\r\n      }\r\n      await createLoan(fields);\r\n\r\n      return goodRequest({\r\n        message: SuccessCreate,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nconst CreateLoan: React.FC = () => {\r\n  const submit = useSubmit();\r\n\r\n  const actionData = useActionData();\r\n  const navigate = useNavigate();\r\n\r\n  const [loan, setLoan] = useState<LoanState>(initialLoan);\r\n\r\n  useEffect(() => {\r\n    if (actionData && isBoolean(actionData.success)) navigate(`/loans`);\r\n  }, [actionData]);\r\n\r\n  const handleOnSubmit = ({ callback }: LoansSubmitProps) => {\r\n    const fieldErrors = handleLoanErrors(loan);\r\n\r\n    if (Object.values(fieldErrors).some(Boolean)) {\r\n      callback(fieldErrors);\r\n      return;\r\n    }\r\n\r\n    const stringReader = JSON.stringify(loan.reader);\r\n    const stringBooks = JSON.stringify(loan.books);\r\n    const stringPenalty = JSON.stringify(loan.penalty);\r\n\r\n    submit(\r\n      {\r\n        ...loan,\r\n        reader: stringReader,\r\n        books: stringBooks,\r\n        penalty: stringPenalty,\r\n        intent: \"create\",\r\n      },\r\n      {\r\n        method: \"post\",\r\n        action: `/loans/create`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={CreateLoanTitle} backUrl=\"/loans\" />\r\n      <LoansForm onSubmit={handleOnSubmit} setLoan={setLoan} loan={loan} />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default CreateLoan;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport BooksOverview from \"~/components/Books/Overview\";\r\nimport {\r\n  ErrorDelete,\r\n  Books,\r\n  NewBook,\r\n  SuccessDelete,\r\n} from \"~/components/Books/Books.const\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport {\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { getPaginatedBooks, deleteBook } from \"~/server/books.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { debounce, isString } from \"lodash\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { checkIfNumber } from \"@/utils/common\";\r\nimport { useSearchParams, URLSearchParamsInit } from \"react-router-dom\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { getCategories } from \"~/server/categories.server\";\r\nimport { FilterState } from \"~/types/Books.type\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { getLibraries } from \"~/server/libraries.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const page = url.searchParams.get(\"page\");\r\n    const search = url.searchParams.get(\"search\") || \"\";\r\n    const category = url.searchParams.get(\"category\") || \"\";\r\n    const library = url.searchParams.get(\"library\") || \"\";\r\n\r\n    let pageNumber = 1;\r\n    if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n    const [books, categories, libraries] = await Promise.all([\r\n      getPaginatedBooks({\r\n        page: pageNumber,\r\n        search,\r\n        category,\r\n        library,\r\n      }),\r\n      getCategories(),\r\n      getLibraries(),\r\n    ]);\r\n\r\n    return goodRequest({ books, categories, libraries });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"delete\") {\r\n      const bookId = formData.get(\"bookId\");\r\n\r\n      if (!isString(bookId)) {\r\n        return badRequest({\r\n          message: ErrorDelete,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await deleteBook({ bookId });\r\n\r\n      return goodRequest({\r\n        message: SuccessDelete,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst PaginatedBooks: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const data = useLoaderData();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n  const search = searchParams.get(\"search\") || \"\";\r\n  const category = searchParams.get(\"category\") || \"\";\r\n  const library = searchParams.get(\"library\") || \"\";\r\n\r\n  let pageNumber = 1;\r\n  if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n  const books = data.books;\r\n  const categories = data.categories;\r\n  const libraries = data.libraries;\r\n\r\n  const filterCategory = categories.find(\r\n    (item: AutocompleteOptions) => item.name === category\r\n  );\r\n\r\n  const filterLibrary = libraries.find(\r\n    (item: AutocompleteOptions) => item.name === library\r\n  );\r\n\r\n  const [filter, setFilter] = useState<FilterState>({\r\n    search,\r\n    category: filterCategory?.id || \"\",\r\n    library: filterLibrary?.id || \"\",\r\n  });\r\n\r\n  const handleCreateBook = () => {\r\n    navigate(`${location.pathname}/create`);\r\n  };\r\n\r\n  const handleChangePage = (pageNumber: number) => {\r\n    setSearchParams((oldSearchParams: URLSearchParams) => ({\r\n      ...oldSearchParams,\r\n      page: pageNumber.toString(),\r\n    }));\r\n  };\r\n  const debounceSearchChange = useCallback(\r\n    debounce((value: string) => {\r\n      let params: URLSearchParamsInit = {};\r\n\r\n      if (value) params = { ...params, search: value };\r\n      if (category) params = { ...params, category };\r\n      if (library) params = { ...params, library };\r\n\r\n      setSearchParams(params);\r\n    }, 500),\r\n    [category, library]\r\n  );\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setFilter((oldValue: FilterState) => ({ ...oldValue, search: value }));\r\n    debounceSearchChange(value);\r\n  };\r\n\r\n  const handleCategoryChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      category: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (library) params = { ...params, library };\r\n    if (value) params = { ...params, category: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleLibraryChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      library: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (category) params = { ...params, category };\r\n    if (value) params = { ...params, library: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    submit(\r\n      {\r\n        bookId: id,\r\n        intent: \"delete\",\r\n      },\r\n      {\r\n        method: \"delete\",\r\n        action: `/books${location.search}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={Books}>\r\n        <Button\r\n          title={NewBook}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleCreateBook}\r\n        />\r\n      </LayoutTitle>\r\n\r\n      <BooksOverview\r\n        books={books}\r\n        page={pageNumber}\r\n        onPageChange={handleChangePage}\r\n        filter={filter}\r\n        onSearchChange={handleSearchChange}\r\n        onCategoryChange={handleCategoryChange}\r\n        onLibraryChange={handleLibraryChange}\r\n        onDelete={handleDelete}\r\n        categories={categories}\r\n        libraries={libraries}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default PaginatedBooks;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport Input from \"@/components/Input\";\r\nimport Table from \"@/components/Table\";\r\nimport Autocomplete from \"@/components/Autocomplete\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {\r\n  SearchPlaceholder,\r\n  booksColumns,\r\n  Categories,\r\n  Libraries,\r\n} from \"../Books.const\";\r\nimport { BooksOverviewProps } from \"~/types/Books.type\";\r\nimport { StyledFilters } from \"../Books.style\";\r\nimport { StyledAutocomplete } from \"~/components/Loans/Loans.style\";\r\n\r\nconst BooksOverview: React.FC<BooksOverviewProps> = ({\r\n  books,\r\n  page,\r\n  filter,\r\n  onPageChange,\r\n  onSearchChange,\r\n  onCategoryChange,\r\n  onLibraryChange,\r\n  onDelete,\r\n  categories,\r\n  libraries,\r\n}) => {\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"30px\">\r\n        <StyledFilters>\r\n          <Input\r\n            placeholder={SearchPlaceholder}\r\n            onChange={onSearchChange}\r\n            width=\"300px\"\r\n            value={filter.search}\r\n          />\r\n          <StyledAutocomplete>\r\n            <Autocomplete\r\n              onChange={onCategoryChange}\r\n              options={categories}\r\n              value={filter.category}\r\n              placeholder={Categories}\r\n              width=\"200px\"\r\n            />\r\n            <Autocomplete\r\n              onChange={onLibraryChange}\r\n              options={libraries}\r\n              value={filter.library}\r\n              placeholder={Libraries}\r\n              width=\"200px\"\r\n            />\r\n          </StyledAutocomplete>\r\n        </StyledFilters>\r\n\r\n        <Table\r\n          columns={booksColumns}\r\n          rows={books.data}\r\n          count={books.count}\r\n          page={page}\r\n          onPageChange={onPageChange}\r\n          onDelete={onDelete}\r\n        />\r\n      </ColumnFlex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BooksOverview;\r\n", "import { ColumnFlex } from \"@/components/Flex\";\r\nimport LayoutTitle from \"~/components/LayoutTitle\";\r\nimport LoansOverview from \"~/components/Loans/Overview\";\r\nimport {\r\n  ErrorDelete,\r\n  Loans,\r\n  NewLoan,\r\n  SuccessDelete,\r\n  LoanStatuses,\r\n} from \"~/components/Loans/Loans.const\";\r\nimport Button from \"@/components/Button\";\r\nimport { ButtonVariant } from \"@/components/Button/Button.type\";\r\nimport {\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n  useSubmit,\r\n} from \"@remix-run/react\";\r\nimport { getPaginatedLoans, deleteLoan } from \"~/server/loans.server\";\r\nimport { badRequest, goodRequest } from \"~/server/request.server\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { debounce, isString } from \"lodash\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { checkIfNumber } from \"@/utils/common\";\r\nimport { useSearchParams, URLSearchParamsInit } from \"react-router-dom\";\r\nimport ErrorInterface from \"~/components/ErrorInterface\";\r\nimport { getUserId } from \"~/server/users.server\";\r\nimport { AutocompleteOptions } from \"@/components/Autocomplete/Autocomplete.type\";\r\nimport { FilterState } from \"~/types/Loans.type\";\r\nimport { getLibraries } from \"~/server/libraries.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const page = url.searchParams.get(\"page\");\r\n    const search = url.searchParams.get(\"search\") || \"\";\r\n    const library = url.searchParams.get(\"library\") || \"\";\r\n    const status = url.searchParams.get(\"status\") || \"\";\r\n\r\n    let pageNumber = 1;\r\n    if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n    const [loans, libraries] = await Promise.all([\r\n      getPaginatedLoans({\r\n        page: pageNumber,\r\n        search,\r\n        library,\r\n        status,\r\n      }),\r\n      getLibraries(),\r\n    ]);\r\n\r\n    return goodRequest({ loans, libraries });\r\n  } catch (error: any) {\r\n    throw new Error(error.message || ErrorMessage);\r\n  }\r\n};\r\n\r\nexport const ErrorBoundary = () => {\r\n  return <ErrorInterface />;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"delete\") {\r\n      const loanId = formData.get(\"loanId\");\r\n\r\n      if (!isString(loanId)) {\r\n        return badRequest({\r\n          message: ErrorDelete,\r\n          success: false,\r\n        });\r\n      }\r\n\r\n      await deleteLoan({ loanId });\r\n\r\n      return goodRequest({\r\n        message: SuccessDelete,\r\n        success: true,\r\n      });\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst PaginatedLoans: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const data = useLoaderData();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n  const search = searchParams.get(\"search\") || \"\";\r\n  const library = searchParams.get(\"library\") || \"\";\r\n  const status = searchParams.get(\"status\") || \"\";\r\n\r\n  let pageNumber = 1;\r\n  if (page && checkIfNumber(page)) pageNumber = parseInt(page);\r\n\r\n  const loans = data.loans;\r\n  const libraries = data.libraries;\r\n\r\n  const filterLibraries = libraries.find(\r\n    (item: AutocompleteOptions) => item.name === library\r\n  );\r\n\r\n  const filterStatus = LoanStatuses.find(\r\n    (item: AutocompleteOptions) => item.name === status\r\n  );\r\n\r\n  const [filter, setFilter] = useState<FilterState>({\r\n    search,\r\n    library: filterLibraries?.id || \"\",\r\n    status: filterStatus?.id || \"\",\r\n  });\r\n\r\n  const handleCreateLoan = () => {\r\n    navigate(`${location.pathname}/create`);\r\n  };\r\n\r\n  const handleChangePage = (pageNumber: number) => {\r\n    setSearchParams((oldSearchParams: URLSearchParams) => ({\r\n      ...oldSearchParams,\r\n      page: pageNumber.toString(),\r\n    }));\r\n  };\r\n\r\n  const debounceSearchChange = useCallback(\r\n    debounce((value: string) => {\r\n      let params: URLSearchParamsInit = {};\r\n\r\n      if (value) params = { ...params, search: value };\r\n      if (library) params = { ...params, library };\r\n      if (status) params = { ...params, status };\r\n\r\n      setSearchParams(params);\r\n    }, 500),\r\n    [library, status]\r\n  );\r\n\r\n  const handleSearchChange = (value: string) => {\r\n    setFilter((oldValue: FilterState) => ({ ...oldValue, search: value }));\r\n    debounceSearchChange(value);\r\n  };\r\n\r\n  const handleLibraryChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      library: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (status) params = { ...params, status };\r\n    if (value) params = { ...params, library: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleStatusChange = (value: AutocompleteOptions | null) => {\r\n    setFilter((oldValue: FilterState) => ({\r\n      ...oldValue,\r\n      status: value?.id || \"\",\r\n    }));\r\n\r\n    let params: URLSearchParamsInit = {};\r\n\r\n    if (search) params = { ...params, search };\r\n    if (library) params = { ...params, library };\r\n    if (value) params = { ...params, status: value?.name || \"\" };\r\n\r\n    setSearchParams(params);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    submit(\r\n      {\r\n        loanId: id,\r\n        intent: \"delete\",\r\n      },\r\n      {\r\n        method: \"delete\",\r\n        action: `/loans${location.search}`,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnFlex>\r\n      <LayoutTitle title={Loans}>\r\n        <Button\r\n          title={NewLoan}\r\n          variant={ButtonVariant.contained}\r\n          onClick={handleCreateLoan}\r\n        />\r\n      </LayoutTitle>\r\n\r\n      <LoansOverview\r\n        loans={loans}\r\n        page={pageNumber}\r\n        onPageChange={handleChangePage}\r\n        filter={filter}\r\n        onSearchChange={handleSearchChange}\r\n        onLibraryChange={handleLibraryChange}\r\n        onStatusChange={handleStatusChange}\r\n        onDelete={handleDelete}\r\n        libraries={libraries}\r\n      />\r\n    </ColumnFlex>\r\n  );\r\n};\r\n\r\nexport default PaginatedLoans;\r\n", "import Autocomplete from \"@/components/Autocomplete\";\r\nimport { ColumnFlex } from \"@/components/Flex\";\r\nimport Input from \"@/components/Input\";\r\nimport Table from \"@/components/Table\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { StyledFilters } from \"~/components/Books/Books.style\";\r\nimport {\r\n  SearchPlaceholder,\r\n  loansColumns,\r\n  Libraries,\r\n  Status,\r\n  LoanStatuses,\r\n} from \"../Loans.const\";\r\nimport { LoansOverviewProps } from \"~/types/Loans.type\";\r\nimport { StyledAutocomplete } from \"../Loans.style\";\r\n\r\nconst LoansOverview: React.FC<LoansOverviewProps> = ({\r\n  loans,\r\n  page,\r\n  filter,\r\n  onPageChange,\r\n  onSearchChange,\r\n  onLibraryChange,\r\n  onStatusChange,\r\n  onDelete,\r\n  libraries,\r\n}) => {\r\n  return (\r\n    <Paper className=\"overview-paper\">\r\n      <ColumnFlex gap=\"30px\">\r\n        <StyledFilters>\r\n          <Input\r\n            placeholder={SearchPlaceholder}\r\n            onChange={onSearchChange}\r\n            width=\"300px\"\r\n            value={filter.search}\r\n          />\r\n          <StyledAutocomplete>\r\n            <Autocomplete\r\n              onChange={onStatusChange}\r\n              options={LoanStatuses}\r\n              value={filter.status}\r\n              placeholder={Status}\r\n              width=\"200px\"\r\n            />\r\n            <Autocomplete\r\n              onChange={onLibraryChange}\r\n              options={libraries}\r\n              value={filter.library}\r\n              placeholder={Libraries}\r\n              width=\"200px\"\r\n            />\r\n          </StyledAutocomplete>\r\n        </StyledFilters>\r\n        <Table\r\n          columns={loansColumns}\r\n          rows={loans.data}\r\n          count={loans.count}\r\n          page={page}\r\n          onPageChange={onPageChange}\r\n          onDelete={onDelete}\r\n        />\r\n      </ColumnFlex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LoansOverview;\r\n", "import { ActionArgs, ActionFunction, redirect } from \"@remix-run/node\";\r\nimport { ErrorMessage } from \"~/const\";\r\nimport { badRequest } from \"~/server/request.server\";\r\nimport { removeUserSession } from \"~/server/session.server\";\r\nimport { getUserId } from \"~/server/users.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const userId = await getUserId(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/login\");\r\n  }\r\n  \r\n  try {\r\n    const formData = await request.formData();\r\n    const intent = formData.get(\"intent\");\r\n\r\n    if (intent === \"logout\") {\r\n      return removeUserSession(request);\r\n    }\r\n\r\n    return badRequest({\r\n      message: ErrorMessage,\r\n      success: false,\r\n    });\r\n  } catch (error: any) {\r\n    return badRequest({\r\n      message: error.message || ErrorMessage,\r\n      success: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return <div>Dashboard</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n", "export default {'version':'7b9571ec','entry':{'module':'/build/entry.client-Q5QGYKGC.js','imports':['/build/_shared/chunk-RRG2ZSJO.js','/build/_shared/chunk-Q2GWK4NB.js','/build/_shared/chunk-ROVVSRGE.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NM2M4KMR.js','imports':['/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app':{'id':'routes/__app','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app-MPY6URIF.js','imports':['/build/_shared/chunk-S26LAIZG.js','/build/_shared/chunk-E3SBBEWM.js','/build/_shared/chunk-UNWRKYGS.js','/build/_shared/chunk-BXRFTDIW.js','/build/_shared/chunk-3LB2INSY.js','/build/_shared/chunk-J4YCAMHB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/books/$bookId':{'id':'routes/__app/books/$bookId','parentId':'routes/__app','path':'books/:bookId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/books/$bookId-2VTVCYIG.js','imports':['/build/_shared/chunk-YP2T3TOH.js','/build/_shared/chunk-JFF2OY75.js','/build/_shared/chunk-BJOFLWAW.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/books/create':{'id':'routes/__app/books/create','parentId':'routes/__app','path':'books/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/books/create-LAKLNZZ4.js','imports':['/build/_shared/chunk-YP2T3TOH.js','/build/_shared/chunk-JFF2OY75.js','/build/_shared/chunk-BJOFLWAW.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/books/index':{'id':'routes/__app/books/index','parentId':'routes/__app','path':'books','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/books/index-FSGGHBHG.js','imports':['/build/_shared/chunk-MHR3PD5U.js','/build/_shared/chunk-JFF2OY75.js','/build/_shared/chunk-7HEI5WLP.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-BJOFLWAW.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/index':{'id':'routes/__app/index','parentId':'routes/__app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/index-XWFVYK25.js','imports':['/build/_shared/chunk-JKE4WBKB.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/libraries/$libraryId':{'id':'routes/__app/libraries/$libraryId','parentId':'routes/__app','path':'libraries/:libraryId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/libraries/$libraryId-ZOB7R2JZ.js','imports':['/build/_shared/chunk-2SG5YIHG.js','/build/_shared/chunk-H7M2G7JP.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-UZO325TB.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/libraries/create':{'id':'routes/__app/libraries/create','parentId':'routes/__app','path':'libraries/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/libraries/create-CSHWQOWG.js','imports':['/build/_shared/chunk-2SG5YIHG.js','/build/_shared/chunk-H7M2G7JP.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-UZO325TB.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/libraries/index':{'id':'routes/__app/libraries/index','parentId':'routes/__app','path':'libraries','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/libraries/index-R2HVIPOQ.js','imports':['/build/_shared/chunk-MHR3PD5U.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-H7M2G7JP.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/loans/$loanId':{'id':'routes/__app/loans/$loanId','parentId':'routes/__app','path':'loans/:loanId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/loans/$loanId-UGYSCD3G.js','imports':['/build/_shared/chunk-HVACH2VA.js','/build/_shared/chunk-ZPAFWGOK.js','/build/_shared/chunk-7HEI5WLP.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-BJOFLWAW.js','/build/_shared/chunk-M3PVRCIV.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/loans/create':{'id':'routes/__app/loans/create','parentId':'routes/__app','path':'loans/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/loans/create-RXGCWVMC.js','imports':['/build/_shared/chunk-HVACH2VA.js','/build/_shared/chunk-ZPAFWGOK.js','/build/_shared/chunk-7HEI5WLP.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-BJOFLWAW.js','/build/_shared/chunk-M3PVRCIV.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/loans/index':{'id':'routes/__app/loans/index','parentId':'routes/__app','path':'loans','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/loans/index-LIC2WXEL.js','imports':['/build/_shared/chunk-ZPAFWGOK.js','/build/_shared/chunk-MHR3PD5U.js','/build/_shared/chunk-7HEI5WLP.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-YS4H57FG.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/readers/$readerId':{'id':'routes/__app/readers/$readerId','parentId':'routes/__app','path':'readers/:readerId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/readers/$readerId-FM6QYJKH.js','imports':['/build/_shared/chunk-XGBQRHJA.js','/build/_shared/chunk-R5U6GGLB.js','/build/_shared/chunk-M3PVRCIV.js','/build/_shared/chunk-UZO325TB.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/readers/create':{'id':'routes/__app/readers/create','parentId':'routes/__app','path':'readers/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/readers/create-BWNOXMUT.js','imports':['/build/_shared/chunk-XGBQRHJA.js','/build/_shared/chunk-R5U6GGLB.js','/build/_shared/chunk-M3PVRCIV.js','/build/_shared/chunk-UZO325TB.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-Q2HNFAM7.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__app/readers/index':{'id':'routes/__app/readers/index','parentId':'routes/__app','path':'readers','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/readers/index-JADWPFYN.js','imports':['/build/_shared/chunk-MHR3PD5U.js','/build/_shared/chunk-RJBCBGO4.js','/build/_shared/chunk-R5U6GGLB.js','/build/_shared/chunk-M3PVRCIV.js','/build/_shared/chunk-FM3SD7MT.js','/build/_shared/chunk-7LXKMVFP.js','/build/_shared/chunk-VG7Y4ZDF.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/__auth':{'id':'routes/__auth','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__auth-VLM7Z4C7.js','imports':['/build/_shared/chunk-S26LAIZG.js','/build/_shared/chunk-Q7FI6BBZ.js','/build/_shared/chunk-BXRFTDIW.js','/build/_shared/chunk-J4YCAMHB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/login':{'id':'routes/__auth/login','parentId':'routes/__auth','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__auth/login-25UOKEER.js','imports':['/build/_shared/chunk-JKE4WBKB.js','/build/_shared/chunk-E3SBBEWM.js','/build/_shared/chunk-4RHOFEEN.js','/build/_shared/chunk-3QB4YM6I.js','/build/_shared/chunk-CZAMDIPU.js','/build/_shared/chunk-3LB2INSY.js','/build/_shared/chunk-CEGYRLZN.js','/build/_shared/chunk-UNMXUG3K.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-7B9571EC.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\__auth.tsx\";\nimport * as route2 from \"./routes\\\\__auth\\\\login.tsx\";\nimport * as route3 from \"./routes\\\\__app.tsx\";\nimport * as route4 from \"./routes\\\\__app\\\\libraries\\\\$libraryId.tsx\";\nimport * as route5 from \"./routes\\\\__app\\\\readers\\\\$readerId.tsx\";\nimport * as route6 from \"./routes\\\\__app\\\\libraries\\\\create.tsx\";\nimport * as route7 from \"./routes\\\\__app\\\\libraries\\\\index.tsx\";\nimport * as route8 from \"./routes\\\\__app\\\\readers\\\\create.tsx\";\nimport * as route9 from \"./routes\\\\__app\\\\books\\\\$bookId.tsx\";\nimport * as route10 from \"./routes\\\\__app\\\\loans\\\\$loanId.tsx\";\nimport * as route11 from \"./routes\\\\__app\\\\readers\\\\index.tsx\";\nimport * as route12 from \"./routes\\\\__app\\\\books\\\\create.tsx\";\nimport * as route13 from \"./routes\\\\__app\\\\loans\\\\create.tsx\";\nimport * as route14 from \"./routes\\\\__app\\\\books\\\\index.tsx\";\nimport * as route15 from \"./routes\\\\__app\\\\loans\\\\index.tsx\";\nimport * as route16 from \"./routes\\\\__app\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/__auth\": {\n      id: \"routes/__auth\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__auth/login\": {\n      id: \"routes/__auth/login\",\n      parentId: \"routes/__auth\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__app\": {\n      id: \"routes/__app\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__app/libraries/$libraryId\": {\n      id: \"routes/__app/libraries/$libraryId\",\n      parentId: \"routes/__app\",\n      path: \"libraries/:libraryId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__app/readers/$readerId\": {\n      id: \"routes/__app/readers/$readerId\",\n      parentId: \"routes/__app\",\n      path: \"readers/:readerId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__app/libraries/create\": {\n      id: \"routes/__app/libraries/create\",\n      parentId: \"routes/__app\",\n      path: \"libraries/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__app/libraries/index\": {\n      id: \"routes/__app/libraries/index\",\n      parentId: \"routes/__app\",\n      path: \"libraries\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__app/readers/create\": {\n      id: \"routes/__app/readers/create\",\n      parentId: \"routes/__app\",\n      path: \"readers/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__app/books/$bookId\": {\n      id: \"routes/__app/books/$bookId\",\n      parentId: \"routes/__app\",\n      path: \"books/:bookId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/__app/loans/$loanId\": {\n      id: \"routes/__app/loans/$loanId\",\n      parentId: \"routes/__app\",\n      path: \"loans/:loanId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__app/readers/index\": {\n      id: \"routes/__app/readers/index\",\n      parentId: \"routes/__app\",\n      path: \"readers\",\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__app/books/create\": {\n      id: \"routes/__app/books/create\",\n      parentId: \"routes/__app\",\n      path: \"books/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/__app/loans/create\": {\n      id: \"routes/__app/loans/create\",\n      parentId: \"routes/__app\",\n      path: \"loans/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/__app/books/index\": {\n      id: \"routes/__app/books/index\",\n      parentId: \"routes/__app\",\n      path: \"books\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/__app/loans/index\": {\n      id: \"routes/__app/loans/index\",\n      parentId: \"routes/__app\",\n      path: \"loans\",\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/__app/index\": {\n      id: \"routes/__app/index\",\n      parentId: \"routes/__app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route16\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "theme", "import_styles", "import_jsx_dev_runtime", "MuiThemeProvider", "import_node", "import_react", "bcrypt", "import_styles", "MuiStyled", "CircularProgress", "theme", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_styles", "MuiStyled", "Button", "theme", "import_jsx_dev_runtime", "import_styles", "MuiStyled", "TextField", "theme", "import_jsx_dev_runtime", "import_styles", "MuiStyled", "Paper", "theme", "Typography", "Alert", "import_jsx_dev_runtime", "DashboardIcon", "DensitySmallIcon", "LibraryBooksIcon", "PeopleAltIcon", "HomeWorkIcon", "import_react", "import_styled_components", "styled", "import_Typography", "import_jsx_dev_runtime", "Typography", "import_node", "import_lodash", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_Box", "import_Menu", "import_Toolbar", "import_styles", "MuiStyled", "AppBar", "theme", "IconButton", "Box", "ListItemButton", "Drawer", "Divider", "import_react", "import_jsx_dev_runtime", "Toolbar", "List", "ListItem", "ListItemIcon", "ListItemText", "LogoutIcon", "import_Typography", "import_jsx_dev_runtime", "Toolbar", "MenuIcon", "Typography", "Box", "import_react", "import_Alert", "import_jsx_dev_runtime", "isBoolean", "Snackbar", "Alert", "action", "loader", "import_node", "import_react", "import_lodash", "import_styled_components", "styled", "import_jsx_dev_runtime", "import_Typography", "import_styled_components", "import_styles", "import_IconButton", "MuiStyled", "ArrowBackIosNewIcon", "theme", "StyledIconButton", "IconButton", "styled", "import_react", "import_jsx_dev_runtime", "StyledIconButton", "Typography", "import_Paper", "import_react", "dayjs", "moment", "import_TextField", "import_jsx_dev_runtime", "TextField", "import_Typography", "import_styles", "import_styled_components", "MuiStyled", "Typography", "theme", "styled", "import_TextField", "import_styles", "MuiStyled", "Autocomplete", "theme", "import_jsx_dev_runtime", "value", "TextField", "import_styled_components", "import_styles", "styled", "MuiStyled", "Fab", "theme", "RemoveIcon", "import_jsx_dev_runtime", "_a", "Paper", "import_lodash", "import_jsx_dev_runtime", "loader", "action", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_lodash", "import_Paper", "import_react", "import_LocalizationProvider", "import_AdapterDayjs", "import_TextField", "import_jsx_dev_runtime", "TextField", "ErrorCreate", "SuccessCreate", "ErrorGetPaginated", "ErrorGetSingle", "ErrorDelete", "SuccessDelete", "ErrorUpdate", "SuccessUpdate", "SearchPlaceholder", "Details", "Cities", "import_Typography", "import_jsx_dev_runtime", "Paper", "Typography", "Details", "import_lodash", "import_bcryptjs", "nodemailer", "ErrorGetPaginated", "ErrorGetSingle", "ErrorCreate", "generator", "bcrypt", "ErrorUpdate", "ErrorDelete", "import_jsx_dev_runtime", "loader", "ErrorGetSingle", "ErrorBoundary", "action", "ErrorUpdate", "SuccessUpdate", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_lodash", "import_jsx_dev_runtime", "loader", "action", "ErrorBoundary", "ErrorBoundary", "action", "loader", "import_TableCell", "import_styles", "MuiStyled", "TableRow", "theme", "Table", "TableCell", "import_IconButton", "import_jsx_dev_runtime", "IconButton", "DeleteOutlineIcon", "import_react", "import_jsx_dev_runtime", "TableContainer", "TableHead", "TableBody", "TableCell", "TablePagination", "import_Paper", "import_jsx_dev_runtime", "Paper", "import_react", "import_react", "import_lodash", "import_node", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "pageNumber", "create_exports", "ErrorBoundary", "action", "create_default", "loader", "import_node", "import_react", "import_lodash", "import_jsx_dev_runtime", "loader", "action", "ErrorCreate", "SuccessCreate", "ErrorBoundary", "create_default", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_lodash", "import_lodash", "import_Paper", "import_react", "ErrorCreate", "SuccessCreate", "ErrorGetPaginated", "ErrorGetSingle", "ErrorDelete", "SuccessDelete", "ErrorUpdate", "SuccessUpdate", "SearchPlaceholder", "Details", "Libraries", "import_jsx_dev_runtime", "import_Typography", "import_lodash", "import_styled_components", "styled", "import_Typography", "import_jsx_dev_runtime", "Typography", "FormHelperText", "import_jsx_dev_runtime", "image", "Paper", "Typography", "Details", "AddIcon", "import_lodash", "ErrorGetPaginated", "ErrorDelete", "ErrorCreate", "book", "ErrorGetSingle", "ErrorUpdate", "cloudinary", "uuid", "import_jsx_dev_runtime", "loader", "ErrorGetSingle", "ErrorBoundary", "action", "ErrorUpdate", "SuccessUpdate", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_lodash", "import_client", "Books", "Details", "Libraries", "ErrorCreate", "SuccessCreate", "ErrorGetPaginated", "ErrorGetSingle", "ErrorDelete", "SuccessDelete", "ErrorUpdate", "SuccessUpdate", "SearchPlaceholder", "PrismaStatus", "import_Paper", "import_react", "import_Typography", "import_react", "import_material", "import_styled_components", "import_styles", "import_FormHelperText", "import_IconButton", "import_Typography", "styled", "StyledTable", "MuiStyled", "FormHelperText", "theme", "StyledIconButton", "IconButton", "StyleFlex", "StyledTypography", "Typography", "import_react", "import_FormHelperText", "import_lodash", "import_jsx_dev_runtime", "reader", "StyledTable", "FormHelperText", "import_react", "import_material", "import_react", "import_lodash", "import_DeleteOutline", "import_jsx_dev_runtime", "books", "StyledTable", "index", "StyledIconButton", "DeleteOutlineIcon", "import_material", "import_jsx_dev_runtime", "StyleFlex", "StyledTypography", "import_material", "import_jsx_dev_runtime", "StyleFlex", "StyledTypography", "import_client", "import_lodash", "import_client", "import_jsx_dev_runtime", "Paper", "Typography", "Select", "MenuItem", "Details", "Books", "import_client", "import_lodash", "ErrorGetPaginated", "ErrorGetSingle", "ErrorCreate", "ErrorUpdate", "ErrorDelete", "import_jsx_dev_runtime", "loader", "ErrorGetSingle", "ErrorBoundary", "action", "ErrorUpdate", "SuccessUpdate", "ErrorBoundary", "action", "loader", "import_Paper", "import_jsx_dev_runtime", "Paper", "SearchPlaceholder", "Cities", "import_react", "import_react", "import_lodash", "import_node", "import_react_router_dom", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "SuccessDelete", "ErrorDelete", "pageNumber", "create_exports", "ErrorBoundary", "action", "create_default", "loader", "import_node", "import_react", "import_lodash", "import_jsx_dev_runtime", "loader", "action", "ErrorCreate", "SuccessCreate", "ErrorBoundary", "create_default", "create_exports", "ErrorBoundary", "action", "create_default", "loader", "import_node", "import_react", "import_lodash", "import_jsx_dev_runtime", "loader", "action", "ErrorCreate", "SuccessCreate", "ErrorBoundary", "create_default", "ErrorBoundary", "action", "loader", "import_Paper", "import_jsx_dev_runtime", "Paper", "SearchPlaceholder", "Libraries", "import_react", "import_react", "import_lodash", "import_node", "import_react_router_dom", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "SuccessDelete", "ErrorDelete", "pageNumber", "ErrorBoundary", "action", "loader", "import_Paper", "import_jsx_dev_runtime", "Paper", "SearchPlaceholder", "Libraries", "import_react", "import_react", "import_lodash", "import_node", "import_react_router_dom", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "SuccessDelete", "ErrorDelete", "pageNumber", "app_exports", "action", "app_default", "import_node", "import_jsx_dev_runtime", "action", "app_default", "create_exports", "app_exports"]
}

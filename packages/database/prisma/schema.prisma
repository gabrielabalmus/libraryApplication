generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type LibrarySchedule {
  mondayFriday TimeSchedule
  saturday     TimeSchedule
}

type TimeSchedule {
  from String
  to   String
}

model Libraries {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  address       String
  phone         String
  bookLibraries BookLibraries[]
  cityId        String          @db.ObjectId
  city          Cities          @relation(fields: [cityId], references: [id])
  deleted       Boolean
  schedule      LibrarySchedule
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Books {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String          @unique
  image          String          @unique
  author         String
  categoryId     String          @db.ObjectId
  category       Categories      @relation(fields: [categoryId], references: [id])
  publishHouseId String          @db.ObjectId
  publishHouse   PublishHouses   @relation(fields: [publishHouseId], references: [id])
  releaseYear    Int
  pagesNumber    Int
  language       String
  bookLibraries  BookLibraries[]
  deleted        Boolean
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Categories {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String  @unique
  value String  @unique
  books Books[]
}

model PublishHouses {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String  @unique
  value String  @unique
  books Books[]
}

model BookLibraries {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  bookId    String    @db.ObjectId
  book      Books     @relation(fields: [bookId], references: [id])
  libraryId String    @db.ObjectId
  library   Libraries @relation(fields: [libraryId], references: [id])
  SKU       String    @unique
  place     String
  deleted   Boolean
}

model Cities {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String      @unique
  value     String      @unique
  Libraries Libraries[]
}
